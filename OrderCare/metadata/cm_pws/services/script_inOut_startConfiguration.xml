<?xml version="1.0" encoding="UTF-8" ?>
<script name="cm_pws.services.inOut_startConfiguration">
  <highlight>32</highlight>
  <label>inOut_startConfiguration</label>
  <metaVersion>4</metaVersion>
  <parameterList>
    <parameter name="input" type="rifp">
      <type>dstruct_OCSConfigurationOperation.v1.types.StartConfiguration</type>
    </parameter>
  </parameterList>
  <valueType>dstruct_OCSConfigurationOperation.v1.types.StartConfigurationResponse</valueType>
  <script><![CDATA[
    try
    {
        var OP_REFERENCE = 'START_CONFIGURATION';

        var inputError = cm_pws.services.validateRequest(OP_REFERENCE, input);
        if(api_common.isFault(inputError)) {
            throw inputError;
        }

        var reference = input.sessionCommonInfo.reference;
        var configSession = new cm_pws.configSession();
        configSession.operation = OP_REFERENCE;
        configSession.request = input.toXML();
        input.sessionCommonInfo.mapTo(configSession);

        //TODO: Set User

        var projectCode = cm_pws.pwsGetProjectName();
        var projectDescription =  cm_pws.getProjectDescription(configSession.appId, reference);
        var projectMsg = cm_common.plmCreateProject(projectCode, projectDescription);
        if (projectMsg.isBasedOn("cm_spoc.fault")) {
            var fault = new api_common.data.fault();
            for(var i=0; i<projectMsg.message.length; i++)
                fault.addFault( projectMsg.message[i].code,  projectMsg.message[i].text);    //TODO: provide correct error code
            return fault;
        }

        var projectRef = epc.getProjectByCode(projectCode);
        if(api_common.isFault(projectRef))
            return projectRef;

        configSession.sessionId = projectRef.projectCode;
        configSession.isExecuted = true;
        var response = cm_pws.createConfigSessionByValue(configSession);
        if(api_common.isFault(response))
        {
            fault.addFault(response.code, response.text);
            return fault;
        }

        var output = new OCSConfigurationOperation.v1.types.StartConfigurationResponse();
        cm_pws.services.pwsMap_GenericResponse(output.sessionCommonInfoResult, configSession.operation, configSession.sessionId);
        return output;

    }
    catch (exp)
    {
        var code = eval("arguments.callee.name");
        var fault = api_common.createException(exp, code);    //TODO: correct error code
        return fault;
    }
  ]]></script>
</script>