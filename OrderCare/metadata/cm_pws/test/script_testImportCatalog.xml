<?xml version="1.0" encoding="UTF-8" ?>
<script name="cm_pws.test.testImportCatalog">
  <group>testScripts</group>
  <label>testImportCatalog</label>
  <metaVersion>4</metaVersion>
  <script><![CDATA[
    var log = cm_pws.test.clsLog();var testCaseInfo =  eval("arguments.callee.name") + " - ";log.newLine();log.setCheckPoint("STARTED");log.writeLn(testCaseInfo+ log.getCheckPoint());
    /////////////////////////////////////////////////////////////
    try{
        var fileName = Global.getConfigVariable("TEST_CATALOG_FILE_PATH");

        var option = new cwt_common.options( ["logGeneralInfo", "excludeBefore", "includeDomains", "successNum", "failNum", "logFileDir", "deletedFinder", "deleteProjectBeforeImport", "newProjectEffectiveDate", "effectiveEndDate", "newStatus", "maintainOffset", "updateFutureDates", "moveEndDatedObjects", "validateDates", "responseMsg"],
        [true, null, true, 0, 0, null, null,null,null,null,null,null,null,null,null,null],
        ["Log the General Information", "Exclude records updated before this time", "Import Domain Information", "Successful Number", "Failure Number", "Log File Directory", "Deleted Record Finder", "Delete Project Before Import", "New Project Effective Date", "Effective EndDate", "New Status", "Maintain Offset", "Update Future Dates", "Move EndDated Objects", "Validate Dates", "Response Message"],
        null );

        var fileReader = new FileReader(fileName);

        log.setCheckPoint("File Opened.")

        var rOption;
        rOption = cwt_pcmaintapi.importXLSFormatXML(fileReader, option);

        var successNum = rOption.getOption("successNum");
        var failNum = rOption.getOption("failNum");
        var totalNum = successNum + failNum;
        var respMsg = rOption.getOption("responseMsg");
        var displayString = "Import summary -- Total processed: " + totalNum  + ", Succeeded: " + successNum + ", Failed: " + failNum + "\n"+respMsg;

        log.setCheckPoint("CATALOG IMPORTED")
        if(failNum > 0){
            log.setCheckPoint(displayString);
            Global.throwException(displayString);
        }

    }
    catch(exp){
        var chkpntmsg = "[LastCheckPosition:"+log.getCheckPoint()+"]";log.writeLn(log.FAIL +"\t"+exp);log.setFailed(true);log.flush();
        // to have a valid server log for test cases since it is supposed to fail
        assertTrue(false, testCaseInfo+":"+chkpntmsg);
    }
    finally{
        if(!log.isFailed())log.writeLn(log.SUCCESS);
    }
  ]]></script>
</script>