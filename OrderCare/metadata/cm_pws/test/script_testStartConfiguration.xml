<?xml version="1.0" encoding="UTF-8" ?>
<script name="cm_pws.test.testStartConfiguration">
  <group>testScripts</group>
  <label>testStartConfiguration</label>
  <metaVersion>4</metaVersion>
  <parameterList>
    <parameter name="owner" type="rifp">
      <mandatory>true</mandatory>
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    var log = cm_pws.test.clsLog();var testCaseInfo =  eval("arguments.callee.name") + " - ";log.newLine();log.setCheckPoint("STARTED");log.writeLn(testCaseInfo+ log.getCheckPoint());
    /////////////////////////////////////////////////////////////
    try{

        var input = cm_pws.test.createRequest(null, "OCSConfigurationOperation.v1.types.StartConfiguration");
        var result = Global.invokeInterface("cm_pws.services.OCSConfigurationPort", "startConfiguration", input);

        assertFalse(!(result[0] instanceof OCSConfigurationOperation.v1.types.StartConfigurationResponse), "ERROR!")
        if(owner)
            owner.setProperty("sessionId", result[0].sessionCommonInfoResult.sessionId);


        Global.setSessionParameter("SESSION_ID", result[0].sessionCommonInfoResult.sessionId);

    }
    catch(exp){
        var ex = exp;var chkpntmsg = "[LastCheckPosition:"+log.getCheckPoint()+"]";log.writeLn(log.FAIL +"\t"+exp);log.setFailed(true);log.flush();
        // to have a valid server log for test cases since it is supposed to fail
        assertTrue(false, testCaseInfo+":"+chkpntmsg);
    }
    finally{
        if(!log.isFailed())log.writeLn(log.SUCCESS);
    }
  ]]></script>
</script>