<?xml version="1.0" encoding="UTF-8" ?>
<document name="cm_spoc.cwt_itemSearchForCode">
  <audit>true</audit>
  <dbSchema>CATALOG</dbSchema>
  <extends>doc_com.conceptwave.system.Document</extends>
  <guid>{d7fb57f9-a7ca-43b3-82fa-bde4d02959de}</guid>
  <highlight>66</highlight>
  <label>cwt_itemSearchForCode</label>
  <metaVersion>4</metaVersion>
  <variableList>
    <variable name="itemCode" type="leaf">
      <audit>true</audit>
      <column>ITEMCODE</column>
      <key>1</key>
      <label>Code</label>
      <propertyElement type="elfld">
        <label>Code</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>cwpc_item</table>
      <valueType>dtype_cwt_pcdd.catalogCode</valueType>
    </variable>
    <variable name="type" type="leaf">
      <column>TYPE</column>
      <label>Boolean</label>
      <table>cwpc_item</table>
      <valueType>dtype_com.conceptwave.system.Boolean</valueType>
    </variable>
    <variable name="baseItemCode" type="leaf">
      <audit>true</audit>
      <column>BASEITEMCODE</column>
      <label>Base Item</label>
      <propertyElement type="elref">
        <label>Base Item</label>
      </propertyElement>
      <table>cwpc_item</table>
      <valueType>dtype_cwt_pcdd.itemRef</valueType>
    </variable>
    <variable name="itemType" type="leaf">
      <audit>true</audit>
      <column>ITEMTYPE</column>
      <label>Item Type</label>
      <propertyElement type="elslct">
        <label>Item Type</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </optional>
        <sorted>false</sorted>
      </propertyElement>
      <table>cwpc_item</table>
      <valueType>dtype_cwt_common.cwtct_itemType</valueType>
    </variable>
    <variable name="name" type="leaf">
      <audit>true</audit>
      <column>NAME</column>
      <label>Name</label>
      <propertyElement type="elfld">
        <label>Name</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>cwpc_item</table>
      <valueType>dtype_cwt_pcdd.labelNoTranslation</valueType>
    </variable>
    <variable name="status" type="leaf">
      <audit>true</audit>
      <column>STATUS</column>
      <label>Status</label>
      <propertyElement type="elslct">
        <label>Status</label>
        <optional type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </optional>
        <sorted>false</sorted>
      </propertyElement>
      <table>cwpc_item</table>
      <valueType>dtype_cwt_pc.objectStateRef</valueType>
    </variable>
    <variable name="label" type="leaf">
      <audit>true</audit>
      <column>LABEL</column>
      <label>Label</label>
      <propertyElement type="eltrnsltion"/>
      <table>cwpc_item</table>
      <valueType>dtype_cwt_pcdd.label</valueType>
    </variable>
    <variable name="description" type="leaf">
      <audit>true</audit>
      <column>DESCRIPTION</column>
      <label>Description</label>
      <propertyElement type="eltxtArea"/>
      <table>cwpc_item</table>
      <valueType>dtype_cwt_pcdd.descriptionNoTranslation</valueType>
    </variable>
    <variable name="orderable" type="leaf">
      <audit>true</audit>
      <column>ORDERABLE</column>
      <label>Orderable</label>
      <propertyElement type="elchk">
        <label>Orderable</label>
      </propertyElement>
      <table>cwpc_item</table>
      <valueType>dtype_com.conceptwave.system.Boolean</valueType>
    </variable>
    <variable name="ownerId" type="leaf">
      <audit>true</audit>
      <column>OWNERID</column>
      <label>Owner</label>
      <propertyElement type="elref">
        <label>Owner</label>
      </propertyElement>
      <table>cwpc_item</table>
      <valueType>dtype_cwf_up.orgChartRef</valueType>
    </variable>
    <variable name="updatedBy" type="leaf">
      <column>UPDATEDBY</column>
      <label>System updated by</label>
      <propertyElement type="elrgrp">
        <label>System updated by</label>
      </propertyElement>
      <table>cwpc_item</table>
      <valueType>dtype_cwf.updatedBy</valueType>
    </variable>
    <variable name="lastUpdatedDate" type="leaf">
      <column>LASTUPDATEDDATE</column>
      <label>System last updated timestamp</label>
      <propertyElement type="eldate">
        <label>System last updated timestamp</label>
      </propertyElement>
      <table>cwpc_item</table>
      <valueType>dtype_cwf.lastUpdatedDate</valueType>
    </variable>
    <variable name="cwCreatedBy" type="leaf">
      <column>CWCREATEDBY</column>
      <label>System created by</label>
      <propertyElement type="elfld">
        <label>System created by</label>
      </propertyElement>
      <table>cwpc_item</table>
      <valueType>dtype_cwf.cwCreatedBy</valueType>
    </variable>
    <variable name="cwCreated" type="leaf">
      <column>CWCREATED</column>
      <label>System created timestamp</label>
      <table>cwpc_item</table>
      <valueType>dtype_cwf.cwCreated</valueType>
    </variable>
    <variable name="cwDocStamp" type="leaf">
      <column>CWDOCSTAMP</column>
      <label>System doc stamp</label>
      <table>cwpc_item</table>
      <valueType>dtype_cwf.cwDocStamp</valueType>
    </variable>
    <variable name="oldItemCode" type="leaf">
      <dontMap>true</dontMap>
      <label>Catalog Code</label>
      <valueType>dtype_cwt_pcdd.catalogCode</valueType>
    </variable>
    <variable name="projectRef" type="leaf">
      <dontMap>true</dontMap>
      <label>Project</label>
      <propertyElement type="elref">
        <label>Project</label>
      </propertyElement>
      <valueType>dtype_cwt_pc.projectRef</valueType>
    </variable>
    <variable name="startDate" type="leaf">
      <audit>true</audit>
      <column>STARTDATE</column>
      <label>Start Date</label>
      <propertyElement type="eldatetime">
        <displayFormat>MM/dd/yyyy HH</displayFormat>
        <optional type="varPath">
          <variablePathList>
            <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
          </variablePathList>
        </optional>
      </propertyElement>
      <table>cwpc_item</table>
      <valueType>dtype_cwt_pcdd.startDate</valueType>
    </variable>
    <variable name="endDate" type="leaf">
      <audit>true</audit>
      <column>ENDDATE</column>
      <label>End Date</label>
      <table>cwpc_item</table>
      <valueType>dtype_cwt_pcdd.endDate</valueType>
    </variable>
  </variableList>
  <methodList>
    <method name="cwLeafInitAction$startDate" type="laction">
      <path>doc_cm_spoc.cwt_itemSearchForCode/leaf_startDate</path>
      <type>initializer</type>
      <valueType>doc_cm_spoc.cwt_itemSearchForCode/leaf_startDate</valueType>
      <script><![CDATA[
        var date = cwt_pc.getDefaultProjectEffectiveDate();
        if(date!=null)
            return date;
        else
            return new Date();
      ]]></script>
    </method>
    <method name="cwLeafInitAction$status" type="laction">
      <path>doc_cm_spoc.cwt_itemSearchForCode/leaf_status</path>
      <type>initializer</type>
      <valueType>doc_cm_spoc.cwt_itemSearchForCode/leaf_status</valueType>
      <script><![CDATA["DEF"]]></script>
    </method>
    <method name="cwLeafInitAction$ownerId" type="laction">
      <path>doc_cm_spoc.cwt_itemSearchForCode/leaf_ownerId</path>
      <type>initializer</type>
      <valueType>doc_cm_spoc.cwt_itemSearchForCode/leaf_ownerId</valueType>
      <script><![CDATA[
        if (UserProfile.userProfile()){
              return UserProfile.userProfile().positionId;
        }
        else{
              return null;
        }
      ]]></script>
    </method>
    <method name="cwOnDocVisualKey" type="action">
      <system>true</system>
      <valueType>dtype_com.conceptwave.system.String</valueType>
      <script>return this.itemCode;</script>
    </method>
    <method name="objType" type="uimthd">
      <script><![CDATA[return "item";]]></script>
    </method>
    <method name="showUsage" type="uimthd">
      <script><![CDATA[
        var finder = new cwt_pc.objectUsageFinder.UserInterface(null, this);
        finder.search.model.searchType = "item";
        finder.search.model.searchCode = this.itemCode;
        finder.searchAction();
        return finder;
      ]]></script>
    </method>
    <method name="cwOnDocLoad" type="action">
      <system>true</system>
      <script><![CDATA[
        this.cw$super_cwOnDocLoad();
        if(this.isStored)
          this.projectRef = cwt_pc.getProjectAssignment("cwt_pc:cwt_item", null, this.itemCode);
      ]]></script>
    </method>
    <method name="showChangeHistory" type="uimthd">
      <script><![CDATA[
        var finder = new cwt_pc.changeHistoryFinder.UserInterface(null, this);
        finder.search.model.objectCode = this.getKeys().toString();
        var types = this.metadataType;
        types = types + ",cwt_pc:cwt_item";
        types = types + ",cwt_pc:cwt_itemImage";
        types = types + ",cwt_pc:cwt_itemAttachment";
        types = types + ",cwt_pc:cwt_itemChargeVersion";
        types = types + ",cwt_pc:cwt_itemRule";
        types = types + ",cwt_pc:cwt_itemDescription";
        types = types + ",cwt_pc:cwt_systemIdentifier";
        types = types + ",cwt_pc:cwt_itemAttribute";
        types = types + ",cwt_pc:cwt_itemRelation";
        types = types + ",cwt_pc:cwt_relationAttribute";
        types = types + ",cwt_pc:cwt_itemGroup";
        finder.search.model.catalogType = types;
        finder.searchAction();
        this.addCodeTableChangeHistory(finder);
        return finder;
      ]]></script>
    </method>
    <method name="getKeys" type="uimthd">
      <script><![CDATA[
        var keys = new Array();
        keys.push(this.itemCode);

        //get list of children
        var children = this.getChildren();

        //push the key of each child object into the array
        for (var i=0; children && i<children.length; i++) {
              keys.push(children[i].id);
        }

                //Get all deleted objects keys of this Item
                var deletedObjectKeys = cwt_pc.getDeletedObjectRecord("Item", this.itemCode);
                for (var i=0; deletedObjectKeys && i<deletedObjectKeys.length; i++) {
                      keys.push(deletedObjectKeys[i]);
                }

        return keys;
      ]]></script>
    </method>
    <method name="getChildren" type="uimthd">
      <script><![CDATA[
        //itemImage
        var result = new Array();
        var finder = new Finder ("cwt_pc:cwt_itemImageFinder");
        finder.searchDocument.itemCode = this.itemCode;
        cwt_pc.addToResult(finder, result);

        //item attachment
        var finder = new Finder ("cwt_pc:cwt_itemAttachmentFinder");
        finder.searchDocument.itemCode = this.itemCode;
        cwt_pc.addToResult(finder, result);

        //item charge version
        var finder = new Finder ("cwt_pc:cwt_itemChargeVersionFinder");
        finder.searchDocument.itemCode = this.itemCode;
        cwt_pc.addToResult(finder, result);

        //item rule
        var finder = new Finder ("cwt_pc:cwt_itemRuleFinder");
        finder.searchDocument.catalogObjectType = "Item";
        finder.searchDocument.itemCode = this.itemCode;
        cwt_pc.addToResult(finder, result);

        //item description
        var finder = new Finder ("cwt_pc:cwt_itemDescriptionFinder");
        finder.searchDocument.itemCode = this.itemCode;
        cwt_pc.addToResult(finder, result);

        //system identifier
        var finder = new Finder ("cwt_pc:cwt_systemIdentifierFinder");
        finder.searchDocument.itemCode = this.itemCode;
        cwt_pc.addToResult(finder, result);

        //item attribute
        var finder = new Finder ("cwt_pc:cwt_itemAttributeFinder");
        finder.searchDocument.itemCode = this.itemCode;
        finder.searchDocument.itemRelationCode = null;
        cwt_pc.addToResult(finder, result);

        var beforeLength = result.length;
        //item group
        var finder = new Finder ("cwt_pc:cwt_itemGroupFinder");
        finder.searchDocument.itemCode = this.itemCode;
        cwt_pc.addToResult(finder, result);

        //Use tmp array to avoid infinite loop when adding to result
        var tmpRst = [];
        for (var i=beforeLength; i<result.length; i++) {
              tmpRst.push(result[i]);
        }

        for (var i=0; i<tmpRst.length; i++) {
              var finder2 = new Finder ("cwt_pc:cwt_groupTargetFinder");
              finder2.searchDocument.itemGroupId = tmpRst[i];
              cwt_pc.addToResult(finder2, result);
        }


        beforeLength = result.length;
        //item relation
        var finder = new Finder ("cwt_pc:cwt_itemRelationFinder");
        finder.searchDocument.itemCode = this.itemCode;
        cwt_pc.addToResult(finder, result);

        //relation attribute
        var relAttrs = new Array();
        for (var i=beforeLength; i<result.length; i++) {
            var temp = result[i].getRelationAttributes();
            if (temp)
                  relAttrs = relAttrs.concat(temp);
        }
        if (relAttrs)
              result = result.concat(relAttrs);

        return result;
      ]]></script>
    </method>
    <method name="projectDependency" type="uimthd">
      <parameterList>
        <parameter name="projectList" type="rifp">
          <type>nmeta_com.conceptwave.system.Object</type>
        </parameter>
      </parameterList>
      <script><![CDATA[
        var result = new Array();
        if (this.baseItemCode) {
              var doc = this.baseItemCode.refData;
              if (doc.status != "ACT" && !cwt_pc.isInProject(projectList,null,doc.id,"cwt_pc:cwt_item")) {
              result.push(doc);
            }
        }

        return result;
      ]]></script>
    </method>
    <method name="validateActivation" type="uimthd">
      <parameterList>
        <parameter name="forProject" type="rifp">
          <type>dtype_com.conceptwave.system.Boolean</type>
        </parameter>
      </parameterList>
      <script><![CDATA[
        var errors = "";

        if(this.status == "ACT") {
              if (!forProject) {
              if (this.isStored && this.baseItemCode) {
                    var baseItem = this.baseItemCode.refData;
                if (baseItem.status != "ACT") {
                    errors += Global.translateText("CWTPC0018") + "\n";
                }
              }
            }
        }

        return errors;
      ]]></script>
    </method>
    <method name="addCodeTableChangeHistory" type="uimthd">
      <parameterList>
        <parameter name="changeHistoryFinder" type="rifp">
          <type>nmeta_com.conceptwave.system.Object</type>
        </parameter>
      </parameterList>
      <script><![CDATA[
        if(changeHistoryFinder == null){
              return null;
        }

        //item attribute
        var finder = new Finder ("cwt_pc:cwt_itemAttributeFinder");
        finder.searchDocument.itemCode = this.itemCode;
        finder.searchDocument.itemRelationCode = null;
        var result = finder.search();

        for(var i=0; i<result.length; i++){
              var doc = result[i];
              var attrDoc = Document.readDoc("cwt_pc.cwt_attribute",doc.attributeCode);
              if(attrDoc.type == "7"){ //codeTable type
                    var ctResult = cwt_common.getCodeTableChangeHistory(attrDoc.codeTableName);
                    for(var j=0; j<ctResult.length; j++){
                          changeHistoryFinder.result.addLast(ctResult[j]); //put codeTable changeHistory into item changeHistory
                    }
              }
        }
      ]]></script>
    </method>
    <method name="getCode" type="uimthd">
      <script>return this.itemCode;</script>
    </method>
    <method name="cwOnDocStore" type="action">
      <system>true</system>
      <script><![CDATA[
        cwt_pc.validateStartEndDate(document);
        this.cw$super_cwOnDocStore();
      ]]></script>
    </method>
    <method name="validateObject" type="uimthd">
      <parameterList>
        <parameter name="errorList" type="rifp">
          <array>true</array>
          <type>dstruct_cwt_pcmaintapi.Fault</type>
        </parameter>
      </parameterList>
      <script><![CDATA[
        var isValid=this.validateDoc(errorList);
        var statesToRead = cwt_pc.getStatusesToRead();
        if(this.itemType.equals("CwTreeTop") || this.itemType.equals("CwAvailabilityTop") || this.itemType.equals("CwTreeNode") || this.itemType.equals("CwAvailabilityNode")){
        //ItemRule
        var f = new Finder ("cwt_pc:cwt_itemRuleFinder");
        f.searchDocument.itemCode = this.itemCode;
        f.searchDocument.catalogObjectCode = null;
        f.searchDocument.catalogObjectType = "CatalogHierarchy";
        f.search();
        f.sort("itemRuleCode");
        var list = f.list;
        if(list!=null && list.length>0){
            var code= null;
            for(var i=0; i<list.length; i++){
               // if((list[i].isChild("status")&& statesToRead.indexOf(list[i].status)>-1)&&
               if((code!=null && !list[i].itemRuleCode.equals(code))|| code==null){
                    if(!(list[i].validateObject(errorList)))
                        isValid = false;
                    code = list[i].itemRuleCode;
                }
              }
        }
        }


        //itemAttribute
        var f = new Finder ("cwt_pc:cwt_itemAttributeFinder");
        f.searchDocument.itemCode = this.itemCode;
        f.searchDocument.itemRelationCode = null;
        f.searchDocument.catalogObjectType = "item";
        f.search();
        f.sort("itemAttributeCode");
        list=null;
        list = f.list;
        var code= null;
        if(list!=null && list.length>0){
            for(var i=0; i<list.length; i++){
                //if((list[i].isChild("status")&& statesToRead.indexOf(list[i].status)>-1)&&
                if((code!=null && !list[i].itemAttributeCode.equals(code)) || code==null){
                    if(!(list[i].validateObject(errorList)))
                        isValid = false;
                    code = list[i].itemAttributeCode;
                }
              }
        }

        //itemRelation
        var f = new Finder ("cwt_pc:cwt_itemRelationAllFinder");
        f.searchDocument.itemCode = this.itemCode;
        f.search();
        f.sort("itemRelationCode");
        list=null;
        list = f.list;
         var code= null;
        if(list!=null && list.length>0){
            for(var i=0; i<list.length; i++){
               //if((list[i].isChild("status")&& statesToRead.indexOf(list[i].status)>-1)&&
               if((code!=null && !list[i].itemRelationCode.equals(code))|| code ==null){
                    if(!(list[i].validateObject(errorList)))
                        isValid = false;
                    code = list[i].itemRelationCode;
                }
            }
        }

        if(this.itemType!="CwTreeTop" && this.itemType!= "CwAvailabilityTop" && this.itemType!="CwTreeNode" && this.itemType!= "CwAvailabilityNode"){
            //ItemRule
            var f = new Finder ("cwt_pc:cwt_itemRuleFinder");
            f.searchDocument.itemCode = this.itemCode;
            f.searchDocument.catalogObjectCode = null;
            f.searchDocument.catalogObjectType = "Item";
            f.search();
            f.sort("itemRuleCode");
            var list = f.list;
            var code= null;
            if(list!=null && list.length>0){
                for(var i=0; i<list.length; i++){
                    //if((list[i].isChild("status")&& statesToRead.indexOf(list[i].status)>-1)&&
                    if((code!=null && !list[i].itemRuleCode.equals(code))|| code ==null){
                        if(!(list[i].validateObject(errorList)))
                            isValid = false;
                        code = list[i].itemRuleCode;
                    }
                  }
            }



            //itemCharge
            var f = new Finder ("cwt_pc:cwt_itemChargeVersionFinder");
            f.searchDocument.itemCode = this.itemCode;
            f.searchDocument.itemRelationCode = null;
            f.searchDocument.itemGroupCode = null;
            f.searchDocument.catalogObjectType = "item";
            f.search();
            f.sort("itemChargeCode");
            list=null;
            list = f.list;
            var code= null;
            if(list!=null && list.length>0){
                for(var i=0; i<list.length; i++){
                   // if((list[i].isChild("status")&& statesToRead.indexOf(list[i].status)>-1)&&
                   if((code!=null && !list[i].itemChargeCode.equals(code))|| code ==null){
                        if(!(list[i].validateObject(errorList)))
                            isValid = false;
                        code = list[i].itemChargeCode;
                    }
                  }
            }

           //itemGroup
            var f = new Finder ("cwt_pc:cwt_itemGroupFinder");
            f.searchDocument.itemCode = this.itemCode;
            f.search();
            f.sort("itemGroupCode");
            list=null;
            list = f.list;
            var code= null;
            if(list!=null && list.length>0){
                for(var i=0; i<list.length; i++){
                    //if((list[i].isChild("status")&& statesToRead.indexOf(list[i].status)>-1)&&
                    if((code!=null && !list[i].itemGroupCode.equals(code))|| code ==null){
                        if(list[i].itemGroupCode == "grp1")
                            var grp = true;
                        if(!(list[i].validateObject(errorList)))
                            isValid = false;
                        code = list[i].itemGroupCode;
                    }
                }
            }

            //ItemDescription
            var f = new Finder ("cwt_pc:cwt_itemDescriptionFinder");
            f.searchDocument.itemCode = this.itemCode;
            f.search();
            f.sort("itemDescriptionCode");
            list=null;
            list = f.list;
            var code= null;
            if(list!=null && list.length>0){
                for(var i=0; i<list.length; i++){
                    //if((list[i].isChild("status")&& statesToRead.indexOf(list[i].status)>-1)&&
                    if((code!=null && !list[i].itemDescriptionCode.equals(code))|| code ==null){
                        if(!(list[i].validateObject(errorList)))
                            isValid = false;
                        code = list[i].itemDescriptionCode;
                    }
                  }
            }

            //SystemIdentifiers
            var f = new Finder ("cwt_pc:cwt_systemIdentifierFinder");
            f.searchDocument.chargeTypeCode = this.itemCode;
            list=null;
            list = f.search();
            if(list!=null && list.length>0){
               for(var i=0; i<list.length; i++){
                   // if(list[i].isChild("status")&& statesToRead.indexOf(list[i].status)>-1)
                    if(!(list[i].validateObject(errorList)))
                        isValid = false;
               }
            }

            //itemAttachment
            var f = new Finder ("cwt_pc:cwt_itemAttachmentFinder");
            f.searchDocument.itemCode = this.itemCode;
            f.search();
            f.sort("itemAttachmentCode");
            list=null;
            list = f.list;
            var code= null;
            if(list!=null && list.length>0){
                for(var i=0; i<list.length; i++){
                    //if((list[i].isChild("status")&& statesToRead.indexOf(list[i].status)>-1)&&
                    if((code!=null && !list[i].itemAttachmentCode.equals(code))|| code ==null){
                        if(!(list[i].validateObject(errorList)))
                            isValid = false;
                        code = list[i].itemAttachmentCode;
                    }
                  }
            }

            //itemImage
            var f = new Finder ("cwt_pc:cwt_itemImageFinder");
            f.searchDocument.itemCode = this.itemCode;
            f.search();
            f.sort("itemImageCode");
            list=null;
            list = f.list;
            var code= null;
            if(list!=null && list.length>0){
                for(var i=0; i<list.length; i++){
                    //if((list[i].isChild("status")&& statesToRead.indexOf(list[i].status)>-1)&&
                    if((code!=null && !list[i].itemImageCode.equals(code))|| code ==null){
                        if(!(list[i].validateObject(errorList)))
                            isValid = false;
                        code = list[i].itemImageCode;
                    }
                  }
            }
        }

        return isValid;
      ]]></script>
    </method>
    <method name="validateDoc" type="uimthd">
      <parameterList>
        <parameter name="errorList" type="rifp">
          <array>true</array>
          <type>dstruct_cwt_pcmaintapi.Fault</type>
        </parameter>
        <parameter name="projectList" type="rifp">
          <type>nmeta_com.conceptwave.system.Object</type>
        </parameter>
      </parameterList>
      <script><![CDATA[
        var isValid = true;
        var projectDoc = cwt_pc.getProjectAssignmentDoc("cwt_pc:cwt_item", null, this.itemCode);
        if(projectDoc==null){
             var params=new Array(1);
             if(!(this.itemType.equals("CwTreeTop") || this.itemType.equals("CwAvailabilityTop") || this.itemType.equals("CwTreeNode") || this.itemType.equals("CwAvailabilityNode"))){
                 params[0] = "Item: "+ this.itemCode;
             }
             else{
                 if(!(this.itemType.equals("CwTreeTop") || this.itemType.equals("CwTreeNode"))){
                      params[0] = "AvailabilityTree: "+ this.itemCode;
                 }
                 else
                      params[0] = "CatalogHierarchyNode: "+ this.itemCode;
             }
             cwt_pc.appendError("CWTPC0260",params,errorList);
             isValid = false;
        }
        if(!(this.validateReferences(errorList,projectList)))
                isValid = false;
        return isValid;
      ]]></script>
    </method>
    <method name="validateReferences" type="uimthd">
      <parameterList>
        <parameter name="errorList" type="rifp">
          <array>true</array>
          <type>dstruct_cwt_pcmaintapi.Fault</type>
        </parameter>
        <parameter name="projectList" type="rifp">
          <type>nmeta_com.conceptwave.system.Object</type>
        </parameter>
      </parameterList>
      <script><![CDATA[
        var isValid = true;
        var statesToRead = cwt_pc.getStatusesToRead();
        if(projectList==null){
            if((this.isChild("status") && statesToRead.indexOf(this.status)<0) || !this.isChild("status"))
                return true;
        }
        if(projectList!=null &&  (this.isChild("status") && statesToRead.indexOf(this.status)>-1))
            projectList = null;
        if (this.baseItemCode!= null ) {
            var doc =  this.baseItemCode.refData;
            if(doc!=null)
            {
                var coverage = cwt_pc.getCatalogObjectCoverage(doc,projectList);
                if(coverage!=null){
                    var interval = new DataStructure("cwt_pc:interval");
                    interval.startDate=this.startDate;
                    interval.endDate=this.endDate;
                    interval.startDate=new Date(theCatalog.toCatalogTime(interval.startDate)*1000);
                    if(interval.endDate!=null)
                          interval.endDate=new Date(theCatalog.toCatalogTime(interval.endDate)*1000);
                    if(!cwt_pc.isIntervalCovered(coverage,interval)){
                         var params=new Array(4);
                         params[0] = "BaseItem: "+ this.baseItemCode;
                         params[1] = "Item : "+ this.itemCode;
                         params[2] = this.endDate;
                         params[3] = this.startDate;
                         cwt_pc.appendError("CWTPC0258",params,errorList);
                         isValid = false;
                    }
                }// coverage not null
                else{//coverage is null
                     var params=new Array(2);
                     params[0] = "BaseItem: "+ this.baseItemCode;
                     params[1] = "Item : "+ this.itemCode;
                     cwt_pc.appendError("CWTPC0259",params,errorList);
                     isValid = false;
                }
              }
              else{ //document not found
                   var params=new Array(2);
                   params[0] = "BaseItem: "+ this.baseItemCode;
                   params[1] = "Item : "+ this.itemCode;
                   cwt_pc.appendError("CWTPC0256",params,errorList);
                   isValid = false;
                  }
        }
        return isValid;
      ]]></script>
    </method>
  </methodList>
  <UserInterface name="UserInterface" type="ui">
    <extends>doc_com.conceptwave.system.Document/ui_UserInterface</extends>
    <variableList>
      <variable name="model" type="uivar">
        <label>model</label>
        <valueType>doc_cm_spoc.cwt_itemSearchForCode</valueType>
      </variable>
      <variable name="globalUI" type="leaf">
        <label>globalUI</label>
        <valueType>ui_cwt_pc.globalUI</valueType>
      </variable>
      <variable name="attributeFinderUI" type="leaf">
        <valueType>findDoc_cwt_pc.cwt_itemAttributeFinder/ui_UserInterface</valueType>
      </variable>
      <variable name="relationFinderUI" type="leaf">
        <valueType>findDoc_cwt_pc.cwt_itemRelationFinder/ui_UserInterface</valueType>
      </variable>
      <variable name="imageFinderUI" type="leaf">
        <valueType>findDoc_cwt_pc.cwt_itemImageFinder/ui_UserInterface</valueType>
      </variable>
      <variable name="attachmentFinderUI" type="leaf">
        <valueType>findDoc_cwt_pc.cwt_itemAttachmentFinder/ui_UserInterface</valueType>
      </variable>
      <variable name="chargeFinderUI" type="leaf">
        <valueType>findDoc_cwt_pc.cwt_itemChargeVersionFinder/ui_UserInterface</valueType>
      </variable>
      <variable name="identifierFinderUI" type="leaf">
        <valueType>findDoc_cwt_pc.cwt_systemIdentifierFinder/ui_UserInterface</valueType>
      </variable>
      <variable name="descriptionFinderUI" type="leaf">
        <valueType>findDoc_cwt_pc.cwt_itemDescriptionFinder/ui_UserInterface</valueType>
      </variable>
      <variable name="ruleFinderUI" type="leaf">
        <valueType>findDoc_cwt_pc.cwt_itemRuleFinder/ui_UserInterface</valueType>
      </variable>
      <variable name="isAdd" type="leaf">
        <label>Boolean</label>
        <valueType>dtype_com.conceptwave.system.Boolean</valueType>
      </variable>
      <variable name="isCopy" type="leaf">
        <label>Boolean</label>
        <valueType>dtype_com.conceptwave.system.Boolean</valueType>
      </variable>
      <variable name="errorMessage" type="leaf">
        <label>String</label>
        <valueType>dtype_com.conceptwave.system.String</valueType>
      </variable>
      <variable name="isValidated" type="leaf">
        <label>Boolean</label>
        <valueType>dtype_com.conceptwave.system.Boolean</valueType>
      </variable>
      <variable name="identifierVisible" type="leaf">
        <label>Boolean</label>
        <valueType>dtype_com.conceptwave.system.Boolean</valueType>
      </variable>
      <variable name="imageVisible" type="leaf">
        <label>Boolean</label>
        <valueType>dtype_com.conceptwave.system.Boolean</valueType>
      </variable>
      <variable name="attachmentVisible" type="leaf">
        <label>Boolean</label>
        <valueType>dtype_com.conceptwave.system.Boolean</valueType>
      </variable>
      <variable name="descriptionVisible" type="leaf">
        <label>Boolean</label>
        <valueType>dtype_com.conceptwave.system.Boolean</valueType>
      </variable>
      <variable name="chargeVisible" type="leaf">
        <label>Boolean</label>
        <valueType>dtype_com.conceptwave.system.Boolean</valueType>
      </variable>
      <variable name="domainVisible" type="leaf">
        <label>Boolean</label>
        <valueType>dtype_com.conceptwave.system.Boolean</valueType>
      </variable>
      <variable name="attributeVisible" type="leaf">
        <label>Boolean</label>
        <valueType>dtype_com.conceptwave.system.Boolean</valueType>
      </variable>
      <variable name="relationVisible" type="leaf">
        <label>Boolean</label>
        <valueType>dtype_com.conceptwave.system.Boolean</valueType>
      </variable>
      <variable name="ruleVisible" type="leaf">
        <label>Boolean</label>
        <valueType>dtype_com.conceptwave.system.Boolean</valueType>
      </variable>
      <variable name="groupFinderUI" type="leaf">
        <valueType>findDoc_cwt_pc.cwt_itemGroupFinder/ui_UserInterface</valueType>
      </variable>
      <variable name="domainFinderUI" type="leaf">
        <valueType>findDoc_cwt_pc.cwt_catalogDomainFinder/ui_UserInterface</valueType>
      </variable>
      <variable name="itemTypePermissionUI" type="leaf">
        <valueType>doc_cwt_pc.cwt_itemTypePermission/ui_UserInterface</valueType>
      </variable>
      <variable name="itemTypeFinderUI" type="leaf">
        <valueType>findSql_cwt_pc.cwt_itemTypeFinder/ui_UserInterface</valueType>
      </variable>
      <variable name="itemChartFinderUI" type="leaf">
        <valueType>findScript_cwt_pc.itemChartFinder/ui_UserInterface</valueType>
      </variable>
    </variableList>
    <vformList>
      <vform name="Forms" type="frmui">
        <extends>doc_com.conceptwave.system.Document/ui_UserInterface/frmui_Forms</extends>
        <overlayList>
          <overlay name="Default" type="exov">
            <base>ui_com.conceptwave.system.DocumentUserInterface/frmui_Forms/exov_Default</base>
            <extends>ui_com.conceptwave.system.DocumentUserInterface/frmui_Forms/exov_Default</extends>
            <label>Default</label>
            <overrideList>
              <override name="VerticalLayout" type="elvlt">
                <width>100%</width>
                <elementList>
                  <element name="HorizontalLayout3" type="elhlt">
                    <elementList>
                      <element name="SectionStack" type="elsectnstck">
                        <visibilityMode>multiple</visibilityMode>
                        <width>560px</width>
                        <elementList>
                          <element name="Section" type="elsect">
                            <elementList>
                              <element name="SectionHeader" type="elsecth">
                                <label>Item Detail</label>
                                <elementList>
                                  <element name="FormFrame3" type="elovf">
                                    <formReference type="varPath">
                                      <variablePathList>
                                        <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_globalUI</variablePath>
                                        <variablePath>ui_cwt_pc.globalUI/frmui_Forms</variablePath>
                                        <variablePath>ui_cwt_pc.globalUI/frmui_Forms/vform_DocHeaderSaveMenu</variablePath>
                                      </variablePathList>
                                    </formReference>
                                    <variable type="varPath">
                                      <variablePathList>
                                        <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_globalUI</variablePath>
                                      </variablePathList>
                                    </variable>
                                    <visible type="varPath">
                                      <variablePathList>
                                        <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/permMethod_detailEditable</variablePath>
                                      </variablePathList>
                                    </visible>
                                  </element>
                                  <element name="FormFrame2" type="elovf">
                                    <formReference type="varPath">
                                      <variablePathList>
                                        <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_globalUI</variablePath>
                                        <variablePath>ui_cwt_pc.globalUI/frmui_Forms</variablePath>
                                        <variablePath>ui_cwt_pc.globalUI/frmui_Forms/vform_itemMenuPrjSelected</variablePath>
                                      </variablePathList>
                                    </formReference>
                                    <variable type="varPath">
                                      <variablePathList>
                                        <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_globalUI</variablePath>
                                      </variablePathList>
                                    </variable>
                                    <visible type="varPath">
                                      <variablePathList>
                                        <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/permMethod_itemMenuPrjSelectedPerm</variablePath>
                                      </variablePathList>
                                    </visible>
                                  </element>
                                  <element name="FormFrame1" type="elovf">
                                    <formReference type="varPath">
                                      <variablePathList>
                                        <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_globalUI</variablePath>
                                        <variablePath>ui_cwt_pc.globalUI/frmui_Forms</variablePath>
                                        <variablePath>ui_cwt_pc.globalUI/frmui_Forms/vform_itemMenu</variablePath>
                                      </variablePathList>
                                    </formReference>
                                    <variable type="varPath">
                                      <variablePathList>
                                        <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_globalUI</variablePath>
                                      </variablePathList>
                                    </variable>
                                    <visible type="varPath">
                                      <variablePathList>
                                        <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/permMethod_itemMenuPerm</variablePath>
                                      </variablePathList>
                                    </visible>
                                  </element>
                                </elementList>
                              </element>
                              <element name="FormFrame" type="elovf">
                                <formReference type="varPath">
                                  <variablePathList>
                                    <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/frmui_Forms</variablePath>
                                    <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/frmui_Forms/vform_Detail</variablePath>
                                  </variablePathList>
                                </formReference>
                              </element>
                            </elementList>
                          </element>
                        </elementList>
                      </element>
                    </elementList>
                  </element>
                </elementList>
              </override>
            </overrideList>
          </overlay>
          <overlay name="Detail" type="vform">
            <label>Detail</label>
            <root name="VerticalLayout" type="elvlt">
              <elementList>
                <element name="GridLayout" type="elgrd">
                  <colWidths>80px,180px,80px,180px</colWidths>
                  <labeAlign>left</labeAlign>
                  <labelOrientation>left</labelOrientation>
                  <numOfCols>4</numOfCols>
                  <elementList>
                    <element name="itemType" type="elslct">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/permMethod_idEditable</variablePath>
                        </variablePathList>
                      </editable>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_itemType</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="status" type="elslct">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/permMethod_isStatusEditable</variablePath>
                        </variablePathList>
                      </editable>
                      <label>Status</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_status</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="itemCode" type="elfld">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/permMethod_idEditable</variablePath>
                        </variablePathList>
                      </editable>
                      <labeAlign>left</labeAlign>
                      <label>Code</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_itemCode</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="orderable" type="elchk">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/permMethod_detailEditable</variablePath>
                        </variablePathList>
                      </editable>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_orderable</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="name" type="elfld">
                      <columnSpan>4</columnSpan>
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/permMethod_detailEditable</variablePath>
                        </variablePathList>
                      </editable>
                      <labeAlign>left</labeAlign>
                      <label>Name</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_name</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="label" type="eltrnsltion">
                      <columnSpan>4</columnSpan>
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/permMethod_detailEditable</variablePath>
                        </variablePathList>
                      </editable>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_label</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="description" type="eltxtArea">
                      <columnSpan>4</columnSpan>
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/permMethod_detailEditable</variablePath>
                        </variablePathList>
                      </editable>
                      <height>50px</height>
                      <labeAlign>left</labeAlign>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_description</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="startDate" type="eldate">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/permMethod_detailEditable</variablePath>
                        </variablePathList>
                      </editable>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_startDate</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="endDate" type="eldate">
                      <defPickerDate type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_startDate</variablePath>
                        </variablePathList>
                      </defPickerDate>
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/permMethod_detailEditable</variablePath>
                        </variablePathList>
                      </editable>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_endDate</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="baseItemCode" type="elref">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/permMethod_detailEditable</variablePath>
                        </variablePathList>
                      </editable>
                      <iconAction type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/usrActionMethod_onRefClickForItem</variablePath>
                        </variablePathList>
                      </iconAction>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_baseItemCode</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="ownerId" type="elref">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
                        </variablePathList>
                      </editable>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_ownerId</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                    <element name="projectRef" type="elref">
                      <editable type="varPath">
                        <variablePathList>
                          <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
                        </variablePathList>
                      </editable>
                      <label>Project</label>
                      <variable type="varPath">
                        <variablePathList>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                          <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_projectRef</variablePath>
                        </variablePathList>
                      </variable>
                    </element>
                  </elementList>
                </element>
                <element name="FormFrame" type="elovf">
                  <formReference type="varPath">
                    <variablePathList>
                      <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_itemChartFinderUI</variablePath>
                      <variablePath>findScript_cwt_pc.itemChartFinder/ui_UserInterface/frmui_Forms</variablePath>
                      <variablePath>findScript_cwt_pc.itemChartFinder/ui_UserInterface/frmui_Forms/exov_Chart</variablePath>
                    </variablePathList>
                  </formReference>
                  <height>500px</height>
                  <variable type="varPath">
                    <variablePathList>
                      <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_itemChartFinderUI</variablePath>
                    </variablePathList>
                  </variable>
                  <visible type="varPath">
                    <variablePathList>
                      <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/permMethod_displayItemNodalChart</variablePath>
                    </variablePathList>
                  </visible>
                  <width>550px</width>
                </element>
              </elementList>
            </root>
          </overlay>
          <overlay name="DefaultType" type="vform">
            <label>DefaultType</label>
            <root name="VerticalLayout" type="elvlt">
              <width>990px</width>
              <elementList>
                <element name="FormFrame" type="elovf">
                  <formReference type="varPath">
                    <variablePathList>
                      <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/frmui_Forms</variablePath>
                      <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/frmui_Forms/vform_DetailType</variablePath>
                    </variablePathList>
                  </formReference>
                </element>
                <element name="LayoutSpacer" type="ellsp">
                  <height>10px</height>
                </element>
                <element name="FormFrame1" type="elovf">
                  <formReference type="varPath">
                    <variablePathList>
                      <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_itemTypePermissionUI</variablePath>
                      <variablePath>doc_cwt_pc.cwt_itemTypePermission/ui_UserInterface/frmui_Forms</variablePath>
                      <variablePath>doc_cwt_pc.cwt_itemTypePermission/ui_UserInterface/frmui_Forms/exov_Default</variablePath>
                    </variablePathList>
                  </formReference>
                  <variable type="varPath">
                    <variablePathList>
                      <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_itemTypePermissionUI</variablePath>
                    </variablePathList>
                  </variable>
                </element>
                <element name="LayoutSpacer1" type="ellsp"/>
                <element name="FormFrame2" type="elovf">
                  <formReference type="varPath">
                    <variablePathList>
                      <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_itemTypeFinderUI</variablePath>
                      <variablePath>findSql_cwt_pc.cwt_itemTypeFinder/ui_UserInterface/frmui_Forms</variablePath>
                      <variablePath>findSql_cwt_pc.cwt_itemTypeFinder/ui_UserInterface/frmui_Forms/exov_Result</variablePath>
                    </variablePathList>
                  </formReference>
                  <variable type="varPath">
                    <variablePathList>
                      <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_itemTypeFinderUI</variablePath>
                    </variablePathList>
                  </variable>
                </element>
              </elementList>
            </root>
          </overlay>
          <overlay name="DetailType" type="vform">
            <label>DetailType</label>
            <root name="VerticalLayout" type="elvlt">
              <width>990px</width>
              <elementList>
                <element name="SectionStack" type="elsectnstck">
                  <visibilityMode>multiple</visibilityMode>
                  <elementList>
                    <element name="Section" type="elsect">
                      <elementList>
                        <element name="SectionHeader" type="elsecth">
                          <elementList>
                            <element name="FormFrame" type="elovf"/>
                          </elementList>
                        </element>
                        <element name="GridLayout" type="elgrd">
                          <colWidths>150px</colWidths>
                          <labelOrientation>left</labelOrientation>
                          <numOfCols>4</numOfCols>
                          <elementList>
                            <element name="itemCode" type="elfld">
                              <variable type="varPath">
                                <variablePathList>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_itemCode</variablePath>
                                </variablePathList>
                              </variable>
                            </element>
                            <element name="baseItemCode" type="elref">
                              <variable type="varPath">
                                <variablePathList>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_baseItemCode</variablePath>
                                </variablePathList>
                              </variable>
                            </element>
                            <element name="status" type="elslct">
                              <variable type="varPath">
                                <variablePathList>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_status</variablePath>
                                </variablePathList>
                              </variable>
                            </element>
                            <element name="itemType" type="elslct">
                              <variable type="varPath">
                                <variablePathList>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_itemType</variablePath>
                                </variablePathList>
                              </variable>
                            </element>
                            <element name="name" type="elfld">
                              <columnSpan>4</columnSpan>
                              <variable type="varPath">
                                <variablePathList>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_name</variablePath>
                                </variablePathList>
                              </variable>
                            </element>
                            <element name="endDate" type="eldate">
                              <variable type="varPath">
                                <variablePathList>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_endDate</variablePath>
                                </variablePathList>
                              </variable>
                            </element>
                            <element name="orderable" type="elchk">
                              <variable type="varPath">
                                <variablePathList>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_orderable</variablePath>
                                </variablePathList>
                              </variable>
                            </element>
                            <element name="label" type="eltrnsltion">
                              <columnSpan>4</columnSpan>
                              <variable type="varPath">
                                <variablePathList>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_label</variablePath>
                                </variablePathList>
                              </variable>
                            </element>
                            <element name="description" type="eltxtArea">
                              <columnSpan>4</columnSpan>
                              <variable type="varPath">
                                <variablePathList>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/uivar_model</variablePath>
                                  <variablePath>doc_cm_spoc.cwt_itemSearchForCode/leaf_description</variablePath>
                                </variablePathList>
                              </variable>
                            </element>
                          </elementList>
                        </element>
                      </elementList>
                    </element>
                  </elementList>
                </element>
              </elementList>
            </root>
          </overlay>
          <overlay name="DisplayType" type="vform">
            <label>DisplayType</label>
            <root name="HorizontalLayout" type="elhlt">
              <elementList>
                <element name="VerticalLayout" type="elvlt">
                  <elementList>
                    <element name="Tabset" type="eltset">
                      <width>490px</width>
                      <elementList>
                        <element name="TabFrame" type="eltab">
                          <formReference type="varPath">
                            <variablePathList>
                              <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_attributeFinderUI</variablePath>
                              <variablePath>findDoc_cwt_pc.cwt_itemAttributeFinder/ui_UserInterface/frmui_Forms</variablePath>
                              <variablePath>findDoc_cwt_pc.cwt_itemAttributeFinder/ui_UserInterface/frmui_Forms/vform_Main</variablePath>
                            </variablePathList>
                          </formReference>
                          <label>Item Attributes</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_attributeFinderUI</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                        <element name="TabFrame3" type="eltab">
                          <formReference type="varPath">
                            <variablePathList>
                              <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_relationFinderUI</variablePath>
                              <variablePath>findDoc_cwt_pc.cwt_itemRelationFinder/ui_UserInterface/frmui_Forms</variablePath>
                              <variablePath>findDoc_cwt_pc.cwt_itemRelationFinder/ui_UserInterface/frmui_Forms/vform_Main</variablePath>
                            </variablePathList>
                          </formReference>
                          <label>Item Relations</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_relationFinderUI</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                        <element name="TabFrame1" type="eltab">
                          <formReference type="varPath">
                            <variablePathList>
                              <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_imageFinderUI</variablePath>
                              <variablePath>findDoc_cwt_pc.cwt_itemImageFinder/ui_UserInterface/frmui_Forms</variablePath>
                              <variablePath>findDoc_cwt_pc.cwt_itemImageFinder/ui_UserInterface/frmui_Forms/vform_Main</variablePath>
                            </variablePathList>
                          </formReference>
                          <label>Item Images</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_imageFinderUI</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                        <element name="TabFrame4" type="eltab">
                          <formReference type="varPath">
                            <variablePathList>
                              <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_chargeFinderUI</variablePath>
                              <variablePath>findDoc_cwt_pc.cwt_itemChargeVersionFinder/ui_UserInterface/frmui_Forms</variablePath>
                              <variablePath>findDoc_cwt_pc.cwt_itemChargeVersionFinder/ui_UserInterface/frmui_Forms/vform_Main</variablePath>
                            </variablePathList>
                          </formReference>
                          <label>Item Charges</label>
                          <variable type="varPath">
                            <variablePathList>
                              <variablePath>doc_cm_spoc.cwt_itemSearchForCode/ui_UserInterface/leaf_chargeFinderUI</variablePath>
                            </variablePathList>
                          </variable>
                        </element>
                      </elementList>
                    </element>
                  </elementList>
                </element>
              </elementList>
            </root>
          </overlay>
          <overlay name="Menu" type="exov">
            <base>doc_com.conceptwave.system.Document/ui_UserInterface/frmui_Forms/exov_Menu</base>
            <extends>doc_com.conceptwave.system.Document/ui_UserInterface/frmui_Forms/exov_Menu</extends>
            <label>Menu</label>
            <overrideList>
              <override name="cwfSave" type="elmnu">
                <menuAccel type="mAccelP"/>
                <clickMethod type="varPath">
                  <variablePathList>
                    <variablePath>ui_com.conceptwave.system.DocumentUserInterface/usrActionMethod_save</variablePath>
                  </variablePathList>
                </clickMethod>
                <icon>/cwf/MenuIconSave.gif</icon>
                <label>Save</label>
                <tooltip>Save</tooltip>
                <visible type="varPath">
                  <variablePathList>
                    <variablePath>dtype_com.conceptwave.system.Boolean/leaf_FALSE</variablePath>
                  </variablePathList>
                </visible>
              </override>
              <override name="hl1" type="elhlt">
                <alignment>left,center</alignment>
                <elementList>
                  <element name="cwfSave" type="elmnu">
                    <menuAccel type="mAccelP"/>
                    <clickMethod type="varPath">
                      <variablePathList>
                        <variablePath>ui_com.conceptwave.system.DocumentUserInterface/usrActionMethod_save</variablePath>
                      </variablePathList>
                    </clickMethod>
                    <icon>/cwf/MenuIconSave.gif</icon>
                    <label>Save</label>
                    <showDown>true</showDown>
                    <tooltip>Save</tooltip>
                  </element>
                </elementList>
              </override>
            </overrideList>
          </overlay>
        </overlayList>
      </vform>
    </vformList>
    <methodList>
      <method name="attachmentPerm" type="permMethod">
        <script>return this.attachmentVisible;</script>
      </method>
      <method name="attributePerm" type="permMethod">
        <script>return this.attributeVisible;</script>
      </method>
      <method name="chargePerm" type="permMethod">
        <script>return this.chargeVisible;</script>
      </method>
      <method name="clearAttRelDetails" type="usrActionMethod">
        <script>this.clearTabDetails();</script>
      </method>
      <method name="clearTabDetails" type="usrActionMethod">
        <script><![CDATA[
          this.imageFinderUI.detail = null;
          this.attachmentFinderUI.detail = null;
          this.chargeFinderUI.detail = null;
          this.descriptionFinderUI.detail = null;
          this.identifierFinderUI.detail = null;
          this.ruleFinderUI.detail = null;

          this.imageVisible = false;
          this.attachmentVisible = false;
          this.chargeVisible = false;
          this.descriptionVisible = false;
          this.identifierVisible = false;
          this.ruleVisible = false;
          this.domainVisible = false;

          this.attributeFinderUI.detail = null;
          this.relationFinderUI.detail = null;

          this.attributeVisible = false;
          this.relationVisible = false;
        ]]></script>
      </method>
      <method name="deepCopy" type="uimthd">
        <parameterList>
          <parameter name="oldItemCode" type="rifp">
            <mandatory>true</mandatory>
            <type>dtype_com.conceptwave.system.String</type>
          </parameter>
          <parameter name="newItemCode" type="rifp">
            <mandatory>true</mandatory>
            <type>dtype_com.conceptwave.system.String</type>
          </parameter>
          <parameter name="projectRef" type="rifp">
            <mandatory>true</mandatory>
            <type>dtype_com.conceptwave.system.String</type>
          </parameter>
        </parameterList>
        <script><![CDATA[
          var finder;
          // Copy Item Attribute
          finder = new cwt_pc.cwt_itemAttributeFinder.UserInterface();
          finder.search.model.itemCode = oldItemCode;
          finder.searchAction();
          for (var i = 0; i < finder.result.length; i++) {
            var doc = finder.result[i].copyDocument(false, true);
            doc.itemCode = newItemCode;
            doc.save();
            cwt_pc.assignProject("cwt_pc:cwt_itemAttribute", doc.id, projectRef, doc.itemCode);

                //copy item Attribute Restriction
                var finder2 = new cwt_pc.cwt_restrictionFinder.UserInterface();
                finder2.search.model.itemCode = oldItemCode;
                finder2.search.model.catalogObjectCode = finder.result[i].itemAttributeCode;
                finder2.search.model.catalogObjectType = "ItemAttribute";
                finder2.searchAction();
                for (var j = 0; j < finder2.result.length; j++) {
                        var doc2 = finder2.result[j].copyDocument(false, true);
                        doc2.itemCode= newItemCode;
                        doc2.save();
                        cwt_pc.assignProject("cwt_pc:cwt_restriction", doc2.id, projectRef, null);
                }
          }

          // Copy Item Relation
          finder = new cwt_pc.cwt_itemRelationFinder.UserInterface();
          finder.search.model.itemCode = oldItemCode;
          finder.searchAction();
          for (var i = 0; i < finder.result.length; i++) {
            var doc = finder.result[i].copyDocument(false, true);
            doc.itemCode = newItemCode;
            doc.save();
            cwt_pc.assignProject("cwt_pc:cwt_itemRelation", doc.id, projectRef, doc.itemCode);

                //copy item Relation Restriction
                var finder2 = new cwt_pc.cwt_restrictionFinder.UserInterface();
                finder2.search.model.itemCode = oldItemCode;
                finder2.search.model.catalogObjectCode = finder.result[i].itemRelationCode;
                finder2.search.model.catalogObjectType = "ItemRelation";
                finder2.searchAction();
                for (var j = 0; j < finder2.result.length; j++) {
                        var doc2 = finder2.result[j].copyDocument(false, true);
                        doc2.itemCode= newItemCode;
                        doc2.save();
                        cwt_pc.assignProject("cwt_pc:cwt_restriction", doc2.id, projectRef, null);

                }
          }

          // Copy Item Image
          finder = new cwt_pc.cwt_itemImageFinder.UserInterface();
          finder.search.model.itemCode = oldItemCode;
          finder.searchAction();
          for (var i = 0; i < finder.result.length; i++) {
            var doc = finder.result[i].copyDocument(false, true);
            doc.itemCode = newItemCode;
            doc.save();
            cwt_pc.assignProject("cwt_pc:cwt_itemImage", doc.id, projectRef, doc.itemCode);
          }

          // Copy Item Attachment
          finder = new cwt_pc.cwt_itemAttachmentFinder.UserInterface();
          finder.search.model.itemCode = oldItemCode;
          finder.searchAction();
          for (var i = 0; i < finder.result.length; i++) {
            var doc = finder.result[i].copyDocument(false, true);
            doc.itemCode = newItemCode;
            doc.save();
            cwt_pc.assignProject("cwt_pc:cwt_itemAttachment", doc.id, projectRef, doc.itemCode);
          }

          // Copy Item Charge
          finder = new cwt_pc.cwt_itemChargeVersionFinder.UserInterface();
          finder.search.model.itemCode = oldItemCode;
          finder.searchAction();
          for (var i = 0; i < finder.result.length; i++) {
            var doc = finder.result[i].copyDocument(false, true);
            doc.itemCode = newItemCode;
            doc.save();
            cwt_pc.assignProject("cwt_pc:cwt_itemChargeVersion", doc.id, projectRef, doc.itemCode);
          }

          // Copy Item Description
          finder = new cwt_pc.cwt_itemDescriptionFinder.UserInterface();
          finder.search.model.itemCode = oldItemCode;
          finder.searchAction();
          for (var i = 0; i < finder.result.length; i++) {
            var doc = finder.result[i].copyDocument(false, true);
            doc.itemCode = newItemCode;
            doc.save();
            cwt_pc.assignProject("cwt_pc:cwt_itemDescription", doc.id, projectRef, doc.itemCode);
          }

          // Copy Item Rule
          finder = new cwt_pc.cwt_itemRuleFinder.UserInterface();
          finder.search.model.itemCode = oldItemCode;
          finder.searchAction();
          for (var i = 0; i < finder.result.length; i++) {
            var doc = finder.result[i].copyDocument(false, true);
            doc.itemCode = newItemCode;
            doc.save();
            cwt_pc.assignProject("cwt_pc:cwt_itemRule", doc.id, projectRef, doc.itemCode);
          }

          // Copy System Identifier
          finder = new cwt_pc.cwt_systemIdentifierFinder.UserInterface();
          finder.search.model.itemCode = oldItemCode;
          finder.searchAction();
          for (var i = 0; i < finder.result.length; i++) {
            var doc = finder.result[i].copyDocument(false, true);
            doc.itemCode = newItemCode;
            doc.save();
            var itemOrCharge = (doc.itemCode!=null)?doc.itemCode:doc.chargeTypeCode;
            cwt_pc.assignProject("cwt_pc:cwt_systemIdentifier", doc.id, projectRef, itemOrCharge);
          }

          // Copy Item Group
          finder = new cwt_pc.cwt_itemGroupFinder.UserInterface();
          finder.search.model.itemCode = oldItemCode;
          finder.searchAction();
          for (var i = 0; i < finder.result.length; i++) {
            var doc = finder.result[i].copyDocument(false, true);
            doc.itemCode = newItemCode;
            doc.save();
            cwt_pc.assignProject("cwt_pc:cwt_itemGroup", doc.id, projectRef, doc.itemCode);
                 //copy item group target
                var finder2 = new cwt_pc.cwt_groupTargetFinder.UserInterface();
                finder2.search.model.itemGroupId = finder.result[i].itemGroupId;
                finder2.searchAction();
                for (var j = 0; j < finder2.result.length; j++) {
                        var doc2 = finder2.result[j].copyDocument(false, true);
                        doc2.itemGroupId= doc.itemGroupId;
                        if (doc2.itemRelationCode) {
                            var groupTargetRefDoc = doc2.itemRelationCode;
                            doc2.itemRelationCode = groupTargetRefDoc.refData.itemRelationCode;
                        }
                        doc2.save();
                        cwt_pc.assignProject("cwt_pc:cwt_groupTarget", doc2.id, projectRef, null);
                }
          }

          // Copy Item Domain
          finder = new cwt_pc.cwt_catalogDomainFinder.UserInterface();
          finder.search.model.catalogID = oldItemCode;
          finder.searchAction();
          for (var i = 0; i < finder.result.length; i++) {
            var doc = finder.result[i].copyDocument(false, true);
            doc.catalogID = newItemCode;
            doc.save();
          }
        ]]></script>
      </method>
      <method name="descriptionPerm" type="permMethod">
        <script>return this.descriptionVisible;</script>
      </method>
      <method name="detailEditable" type="permMethod">
        <script><![CDATA[
          if (this.model && this.model.parent && this.model.parent.refFinderDocument != null) {
                return false;
          }

          if (this.parent instanceof cwt_pc.itemTree && this.parent.isReference == true) {
                return false;
          }

          return !(this.model.status == "ACT") && cwt_pc.isDefaultProject(this.model.projectRef) && cwt_pc.canEdit(this.model);
        ]]></script>
      </method>
      <method name="domainPerm" type="permMethod">
        <script>return this.domainVisible;</script>
      </method>
      <method name="getCatalogObjectId" type="uimthd">
        <script>return this.model.itemCode;</script>
      </method>
      <method name="idEditable" type="permMethod">
        <script><![CDATA[return !this.model.isStored && cwt_pc.isDefaultProject(this.model.projectRef) && cwt_pc.canEdit(this.model);]]></script>
      </method>
      <method name="identifierPerm" type="permMethod">
        <script>return this.identifierVisible;</script>
      </method>
      <method name="imagePerm" type="permMethod">
        <script>return this.imageVisible;</script>
      </method>
      <method name="loadParentAttachments" type="uimthd">
        <parameterList>
          <parameter name="baseItemCode" type="rifp">
            <mandatory>true</mandatory>
            <type>dtype_com.conceptwave.system.String</type>
          </parameter>
          <parameter name="result" type="rifp">
            <array>true</array>
            <mandatory>true</mandatory>
            <type>doc_cwt_pc.cwt_itemAttachment</type>
          </parameter>
        </parameterList>
        <script><![CDATA[
          if (baseItemCode != null) {
              var attachmentFinderUI = new cwt_pc.cwt_itemAttachmentFinder.UserInterface(null, this);
              attachmentFinderUI.search.model.itemCode = baseItemCode;
              attachmentFinderUI.searchAction();

              var index = result.length;
              for (var i = 0; i < attachmentFinderUI.result.length; i++) {
                  result[index + i] = attachmentFinderUI.result[i].copyDocument(true, true);
                  result[index + i].inherited = true;
              }

              var baseItem = Document.readDoc("cwt_pc:cwt_item", baseItemCode);
              if (baseItem.baseItemCode != null) {
                  this.loadParentAttachments(baseItem.baseItemCode, result);
              }
          }
        ]]></script>
      </method>
      <method name="loadParentAttributes" type="uimthd">
        <parameterList>
          <parameter name="baseItemCode" type="rifp">
            <mandatory>true</mandatory>
            <type>dtype_com.conceptwave.system.String</type>
          </parameter>
          <parameter name="result" type="rifp">
            <array>true</array>
            <mandatory>true</mandatory>
            <type>doc_cwt_pc.cwt_itemAttribute</type>
          </parameter>
        </parameterList>
        <script><![CDATA[
          if (baseItemCode != null) {
              var attributeFinderUI = new cwt_pc.cwt_itemAttributeFinder.UserInterface(null, this);
              attributeFinderUI.search.model.itemCode = baseItemCode;
              attributeFinderUI.search.model.catalogObjectType = "item";
              attributeFinderUI.searchAction();

              var index = result.length;
              for (var i = 0; i < attributeFinderUI.result.length; i++) {
                  result[index + i] = attributeFinderUI.result[i].copyDocument(true, true);
                  result[index + i].inherited = true;
              }

              var baseItem = Document.readDoc("cwt_pc:cwt_item", baseItemCode);
              if (baseItem.baseItemCode != null) {
                  this.loadParentAttributes(baseItem.baseItemCode, result);
              }
          }
        ]]></script>
      </method>
      <method name="loadParentCharges" type="uimthd">
        <parameterList>
          <parameter name="baseItemCode" type="rifp">
            <mandatory>true</mandatory>
            <type>dtype_com.conceptwave.system.String</type>
          </parameter>
          <parameter name="result" type="rifp">
            <array>true</array>
            <mandatory>true</mandatory>
            <type>doc_cwt_pc.cwt_itemChargeVersion</type>
          </parameter>
        </parameterList>
        <script><![CDATA[
          if (baseItemCode != null) {
              var chargeFinderUI = new cwt_pc.cwt_itemChargeVersionFinder.UserInterface(null, this);
              chargeFinderUI.search.model.itemCode = baseItemCode;
              chargeFinderUI.search.model.catalogObjectType = "item";
              chargeFinderUI.searchAction();

              var index = result.length;
              for (var i = 0; i < chargeFinderUI.result.length; i++) {
                  result[index + i] = chargeFinderUI.result[i].copyDocument(true, true);
                  result[index + i].inherited = true;
              }

              var baseItem = Document.readDoc("cwt_pc:cwt_item", baseItemCode);
              if (baseItem.baseItemCode != null) {
                  this.loadParentCharges(baseItem.baseItemCode, result);
              }
          }
        ]]></script>
      </method>
      <method name="loadParentDescriptions" type="uimthd">
        <parameterList>
          <parameter name="baseItemCode" type="rifp">
            <mandatory>true</mandatory>
            <type>dtype_com.conceptwave.system.String</type>
          </parameter>
          <parameter name="result" type="rifp">
            <array>true</array>
            <mandatory>true</mandatory>
            <type>doc_cwt_pc.cwt_itemDescription</type>
          </parameter>
        </parameterList>
        <script><![CDATA[
          if (baseItemCode != null) {
              var descriptionFinderUI = new cwt_pc.cwt_itemDescriptionFinder.UserInterface(null, this);
              descriptionFinderUI.search.model.itemCode = baseItemCode;
              descriptionFinderUI.searchAction();

              var index = result.length;
              for (var i = 0; i < descriptionFinderUI.result.length; i++) {
                  result[index + i] = descriptionFinderUI.result[i].copyDocument(true, true);
                  result[index + i].inherited = true;
              }

              var baseItem = Document.readDoc("cwt_pc:cwt_item", baseItemCode);
              if (baseItem.baseItemCode != null) {
                  this.loadParentDescriptions(baseItem.baseItemCode, result);
              }
          }
        ]]></script>
      </method>
      <method name="loadParentIdentifiers" type="uimthd">
        <parameterList>
          <parameter name="baseItemCode" type="rifp">
            <mandatory>true</mandatory>
            <type>dtype_com.conceptwave.system.String</type>
          </parameter>
          <parameter name="result" type="rifp">
            <array>true</array>
            <mandatory>true</mandatory>
            <type>doc_cwt_pc.cwt_systemIdentifier</type>
          </parameter>
        </parameterList>
        <script><![CDATA[
          if (baseItemCode != null) {
              var identifierFinderUI = new cwt_pc.cwt_systemIdentifierFinder.UserInterface(null, this);
              identifierFinderUI.search.model.itemCode = baseItemCode;
              identifierFinderUI.searchAction();

              var index = result.length;
              for (var i = 0; i < identifierFinderUI.result.length; i++) {
                  result[index + i] = identifierFinderUI.result[i].copyDocument(true, true);
                  result[index + i].inherited = true;
              }

              var baseItem = Document.readDoc("cwt_pc:cwt_item", baseItemCode);
              if (baseItem.baseItemCode != null) {
                  this.loadParentIdentifiers(baseItem.baseItemCode, result);
              }
          }
        ]]></script>
      </method>
      <method name="loadParentImages" type="uimthd">
        <parameterList>
          <parameter name="baseItemCode" type="rifp">
            <mandatory>true</mandatory>
            <type>dtype_com.conceptwave.system.String</type>
          </parameter>
          <parameter name="result" type="rifp">
            <array>true</array>
            <mandatory>true</mandatory>
            <type>doc_cwt_pc.cwt_itemImage</type>
          </parameter>
        </parameterList>
        <script><![CDATA[
          if (baseItemCode != null) {
              var imageFinderUI = new cwt_pc.cwt_itemImageFinder.UserInterface(null, this);
              imageFinderUI.search.model.itemCode = baseItemCode;
              imageFinderUI.searchAction();

              var index = result.length;
              for (var i = 0; i < imageFinderUI.result.length; i++) {
                  result[index + i] = imageFinderUI.result[i].copyDocument(true, true);
                  result[index + i].inherited = true;
              }

              var baseItem = Document.readDoc("cwt_pc:cwt_item", baseItemCode);
              if (baseItem.baseItemCode != null) {
                  this.loadParentImages(baseItem.baseItemCode, result);
              }
          }
        ]]></script>
      </method>
      <method name="loadParentRelations" type="uimthd">
        <parameterList>
          <parameter name="baseItemCode" type="rifp">
            <mandatory>true</mandatory>
            <type>dtype_com.conceptwave.system.String</type>
          </parameter>
          <parameter name="result" type="rifp">
            <array>true</array>
            <mandatory>true</mandatory>
            <type>doc_cwt_pc.cwt_itemRelation</type>
          </parameter>
        </parameterList>
        <script><![CDATA[
          if (baseItemCode != null) {
              /*
              var relationFinderUI = new cwt_pc.cwt_itemRelationFinder.UserInterface(null, this);
              relationFinderUI.search.model.itemCode = baseItemCode;
              relationFinderUI.searchAction();
              */

              var f = new Finder("cwt_pc.cwt_itemRelationFinder");
              f.searchDocument.itemCode = baseItemCode;

              var result1 = f.search();

              var index = result.length;
              for (var i = 0; i < result1.length; i++) {
                  result[index + i] = result1[i].copyDocument(true, true);
                  result[index + i].inherited = true;
              }

              var baseItem = Document.readDoc("cwt_pc:cwt_item", baseItemCode);
              if (baseItem.baseItemCode != null) {
                  this.loadParentRelations(baseItem.baseItemCode, result);
              }
          }
        ]]></script>
      </method>
      <method name="loadParentRules" type="uimthd">
        <parameterList>
          <parameter name="baseItemCode" type="rifp">
            <mandatory>true</mandatory>
            <type>dtype_com.conceptwave.system.String</type>
          </parameter>
          <parameter name="result" type="rifp">
            <array>true</array>
            <mandatory>true</mandatory>
            <type>doc_cwt_pc.cwt_itemRule</type>
          </parameter>
        </parameterList>
        <script><![CDATA[
          if (baseItemCode != null) {
              var ruleFinderUI = new cwt_pc.cwt_itemRuleFinder.UserInterface(null, this);
              ruleFinderUI.search.model.itemCode = baseItemCode;
              ruleFinderUI.search.model.catalogObjectType = "Item";
              ruleFinderUI.searchAction();

              var index = result.length;
              for (var i = 0; i < ruleFinderUI.result.length; i++) {
                  result[index + i] = ruleFinderUI.result[i].copyDocument(true, true);
                  result[index + i].inherited = true;
              }

              var baseItem = Document.readDoc("cwt_pc:cwt_item", baseItemCode);
              if (baseItem.baseItemCode != null) {
                  this.loadParentRules(baseItem.baseItemCode, result);
              }
          }
        ]]></script>
      </method>
      <method name="loadVersions" type="uimthd">
        <script><![CDATA[
          this.attributeFinderUI.search.model.itemCode = this.model.itemCode;
          this.attributeFinderUI.search.model.catalogObjectType = "item";
          this.attributeFinderUI.searchAction();

          this.relationFinderUI.search.model.itemCode = this.model.itemCode;
          this.relationFinderUI.searchAction();

          this.imageFinderUI.search.model.itemCode = this.model.itemCode;
          this.imageFinderUI.searchAction();

          this.attachmentFinderUI.search.model.itemCode = this.model.itemCode;
          this.attachmentFinderUI.searchAction();

          this.chargeFinderUI.search.model.itemCode = this.model.itemCode;
          this.chargeFinderUI.search.model.catalogObjectType = "item";
          this.chargeFinderUI.searchAction();

          this.descriptionFinderUI.search.model.itemCode = this.model.itemCode;
          this.descriptionFinderUI.searchAction();

          this.groupFinderUI.search.model.itemCode = this.model.itemCode;
          this.groupFinderUI.searchAction();

          this.identifierFinderUI.search.model.itemCode = this.model.itemCode;
          this.identifierFinderUI.searchAction();

          this.ruleFinderUI.search.model.itemCode = this.model.itemCode;
          this.ruleFinderUI.search.model.catalogObjectType = "Item";
          this.ruleFinderUI.searchAction();

          this.domainFinderUI.search.model.catalogType = "cwt_pc:cwt_item";
          this.domainFinderUI.search.model.catalogID = this.model.itemCode;
          this.domainFinderUI.searchAction();

          this.itemChartFinderUI.search.model.itemCode = this.model.itemCode;
          this.itemChartFinderUI.searchAction();

          if (this.model.baseItemCode != null) {
              this.loadParentAttributes(this.model.baseItemCode, this.attributeFinderUI.result);
              this.loadParentRelations(this.model.baseItemCode, this.relationFinderUI.result);
              this.loadParentImages(this.model.baseItemCode, this.imageFinderUI.result);
              this.loadParentAttachments(this.model.baseItemCode, this.attachmentFinderUI.result);
              this.loadParentCharges(this.model.baseItemCode, this.chargeFinderUI.result);
              this.loadParentDescriptions(this.model.baseItemCode, this.descriptionFinderUI.result);
              this.loadParentIdentifiers(this.model.baseItemCode, this.identifierFinderUI.result);
              this.loadParentRules(this.model.baseItemCode, this.ruleFinderUI.result);
          }

          //this.attributeFinderUI.establishIteratorResult();
          //this.relationFinderUI.establishIteratorResult();
        ]]></script>
      </method>
      <method name="nonEditable" type="permMethod">
        <script>return false;</script>
      </method>
      <method name="onInit" type="action">
        <script><![CDATA[
          // *TL+1: Moved from UserInterface.onInit() (Videotron Item Tree performance problem)
          this.model.projectRef = cwt_pc.getProjectAssignment("cwt_pc:cwt_item", null, this.model.itemCode);

          this.globalUI = new cwt_pc.globalUI(null, this);
          this.attributeFinderUI = new cwt_pc.cwt_itemAttributeFinder.UserInterface(null, this);
          this.relationFinderUI = new cwt_pc.cwt_itemRelationFinder.UserInterface(null, this);
          this.imageFinderUI = new cwt_pc.cwt_itemImageFinder.UserInterface(null, this);
          this.attachmentFinderUI = new cwt_pc.cwt_itemAttachmentFinder.UserInterface(null, this);
          this.chargeFinderUI = new cwt_pc.cwt_itemChargeVersionFinder.UserInterface(null, this);
          this.descriptionFinderUI = new cwt_pc.cwt_itemDescriptionFinder.UserInterface(null, this);
          this.identifierFinderUI = new cwt_pc.cwt_systemIdentifierFinder.UserInterface(null, this);
          this.ruleFinderUI = new cwt_pc.cwt_itemRuleFinder.UserInterface(null, this);
          this.groupFinderUI = new cwt_pc.cwt_itemGroupFinder.UserInterface(null, this);
          this.itemChartFinderUI = new cwt_pc.itemChartFinder.UserInterface(null, this);
          this.itemChartFinderUI.search.model.itemCode = this.model.itemCode;
          //this.itemChartFinderUI.searchAction();

          this.attributeFinderUI.detail = null;
          this.relationFinderUI.detail = null;
          this.imageFinderUI.detail = null;
          this.attachmentFinderUI.detail = null;
          this.chargeFinderUI.detail = null;
          this.descriptionFinderUI.detail = null;
          this.identifierFinderUI.detail = null;
          this.ruleFinderUI.detail = null;
          this.groupFinderUI.detail = null;

          this.clearTabDetails();
          this.clearAttRelDetails();

          this.isAdd = false;
          this.isCopy = false;

          this.domainFinderUI = new cwt_pc.cwt_catalogDomainFinder.UserInterface(null, this);

          var itemTypePermissionDoc = Document.readDoc("cwt_pc:cwt_itemTypePermission", this.model.itemCode);
          if(itemTypePermissionDoc == null){
                itemTypePermissionDoc = new Document("cwt_pc:cwt_itemTypePermission");
                itemTypePermissionDoc.itemCode = this.model.itemCode;
          }
          this.itemTypePermissionUI = new cwt_pc.cwt_itemTypePermission.UserInterface(itemTypePermissionDoc, this);

          this.itemTypeFinderUI = new cwt_pc.cwt_itemTypeFinder.UserInterface(null, this);
          this.itemTypeFinderUI.search.model.baseItemCode = this.model.itemCode;
          this.itemTypeFinderUI.searchAction();
        ]]></script>
      </method>
      <method name="relationPerm" type="permMethod">
        <script>return this.relationVisible;</script>
      </method>
      <method name="rulePerm" type="permMethod">
        <script>return this.ruleVisible;</script>
      </method>
      <method name="tabVisible" type="permMethod">
        <script><![CDATA[
          // return !this.isAdd;
          return this.model.isStored;
        ]]></script>
      </method>
      <method name="updateAction" type="usrActionMethod">
        <allowInvalidObject>true</allowInvalidObject>
        <validate>true</validate>
        <script><![CDATA[
          this.model.validate(5,true,false);
          if (!this.isValid)
                Global.throwException("UE0116", this);

          this.validation();
          var existingDoc = this.model.isStored;
          var newBaseAdded = this.model.isLeafChanged("baseItemCode");
          if (this.isValidated) {
              try {
                    this.model.save();
              } catch (e) {
                      if (e != null && e.message != null) {
                          Global.showUserMessage(e.message);
                      }
                    return;
              }
              if(this.isAdd){
                    cwt_pc.assignProject("cwt_pc:cwt_item", null, this.model.projectRef, this.model.itemCode);
              }

              this.isAdd = false;
              if (this.isCopy) {
                    this.deepCopy(this.model.oldItemCode, this.model.itemCode, this.model.projectRef);
                    this.isCopy = false;
              }

              this.loadVersions();
              if ( (this.parent instanceof cwt_pc.itemTree || this.parent instanceof cwt_pc.itemTypeTree) && (!existingDoc || newBaseAdded)) {
                    this.parent.refreshNode(true,true);
                    var node = this.parent.findNodeFromModel(this.model,true);
                    if (node) {
                          node.setSelected(true);
                          this.parent.displayNode(node);
                    }
              }

                if(this.model.type && !this.model.baseItemCode){ //Only create ItemTypePermission Doc for base ItemType documents
                    this.itemTypePermissionUI.model.itemCode = this.model.itemCode;
                    this.itemTypePermissionUI.model.save();
              }

              this.itemTypeFinderUI.searchAction(); //one extended itemType document may be saved, so update the search result

          } else {
              Global.showUserMessage(this.errorMessage);
              return;
          }
        ]]></script>
      </method>
      <method name="validation" type="uimthd">
        <script><![CDATA[
          var errMsg = "";
          this.errorMessage = "";
          this.isValidated = true;

          //check if the input is using forbidden characters, e.g. "-"
          /*
          try{
          theCatalog.validateName(this.model.itemCode);
          }catch(e){
            errMsg += e.message;
            errMsg += ".  ";
            this.isValidated = false;
          }
          */

          if( cwt_pc.isReservedWord(this.model.itemCode) == true ) {
            errMsg += Global.translateText("CWTPC0017") + "\n";
            this.isValidated = false;
          }

          if (this.model.status == "ACT") {
                var errors = this.model.validateActivation();
                if (errors && errors.length > 0) {
                      errMsg += errors;
                  this.isValidated = false;
                }
          }

          this.errorMessage = errMsg;

          /*
          if(this.model.status == "ACT" && this.model.isStored) {
                // Validate attribute
                var i;
                for (i = 0; i < this.attributeFinderUI.result.length; i++) {
                      if (this.attributeFinderUI.result[i].attributeCode.refData.status != "ACT") {
                              this.errorMessage += Global.translateText("CWTPC0172") + "\n";
                              this.isValidated = false;
                              return;
                      }
                }

                // Validate relation
                for (i = 0; i < this.relationFinderUI.result.length; i++) {
                      if (this.relationFinderUI.result[i].itemRelationTarget.refData.status != "ACT") {
                              this.errorMessage += Global.translateText("CWTPC0173") + "\n";
                              this.isValidated = false;
                              return;
                      }
                }

                // Validate chargeType
                var finder = new cwt_pc.cwt_chargeTypeVersionFinder.UserInterface();
                for (i = 0; i < this.chargeFinderUI.result.length; i++) {
                      finder.search.model.chargeTypeCode = this.chargeFinderUI.result[i].chargeTypeCode;
                      finder.searchAction();
                      var flag = false;
                      for (var j = 0; j < finder.result.length; j ++) {
                            if (finder.result[j].status == "ACT") {
                                  flag = true;
                                  break;
                            }
                      }
                      if (!flag) {
                            this.errorMessage += Global.translateText("CWTPC0174") + "\n";
                            this.isValidated = false;
                              return;
                        }
                }
          }
          */
        ]]></script>
      </method>
      <method name="menuPerm" type="permMethod">
        <script>return this.detailEditable();</script>
      </method>
      <method name="onRefClickForItem" type="usrActionMethod">
        <dialogForm>ReferenceForm</dialogForm>
        <dialogHeight>400</dialogHeight>
        <dialogWidth>800</dialogWidth>
        <parameterList>
          <parameter name="leafName" type="rifp">
            <mandatory>true</mandatory>
            <type>dtype_com.conceptwave.system.String</type>
          </parameter>
          <parameter name="isEditable" type="rifp">
            <mandatory>true</mandatory>
            <type>dtype_com.conceptwave.system.Boolean</type>
          </parameter>
        </parameterList>
        <showInPopup>true</showInPopup>
        <script><![CDATA[
          //refController will return either the reference finder controller
          //or if the element is read-only, refController will return the
          //detail document controller.
          var refController = this.model.getReferenceController(leafName, isEditable, this);

          if (refController && refController.model && refController.model.isBasedOn("cwt_pc:cwt_itemNew")) {
                var itemFinder = new Finder("cwt_pc:cwt_itemFinderNew");
                itemFinder.searchDocument.itemCode = this.model.baseItemCode;

                var itemTree = new NavTree("cwt_pc.itemTree", itemFinder);
                refController = itemTree;

          } else if (refController!=null) {
                refController.parent = this;
          }

          return refController;
        ]]></script>
      </method>
      <method name="loadParentGroups" type="uimthd">
        <parameterList>
          <parameter name="baseItemCode" type="rifp">
            <type>dtype_com.conceptwave.system.String</type>
          </parameter>
          <parameter name="result" type="rifp">
            <type>doc_cwt_pc.cwt_itemGroup</type>
          </parameter>
        </parameterList>
        <script><![CDATA[
          if (baseItemCode != null) {
              var groupFinderUI = new cwt_pc.cwt_itemGroupFinder.UserInterface(null, this);
              groupFinderUI.search.model.itemCode = baseItemCode;
              groupFinderUI.searchAction();

              var index = result.length;
              for (var i = 0; i < groupFinderUI.result.length; i++) {
                  result[index + i] = groupFinderUI.result[i].copyDocument(true, true);
                  result[index + i].inherited = true;
              }

              var baseItem = Document.readDoc("cwt_pc:cwt_item", baseItemCode);
              if (baseItem.baseItemCode != null) {
                  this.loadParentGroups(baseItem.baseItemCode, result);
              }
          }
        ]]></script>
      </method>
      <method name="ifTabVisible" type="permMethod">
        <script>return !this.isAdd;</script>
      </method>
      <method name="itemAttributeUpdate" type="uimthd">
        <parameterList>
          <parameter name="itemAttributeId" type="rifp"/>
        </parameterList>
        <script><![CDATA[
          this.attributeFinderUI.search.model.itemCode = this.model.itemCode;
          this.attributeFinderUI.search.model.catalogObjectType = "item";
          this.attributeFinderUI.searchAction();

          if (this.model.baseItemCode != null) {
              this.loadParentAttributes(this.model.baseItemCode, this.attributeFinderUI.result);
          }

          //this.attributeFinderUI.establishIteratorResult();
        ]]></script>
      </method>
      <method name="itemRelationUpdate" type="uimthd">
        <parameterList>
          <parameter name="itemRelationId" type="rifp"/>
        </parameterList>
        <script><![CDATA[
          this.relationFinderUI.search.model.itemCode = this.model.itemCode;
          this.relationFinderUI.searchAction();

          if (this.model.baseItemCode != null) {
              this.loadParentRelations(this.model.baseItemCode, this.relationFinderUI.result);
          }

          //this.relationFinderUI.establishIteratorResult();
        ]]></script>
      </method>
      <method name="isStored" type="permMethod">
        <script>return this.model.isStored;</script>
      </method>
      <method name="deleteNodeAction" type="usrActionMethod">
        <script><![CDATA[
          var f = this.model.showUsage();
          if (f.result.length > 0) {
                cwt_pc.showUserMessage("CWTPC0023");
                return;
          }

          cwt_pc.deleteReferencedObjects(this.model);
          cwt_pc.setDeletedObjectRecord( this.model );
          this.model.deleteItem();

          var node = this.parent.getSingleSelection();
          node.parent.detail = null;
          node.parent.detailForm = null;
          node.parentNode.refreshNode(true, true);
        ]]></script>
      </method>
      <method name="copyNodeAction" type="usrActionMethod">
        <script><![CDATA[
          //called from item tree
          var node = this.parent.getSingleSelection();

          node.parent.detail = new cwt_pc.cwt_itemNew.UserInterface();
          node.parent.detail.parent = node.parent;
          node.parent.detail.model = this.model.copyDocument(false, true);
          node.parent.detail.model.itemCode = null;
          node.parent.detail.model.status = "DEF";
          node.parent.detail.model.ownerId = UserProfile.userProfile().positionId;
          node.parent.detail.model.projectRef = cwt_pc.getDefaultProjectId();
          node.parent.detail.isAdd = true;
          node.parent.detail.isCopy = true;

          node.parent.detail.model.oldItemCode = this.model.itemCode;
        ]]></script>
      </method>
      <method name="extendNodeAction" type="usrActionMethod">
        <script><![CDATA[
          //called from item tree
          var node = this.parent.getSingleSelection();


          node.parent.detail = new cwt_pc.cwt_itemNew.UserInterface();
          node.parent.detail.parent = node.parent;
          node.parent.detail.isAdd = true;
          node.parent.detail.model = this.model.copyDocument(false, true);
          node.parent.detail.model.baseItemCode = this.model.itemCode;
          node.parent.detail.model.itemCode = null;
          node.parent.detail.model.status = "DEF";
          node.parent.detail.model.ownerId = UserProfile.userProfile().positionId;
          node.parent.detail.model.projectRef = cwt_pc.getDefaultProjectId();
          node.parent.detailForm = "Default";
        ]]></script>
      </method>
      <method name="showUsageAction" type="usrActionMethod">
        <dialogHeight>400</dialogHeight>
        <dialogWidth>800</dialogWidth>
        <showInPopup>true</showInPopup>
        <script>return this.model.showUsage();</script>
      </method>
      <method name="changeHistoryAction" type="usrActionMethod">
        <dialogHeight>400</dialogHeight>
        <dialogWidth>800</dialogWidth>
        <showInPopup>true</showInPopup>
        <script>return this.model.showChangeHistory();</script>
      </method>
      <method name="menuPermDelete" type="permMethod">
        <script><![CDATA[
          if(!this.menuPerm() || !this.model.isStored)
              return false;

          var projCode = cwt_pc.getDefaultProject().projectCode;
           var util = new cwt_pc.CatalogUtil(true);

          var searchDS = new DataStructure("cwt_pcmaintapi:itemSearchDS");
          searchDS.itemCode = this.model.itemCode;
          var itemAssociations = cwt_pcmaintapi.itemRead(searchDS, null,null, true);

          if(!util.checkDeletePermByCode(itemAssociations.itemRules,projCode)){
             return false;
          }
          if(!util.checkDeletePermByCode(itemAssociations.itemAttachments,projCode)){
             return false;
          }
          if(!util.checkDeletePermByCode(itemAssociations.itemImages,projCode)){
             return false;
          }
          if(!util.checkDeletePermByCode(itemAssociations.itemDescriptions,projCode)){
             return false;
          }
          if(!util.checkDeletePermByCode(itemAssociations.itemGroups,projCode)){
             return false;
          }
          if(!util.checkDeletePermByCode(itemAssociations.itemRelations,projCode)){
             return false;
          }
          if( !util.checkDeletePermByCode(itemAssociations.itemChargeVersions,projCode)){
             return false;
          }
          if(!util.checkDeletePermByCode(itemAssociations.itemAttributes,projCode)){
             return false;
          }

          if( !util.checkDeletePermByCode(itemAssociations.itemGroups,projCode)){
             return false;
          }
          /* item group target's projectRef is same as item group's
          if(itemAssociations.itemGroups != null){
              for(var i = 0; i< itemAssociations.itemGroups.length; ++i){
                  if(!util.checkDeletePermByCode(itemAssociations.itemGroups[i].itemGroupTargets,projCode))
                     return false;
              }
          }
          */
          if(!util.checkDeletePermByCode(itemAssociations.systemIdentifiers,projCode)){
             return false;
          }

          //item charge attributes
          var searchDS = new DataStructure("cwt_pcmaintapi:itemChargeTypeAttributeSearchDS");
          searchDS.itemCode = this.model.itemCode;
          var list = cwt_pcmaintapi.itemChargeTypeAttributeSearch(searchDS,null,null,true);
          if(list != null && list.itemChargeTypeAttributes != null && !util.checkDeletePermByCode(list.itemChargeTypeAttributes,projCode)){
              return false;
          }

          //restriction
          searchDS = new DataStructure("cwt_pcmaintapi:restrictionSearchDS");
          searchDS.itemCode = this.model.itemCode;
          var list = cwt_pcmaintapi.restrictionSearch(searchDS);
          if(!util.checkDeletePermByCode(list.restrictions,projCode)){
              return false;
          }

          return true;
        ]]></script>
      </method>
      <method name="menuPermGeneralIcons" type="permMethod">
        <script><![CDATA[
          if (this.model && this.model.parent && this.model.parent.refFinderDocument != null) {
                return false;
          }

          if (this.parent instanceof cwt_pc.itemTree && this.parent.isReference == true) {
                return false;
          }

          return this.model.isStored && (cwt_pc.getDefaultProject() != null);
        ]]></script>
      </method>
      <method name="cancelAction" type="usrActionMethod">
        <script>this.parent.detail = null;</script>
      </method>
      <method name="displayItemNodalChart" type="permMethod">
        <script><![CDATA[return cwt_pc.displayItemNodalChart() && this.isStored();]]></script>
      </method>
      <method name="isStatusEditable" type="permMethod">
        <script><![CDATA[return this.detailEditable() && !cwt_pc.isPLMModeEnabled();]]></script>
      </method>
      <method name="itemMenuPrjSelectedPerm" type="permMethod">
        <script><![CDATA[return this.itemMenuPerm() && (cwt_pc.getDefaultProject() != null);]]></script>
      </method>
      <method name="itemMenuPerm" type="permMethod">
        <script><![CDATA[
          if (this.model && this.model.parent && this.model.parent.refFinderDocument != null) {
                return false;
          }

          if (this.parent instanceof cwt_pc.itemTree && this.parent.isReference == true) {
                return false;
          }

          return this.model.isStored;
        ]]></script>
      </method>
    </methodList>
  </UserInterface>
</document>