<?xml version="1.0" encoding="UTF-8" ?>
<script name="cm_spoc.rule_SessionSpecSectionCondRule">
  <group>rules_scripts.BoltOnType</group>
  <label>rule_SessionSpecSectionCondRule</label>
  <metaVersion>4</metaVersion>
  <parameterList>
    <parameter name="data" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="errList" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    /*
     * If the one of the attributes of the SessionSpecification is set, the BoltOnTypeModality must have one of the following values: [BD,CR,DT,ME,MI,PH,MC,GB,XN]
     * data=BoltOnType
     */
    var json =
          {"data" :
                [
                      {
                                                            "dataExclusionList" : ["conflictResolution","objVisualKey","options","specificationType","specificationCode","baseSpecificationCode","label","description","startDate","effectiveDate","endDate","project","state","attributes","externalIdentifier","externalSource","specificationSubType","ItemCharges","catalogEntity"] ,

                            "admissibleValues" : ["BD","CR","DT","ME","MI","PH","MC","GB","XN"]
                      }

                ]
          };
    var ret = false; //Default return value is TRUE => No Error

    /** Getting and cleaning the SessionSpecification nodes **/
    var nodes = data.SessionSpecificationDS.getNodeNames();

    for (var n=0; n< nodes.length;n++) {
        var nname=nodes[n];
        for (var nex=0;nex<json.data[0].dataExclusionList.length; nex++) {
            if (nname==json.data[0].dataExclusionList[nex]) {
                nodes.splice(n,1);
                n=n-1;
                break;
            }
        }
    }

    /** no we check if one of the nodes is set if so ret=true attendig to cehck the modality**/
    for (var i=0;i< nodes.length;i++) {

        var ent = nodes[i];

        if (data.SessionSpecificationDS[ent]) {
            ret = true; // If the leaf exist and is set to true we need to check that the modality value is one fo the admissible ones that's why we set ret to TRUE

        }

    }

    if (ret) { /*if one of the attribute of SessionSpecification is Set we need to check the modality*/

       for (var k=0; k<json.data[0].admissibleValues.length; k++) {

                    var val = json.data[0].admissibleValues[k];

                    if(data.BoltOnTypeModality == val ) {

                        ret = false; // The Modality value is admissible for the leaf. the return value is set to false : No Error
                    }


                }

    }
    if (ret) {
        if(!cm_spoc.checkInclusion(data.BoltOnTypeModality,["MG","ME"])){
             errList.addErrorMessage(data,["Session Specification","Value Not Allowed for this modality"],"NGAA_EPC_002","E");
        }
    };
    return false;
  ]]></script>
</script>