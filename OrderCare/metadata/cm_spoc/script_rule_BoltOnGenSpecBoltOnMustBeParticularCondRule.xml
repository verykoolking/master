<?xml version="1.0" encoding="UTF-8" ?>
<script name="cm_spoc.rule_BoltOnGenSpecBoltOnMustBeParticularCondRule">
  <group>rules_scripts.BoltOnType</group>
  <label>rule_BoltOnGenSpecBoltOnMustBeParticularCondRule</label>
  <metaVersion>4</metaVersion>
  <parameterList>
    <parameter name="data" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="errList" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    /**
     * If the cm_spoc.data.BoltonGenericSpecification.BoltOnMustBeParticular it's FALSE && the BoltOnTypeModality is DIFFERENT from [CR,PH,XN] return error;
     * BoltOnMustBeParticular is always true but can be FALSE only for the former modality
     */
    var json =
          {"data" :
                [
                      {
                            "entityAttribute" : "BoltOnMustBeParticular",
                            "admissibleValues" : ["CR","PH","XN"]
                      }
                ]
          };

    var ret = false; //Default return value is FALSE => No Error

    for (var i=0;i<json.data.length;i++) {

        var ent = json.data[i].entityAttribute;

        if (data.BoltOnGenericSpecificationDS[ent]) {
           ret = false;
        } else {
            ret = true; // If the leaf DOES NOT EXISTS or and is set to FALSE we need to check that the modality value is one fo the admissible ones that's why we set ret to TRUE
            for (var k=0; k<json.data[i].admissibleValues.length; k++) {

                var val = json.data[i].admissibleValues[k];

                if(data.BoltOnTypeModality == val ) {

                    ret = false; // The Modality value is admissible for the leaf. the return value is set to false : No Error
                }


            }
        }

    }

    if (ret) {
        errList.addErrorMessage(data,["Bolt On Must Be Particular","Value Not Allowed for this modality"],"NGAA_EPC_002","E");
        ret=false;
    }


    return ret;
  ]]></script>
</script>