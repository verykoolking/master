<?xml version="1.0" encoding="UTF-8" ?>
<userInterface name="cm_spoc.forms.NotificationsForm">
  <group>Operation</group>
  <label>NotificationsForm</label>
  <metaVersion>4</metaVersion>
  <variableList>
    <variable name="model" type="leaf">
      <valueType>dstruct_cm_spoc.data.Notifications</valueType>
    </variable>
    <variable name="NotifiableOperationRuleIterator" type="leaf">
      <flags enum-type="metadataFlag">ARRAY</flags>
      <valueType>ui_com.conceptwave.system.UserInterface</valueType>
    </variable>
  </variableList>
  <vformList>
    <vform name="Forms" type="frmui">
      <extends>ui_com.conceptwave.system.UserInterface/frmui_Forms</extends>
      <overlayList>
        <overlay name="Default" type="exov">
          <base>ui_com.conceptwave.system.UserInterface/frmui_Forms/vform_Default</base>
          <extends>ui_com.conceptwave.system.UserInterface/frmui_Forms/vform_Default</extends>
          <label>Default</label>
          <overrideList>
            <override name="Tabset" type="eltset">
              <width>750px</width>
              <elementList>
                <element name="NotifiableOperations" type="eltab">
                  <formReference type="varPath">
                    <variablePathList>
                      <variablePath>ui_cm_spoc.forms.NotificationsForm/frmui_Forms</variablePath>
                      <variablePath>ui_cm_spoc.forms.NotificationsForm/frmui_Forms/vform_NotifiableOperationRule</variablePath>
                    </variablePathList>
                  </formReference>
                  <label>Notifiable Operations</label>
                </element>
              </elementList>
            </override>
          </overrideList>
        </overlay>
        <overlay name="NotifiableOperationRule" type="vform">
          <label>NotifiableOperationRule</label>
          <root name="VerticalLayout2" type="elvlt">
            <elementList>
              <element name="SectionStack" type="elsectnstck">
                <width>3300px</width>
                <elementList>
                  <element name="Section" type="elsect">
                    <elementList>
                      <element name="SectionHeader" type="elsecth">
                        <label>Notifiable Operation Rules</label>
                      </element>
                      <element name="buttonsLayout" type="elhlt">
                        <elementList>
                          <element name="addButton" type="elmnu">
                            <clickMethod type="varPath">
                              <variablePathList>
                                <variablePath>ui_cm_spoc.forms.NotificationsForm/uimthd_addNotifiableOperationRule</variablePath>
                              </variablePathList>
                            </clickMethod>
                            <icon>/cwt/images/16/notebook_add.png</icon>
                            <width>40px</width>
                          </element>
                          <element name="deleteButton" type="elmnu">
                            <clickMethod type="varPath">
                              <variablePathList>
                                <variablePath>ui_cm_spoc.forms.NotificationsForm/uimthd_deleteNotifiableOperationRule</variablePath>
                              </variablePathList>
                            </clickMethod>
                            <icon>/cwt/images/16/delete.png</icon>
                            <width>40px</width>
                          </element>
                        </elementList>
                      </element>
                      <element name="NotifiableOperationRules" type="elgrd">
                        <numOfCols>38</numOfCols>
                        <width>3300px</width>
                        <elementList>
                          <element name="Select" type="ellab">
                            <columnSpan>1</columnSpan>
                            <width>30px</width>
                          </element>
                          <element name="CellSpacer" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="OperationId" type="ellab">
                            <columnSpan>1</columnSpan>
                            <fontProperties type="pfnt">
                              <bold>true</bold>
                              <color>#003366</color>
                            </fontProperties>
                            <label>Operation</label>
                            <width>100px</width>
                          </element>
                          <element name="CellSpacer13" type="elcsp">
                            <width>22px</width>
                          </element>
                          <element name="CellSpacer1" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="SubOperationRelationship" type="ellab">
                            <columnSpan>1</columnSpan>
                            <label>Sub Operation</label>
                            <showLabel>false</showLabel>
                            <width>150px</width>
                          </element>
                          <element name="CellSpacer14" type="elcsp">
                            <width>22px</width>
                          </element>
                          <element name="CellSpacer20" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="SubOperationCodeValue" type="ellab">
                            <columnSpan>1</columnSpan>
                            <label>Code Value</label>
                            <showLabel>false</showLabel>
                            <width>150px</width>
                          </element>
                          <element name="CellSpacer19" type="elcsp">
                            <width>22px</width>
                          </element>
                          <element name="CellSpacer2" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="TariffPlanIdentifier" type="ellab">
                            <columnSpan>1</columnSpan>
                            <label>Plan</label>
                            <width>60px</width>
                          </element>
                          <element name="CellSpacer17" type="elcsp">
                            <width>22px</width>
                          </element>
                          <element name="CellSpacer3" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="NodeIdentifier" type="ellab">
                            <columnSpan>1</columnSpan>
                             <fontProperties type="pfnt">
                              <bold>true</bold>
                              <color>#3D3D7A</color>
                            </fontProperties>
                            <label>Nodes to Notify *</label>
                            <width>170px</width>
                          </element>
                          <element name="CellSpacer4" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="Subscriber" type="ellab">
                            <columnSpan>1</columnSpan>
                            <label>Subscriber Substatus</label>
                            <width>60px</width>
                          </element>
                          <element name="CellSpacer15" type="elcsp">
                            <width>22px</width>
                          </element>
                          <element name="CellSpacer16" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="Status" type="ellab">
                            <columnSpan>1</columnSpan>
                            <label>Subscriber Status</label>
                            <width>60px</width>
                          </element>
                          <element name="CellSpacer5" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="Substatus" type="ellab">
                            <columnSpan>1</columnSpan>
                            <label>Subscriber Substatus</label>
                            <width>60px</width>
                          </element>
                          <element name="CellSpacer6" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="SubstatusDescription" type="ellab">
                            <columnSpan>1</columnSpan>
                            <label>Subscriber Substatus Description</label>
                            <width>60px</width>
                          </element>
                          <element name="CellSpacer18" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="ServiceProviderId" type="ellab">
                            <columnSpan>1</columnSpan>
                            <label>Service Provider</label>
                            <width>60px</width>
                          </element>
                          <element name="CellSpacer7" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="NotifErrorListHandling" type="ellab">
                            <columnSpan>1</columnSpan>
                            <fontProperties type="pfnt">
                              <bold>true</bold>
                              <color>#003366</color>
                            </fontProperties>
                            <label>Any error</label>
                            <width>60px</width>
                          </element>
                          <element name="CellSpacer8" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="ErrorCode" type="ellab">
                            <columnSpan>1</columnSpan>
                            <label>The selected</label>
                            <width>60px</width>
                          </element>
                          <element name="CellSpacer9" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="OperationMode" type="ellab">
                            <columnSpan>1</columnSpan>
                            <fontProperties type="pfnt">
                              <bold>true</bold>
                              <color>#003366</color>
                            </fontProperties>
                            <label>Operation Mode</label>
                            <width>60px</width>
                          </element>
                          <element name="CellSpacer10" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="DeliveryRescheduling" type="ellab">
                            <columnSpan>1</columnSpan>
                            <label>Delivery Rescheduling</label>
                            <width>60px</width>
                          </element>
                          <element name="CellSpacer11" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="RequiresSubscription" type="ellab">
                            <columnSpan>1</columnSpan>
                            <label>Requires Subscription</label>
                            <width>60px</width>
                          </element>
                          <element name="CellSpacer12" type="elcsp">
                            <width>5px</width>
                          </element>
                          <element name="Active" type="ellab">
                            <columnSpan>1</columnSpan>
                            <label>Active</label>
                            <width>60px</width>
                          </element>
                        </elementList>
                      </element>
                      <element name="ConditionsVL" type="elvlt">
                        <height>200px</height>
                        <overflow>auto</overflow>
                        <width>3300px</width>
                        <elementList>
                          <element name="ConditionsIterator" type="eliter">
                            <variable type="varPath">
                              <variablePathList>
                                <variablePath>ui_cm_spoc.forms.NotificationsForm/leaf_NotifiableOperationRuleIterator</variablePath>
                              </variablePathList>
                            </variable>
                            <elementList>
                              <element name="ConditionsHL" type="elhlt">
                                <width>3300px</width>
                                <elementList>
                                  <element name="ConditionsFormFrame" type="elovf">
                                    <fillSpace>false</fillSpace>
                                    <formReference type="varPath">
                                      <variablePathList>
                                        <variablePath>ui_cm_spoc.forms.NotificationsForm/leaf_NotifiableOperationRuleIterator</variablePath>
                                        <variablePath>ui_com.conceptwave.system.UserInterface/frmui_Forms</variablePath>
                                        <variablePath>ui_com.conceptwave.system.UserInterface/frmui_Forms/vform_Default</variablePath>
                                      </variablePathList>
                                    </formReference>
                                    <width>3300px</width>
                                  </element>
                                </elementList>
                              </element>
                            </elementList>
                          </element>
                        </elementList>
                      </element>
                    </elementList>
                  </element>
                </elementList>
              </element>
            </elementList>
          </root>
        </overlay>
      </overlayList>
    </vform>
  </vformList>
  <methodList>
    <method name="cwLeafInitAction$model" type="laction">
      <path>ui_cm_spoc.forms.NotificationsForm/leaf_model</path>
      <type>initializer</type>
      <script><![CDATA[
        var m = cm_spoc.initNotifications(this.model);
        cm_spoc.initNotifiableOperationRuleIteratorUI(this);

        var NotifiableOperationRule = m.NotificationsNotOpRuleArrDS.ListDS;
        for(var i=0;i<NotifiableOperationRule.length;i++)
        {
            if(NotifiableOperationRule[i].Operation!=null)
            {
                var s = new epc.data.Specification();
                s.project =  cwa_epc.getDefaultProj();

                s.specificationCode = NotifiableOperationRule[i].Operation;
                var operation = epc.getSpecificationByKey(s);
                if(operation)
                {
                    var subOperationByOperationFinder = new Finder("cm_spoc.SubOperationsByOperationScriptFinder");
                    subOperationByOperationFinder.searchDocument.Operation = operation.OperationId;
                    var result = subOperationByOperationFinder.search();

                    if(result.length>0)
                    {
                        if(result[0].Entity == true){
                            this.NotifiableOperationRuleIterator[i].subOpEntityLabel = result[0].Label;
                            this.NotifiableOperationRuleIterator[i].SubOpType = result[0].SubOperation;
                            this.NotifiableOperationRuleIterator[i].subOpCodeTable = false;
                            this.NotifiableOperationRuleIterator[i].subOpComplex = false;

                            var subOperationDS = this.NotifiableOperationRuleIterator[i].model.SubOperationDS;
                            var subOperation = subOperationDS.getValueByName(result[0].SubOperation);
                            this.NotifiableOperationRuleIterator[i].subOperation = subOperation
                        }
                        else{
                            if(result[0].Entity == false){
                                if(result[0].Complex == null){

                                    this.NotifiableOperationRuleIterator[i].subOpEntityLabel = result[0].Label;
                                    this.NotifiableOperationRuleIterator[i].SubOpType = result[0].SubOperation;
                                    this.NotifiableOperationRuleIterator[i].SubOperationCode = result[0].SubOperationCode;
                                    this.NotifiableOperationRuleIterator[i].subOpComplex = false;
                                    this.NotifiableOperationRuleIterator[i].subOpEntity = false;

                                    var subOperationDS = this.NotifiableOperationRuleIterator[i].model.SubOperationDS;
                                    cm_spoc.initSubOpFromCT(subOperationDS,result[0].SubOperation);
                                    var subOpCTDS = this.NotifiableOperationRuleIterator[i].model.SubOperationDS.getValueByName(this.NotifiableOperationRuleIterator[i].SubOpType+"DS");
                                    var subOpCT = subOpCTDS.getValueByName(this.NotifiableOperationRuleIterator[i].SubOperationCode);
                                    this.NotifiableOperationRuleIterator[i].subOperation = subOpCT;
                                }
                                else{
                                    switch(result[0].Complex){
                                    case 1:
                                        this.NotifiableOperationRuleIterator[i].subOpEntityLabel = result[0].Label;
                                        this.NotifiableOperationRuleIterator[i].subOpCodeTableLabel = result[0].Label;
                                        this.NotifiableOperationRuleIterator[i].SubOpType = result[0].SubOperation;
                                        this.NotifiableOperationRuleIterator[i].SubOperationCode = result[0].SubOperationCode;
                                        this.NotifiableOperationRuleIterator[i].subOpEntity = false;
                                        this.NotifiableOperationRuleIterator[i].subOpCPtype = result[0].Complex;
                                        this.NotifiableOperationRuleIterator[i].subOpRelations = result[0].Relations;
                                        this.NotifiableOperationRuleIterator[i].subOpComplexLabel = result[0].SubOperationCode;
                                        var entity = result[0].Relations.split(":");

                                        var subOperationDS = this.NotifiableOperationRuleIterator[i].model.SubOperationDS;
                                        cm_spoc.initSubOpFromCT(subOperationDS,result[0].SubOperation);
                                        var subOpInDS = this.NotifiableOperationRuleIterator[i].model.SubOperationDS.getValueByName(this.NotifiableOperationRuleIterator[i].SubOpType+"DS");

                                        var subOpInCode = subOpInDS.getValueByName(this.NotifiableOperationRuleIterator[i].SubOperationCode);
                                        this.NotifiableOperationRuleIterator[i].subOperation = subOpInDS.getValueByName(entity[0]);
                                        this.NotifiableOperationRuleIterator[i].SubOperationCodeValue = subOpInCode;
                                        break;
                                    case 2:
                                        this.NotifiableOperationRuleIterator[i].subOpEntityLabel = result[0].Label;
                                        this.NotifiableOperationRuleIterator[i].subOpCodeTableLabel = result[0].Label;
                                        this.NotifiableOperationRuleIterator[i].SubOpType = result[0].SubOperation;
                                        this.NotifiableOperationRuleIterator[i].SubOperationCode = result[0].SubOperationCode;
                                        this.NotifiableOperationRuleIterator[i].subOpEntity = false;
                                        this.NotifiableOperationRuleIterator[i].subOpCPtype = result[0].Complex;
                                        this.NotifiableOperationRuleIterator[i].subOpRelations = result[0].Relations;
                                        var subAtt = result[0].SubOperationCode.split(":");
                                        var entity = result[0].Relations.split(":");

                                        var subOperationDS = this.NotifiableOperationRuleIterator[i].model.SubOperationDS;
                                        cm_spoc.initSubOpFromCT(subOperationDS,result[0].SubOperation);
                                        var subOpInDS = this.NotifiableOperationRuleIterator[i].model.SubOperationDS.getValueByName(this.NotifiableOperationRuleIterator[i].SubOpType+"DS");

                                        this.NotifiableOperationRuleIterator[i].subOperation = subOpInDS.getValueByName(subAtt[0]);
                                        break;
                                    }
                                }
                            }
                        }
                    }
                }
            }

            if(NotifiableOperationRule[i].LifeCycleSubStatus!=null)
            {
                var s = new epc.data.Specification();
                s.project =  cwa_epc.getDefaultProj();

                s.specificationCode = NotifiableOperationRule[i].LifeCycleSubStatus;
                var lifeCycleSubStatus = epc.getSpecificationByKey(s);
                if(lifeCycleSubStatus)
                {
                    this.NotifiableOperationRuleIterator[i].Status = lifeCycleSubStatus.Status;
                    this.NotifiableOperationRuleIterator[i].Substatus = lifeCycleSubStatus.Status;
                    this.NotifiableOperationRuleIterator[i].SubstatusDescription = lifeCycleSubStatus.DescriptionOfSubstatus;
                }
            }

            if(NotifiableOperationRule[i].NotifErrorListHandling == 'S'){
               this.NotifiableOperationRuleIterator[i].isloading = true;
            }

            if(NotifiableOperationRule[i].ServiceProviderEnum == null){
                NotifiableOperationRule[i].ServiceProviderEnum = NotifiableOperationRule[i].ServiceProvider;
            }
        }

        return m;
      ]]></script>
    </method>
    <method name="addNotifiableOperationRule" type="uimthd">
      <script><![CDATA[
        var model=this.model.NotificationsNotOpRuleArrDS.ListDS;
        cm_spoc.addListElementWithoutNodes(this, model,"cm_spoc.forms.NotifiableOperationRuleIteratorUI",'base_NotifiableOperationRule',"NotifiableOperationRuleIterator");
      ]]></script>
    </method>
    <method name="deleteNotifiableOperationRule" type="uimthd">
      <script><![CDATA[
        this.model.NotificationsNotOpRuleArrDS = cm_spoc.removeListElements(this ,this.model.NotificationsNotOpRuleArrDS,"List","NotifiableOperationRuleIterator");
      ]]></script>
    </method>
    <method name="setReadOnly" type="uimthd">
      <script>return true;</script>
    </method>
  </methodList>
</userInterface>