<?xml version="1.0" encoding="UTF-8" ?>
<script name="cm_spoc.rule_FreezeRateUnitsCondRule">
  <group>rules_scripts.BoltOnType</group>
  <label>rule_FreezeRateUnitsCondRule</label>
  <metaVersion>4</metaVersion>
  <parameterList>
    <parameter name="data" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
    <parameter name="errList" type="rifp">
      <type>nmeta_com.conceptwave.system.Object</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    /**
     BoltOnGenericSpecificationDS.FreezeRateUnits
    BoltOnGenericSpecificationDS.DoesNotApplyToLongDistance
    BoltOnGenericSpecificationDS.DoesNotApplyToAirTime
     */
    var json =
          {"data" :
                [
                      {
                            "entityAttribute" : "FreezeRateUnits",
                            "admissibleValues" : ["MC","BD","MG","GB"]
                      }
                ]
          };

    var ret = false; //Default return value is FALSE => No Error

    for (var i=0;i<json.data.length;i++) {

        var ent = json.data[i].entityAttribute;

        if (data.BoltOnGenericSpecificationDS[ent]) {

            ret = true; // If the leaf EXISTS or and is set to TRUE we need to check that the modality value is one fo the admissible ones that's why we set ret to TRUE
            for (var k=0; k<json.data[i].admissibleValues.length; k++) {

                var val = json.data[i].admissibleValues[k];

                if(data.BoltOnTypeModality == val ) {

                    ret = false; // The Modality value is admissible for the leaf. the return value is set to false : No Error
                }


            }
        }

    }

    if (ret) {
        errList.addErrorMessage(data,["Freeze Rate Units","Value Not Allowed for this modality"],"NGAA_EPC_002","E");
        ret=false;
    }




    /************/


    ret = false; //Default return value is FALSE => No Error

    for (var i=0;i<json.data.length;i++) {

        var ent = json.data[i].entityAttribute;

        if (data.BoltOnGenericSpecificationDS[ent]) {

            if (data.BoltOnGenericSpecificationDS.DoesNotApplyToLongDistance || data.BoltOnGenericSpecificationDS.DoesNotApplyToAirTime) {
             errList.addErrorMessage(data,["Does Not Apply to Long Distance or Does Not Apply to Air Time","Freeze Rate Units is not compatible with:"],"NGAA_EPC_002","E");
            }
        }

    }



    return ret;
  ]]></script>
</script>