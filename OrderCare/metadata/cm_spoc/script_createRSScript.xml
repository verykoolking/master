<?xml version="1.0" encoding="UTF-8" ?>
<script name="cm_spoc.createRSScript">
  <group>overridden.scripts</group>
  <label>createRSScript</label>
  <metaVersion>4</metaVersion>
  <overrides>script_cwl_ruleSet.createRSScript</overrides>
  <parameterList>
    <parameter name="type" type="rifp">
      <type>dtype_ruleSet.ruleType</type>
    </parameter>
    <parameter name="rs" type="rifp">
      <type>dstruct_cwl_ruleSet.ruleSetType</type>
    </parameter>
  </parameterList>
  <script><![CDATA[
    var rList = rs.ruleSet;
    var f = "";
    var s;
    if (type != 'P')
        s = "";
    else
        s = "var ret = 0; ";

    var c = 0;
    for (var i = 0; i < rList.length; i++, c++) {
        var rs = rList[i];
        var con = false;
        // put tag condidion
        s += "if ((tag != null && tag == \"" + rs.tag + "\") || (tag == null && 1==" + (rs.isDefault ? '1' : '0') + ")) {";
        if (rs.condition != null && rs.condition.length > 0) {
            s += "if (fCon" + c + "(data)) {";    // put ruleset condition
            con = true;
            f += composeFunction("fCon" + c,"data,errList",rs.condition); //GLF Added errList
        }
        var rl = rs.rule;
        for (var j=0; j<rl.length; j++, c++) {
            var r = rl[j];
            f += composeFunction("fExp" + c,"data,errList",r.expression); //GLF Added errList
            var priv =  getPrivilege(r.privilege);
            if (priv != null)
                s  += "if (cwl_ruleSet.checkPrivilege([" + priv + "])) {"
            if (type == 'P') {    // permission rule
                s += "if (type == \"" + r.type + "\" && (leaf != null && leaf == \"" + r.leafName + "\") || (leaf == null && 1==" + (r.leafName == null ? '1' : '0') + ")) {";
                s += "var res = fExp" + c + "(data); if (res) return 1; else ret = -1; } ";
            }
            else  if (type == 'I') {    // initialization rule
    //            CW: isChild on DS issue (pending 5.2.1.3)
    //            s += "var nodeNames = data.getNodeNames(); for(var n = 0; n < nodeNames.length; n++){if (\""+ r.leafName +"\" == nodeNames[n]){data." + r.leafName + "=" + "fExp" + (i*10+j) +  "(data); n=nodeNames.length;}}";
                s += "data." + r.leafName + "=" + "fExp" + c +  "(data);"; //isChild doesn't work for DS
    //            s += "if (data.isChild(\"" +  r.leafName + "\")) data." + r.leafName + "=" + "fExp" + (i*10+j) +  "(data);";
            }
            else {    // validation rule
                if (r.type == 'M')
                    s += "if (data[\"" + r.leafName + "\"] == null) ";
    //                s += "if (!data.hasValue(\"" +  r.leafName + "\")) ";
                else
                    s += "if (fExp" + c + "(data, errList)) "; //GLF Added errList
                s += "errList.addErrorMessage(data,[\"" +  r.leafName + "\",null],\"" + r.code + "\",\"" + r.severity + "\");";
            }
            if (priv != null)
                s += "}";
        }

        if (con)
            s += "} ";    // close rulset condition
        s += "} ";        // close tag condition
    }
    if (type == 'P')
        s += "return ret; ";
    else if (type == 'V')
        s += "return errList.size(); ";

    s += f;               // add functions
    return s;

    function getPrivilege(priv) {
        if (priv == null || priv.length == 0)
            return null;
        var s = "";
        for (var i=0; i<priv.length; i++) {
            if (i > 0)
                s += ",";
            s += "\"" + priv[i] + "\"";
        }
        return s;
    }

    function composeFunction(name,param,script) {
        if (script == null)
            return "";
        var ret = script.indexOf("return") >= 0;
        var f  = "function " + name + "(" + param + ") { ";
        if (!ret)
            f += "return ";
        f += script;
        return f + "}";
    }
  ]]></script>
</script>