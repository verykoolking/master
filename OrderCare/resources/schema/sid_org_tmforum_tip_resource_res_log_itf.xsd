<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201207021234 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) TeleManagement Forum 2012. All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 


Direct inquiries to the TM Forum office: 
 
240 Headquarters Plaza,
East Tower - 10th Floor,
Morristown, NJ  07960 USA
Tel No.  +1 973 944 5100
Fax No.  +1 973 944 5110
TM Forum Web Page: www.tmforum.org
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/itf" xmlns:address="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/address" xmlns:tp="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/trans/tp" xmlns:routed="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/proto/routed" xmlns:proto="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/proto" xmlns:bridge="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/proto/bridge" xmlns:wan="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/proto/wan" xmlns:lan="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/proto/lan" xmlns:rfs="http://www.tmforum.org/xml/sid/org/tmforum/tip/service/serv/rfs" xmlns:routing="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/proto/routing" xmlns:role="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/role" xmlns:device="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/device" xmlns:swtch="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/proto/swtch" xmlns:entity="http://www.tmforum.org/xml/tip/internal/entity" xmlns:hw="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/phy/hw" targetNamespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/itf" attributeFormDefault="unqualified" elementFormDefault="qualified" version="13.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: SID_Model
                        at version: 13.0
      for all artifacts in package: org.tmforum.tip.resource.res.log.itf
      Model Description:
      Model Project for SID xsd generation
      Package Description:
      
      Package data summary information:
            entities: 10
 Association Classes: 2
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 0
      </pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/address" schemaLocation="sid_org_tmforum_tip_resource_res_log_address.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/trans/tp" schemaLocation="sid_org_tmforum_tip_resource_res_log_trans_tp.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/proto/routed" schemaLocation="sid_org_tmforum_tip_resource_res_log_proto_routed.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/proto" schemaLocation="sid_org_tmforum_tip_resource_res_log_proto.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/proto/bridge" schemaLocation="sid_org_tmforum_tip_resource_res_log_proto_bridge.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/proto/wan" schemaLocation="sid_org_tmforum_tip_resource_res_log_proto_wan.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/proto/lan" schemaLocation="sid_org_tmforum_tip_resource_res_log_proto_lan.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/service/serv/rfs" schemaLocation="sid_org_tmforum_tip_service_serv_rfs.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/proto/routing" schemaLocation="sid_org_tmforum_tip_resource_res_log_proto_routing.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/role" schemaLocation="sid_org_tmforum_tip_resource_res_log_role.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/device" schemaLocation="sid_org_tmforum_tip_resource_res_log_device.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/proto/swtch" schemaLocation="sid_org_tmforum_tip_resource_res_log_proto_swtch.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/internal/entity" schemaLocation="internal_entity.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/phy/hw" schemaLocation="sid_org_tmforum_tip_resource_res_phy_hw.xsd"/><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** -->
   <xsd:element name="aTMInterface" type="tns:ATMInterface"/>
   <xsd:complexType name="ATMInterface">
      <xsd:annotation>
         <xsd:documentation>
            <p>ATM, orr Asynchronous Transfer Mode, is a network technology based on transferring data in cells of a fixed size. The cell used with ATM is relatively small compared to that used with older technologies. In principle, the small, constant cell size allows ATM equipment to transmit video, audio, and computer data over the same network, and assure that no single type of data can dominate network traffic.

ATM creates a fixed route between two points whenever data transfer begins. This differs from TCP/IP, in which messages are divided into packets and each packet can take a different route from source to destination. This difference makes it easier to track and bill data usage across an ATM network, but it makes it less adaptable to sudden surges in network traffic.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="bitRateType" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer, and defines the transmission philosophy used. Values include:

0: not yet configured
1: constant bit rate (CBR)
2: variable bit rate (VBR)
3: available bit rate (ABR)
4: unspecified bit rate (UBR)

CBR specifies a fixed bit rate so that data is sent in a steady stream. This is analogous to a leased line.

VBR provides a specified throughput capacity but data is not sent evenly. This is often used for voice and video data.

ABR provides a guaranteed minimum capacity but allows data to be bursted at higher capacities when the network is free.

UBR does not guarantee any throughput levels. This is used for applications, such as file transfer, that can tolerate delays.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfATMInterface">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ATMInterface" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="deviceInterface" type="tns:DeviceInterface"/>
   <xsd:complexType name="DeviceInterface" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete class that represents the (logical) interface or sub-interface of a device. A DeviceInterface is a concrete class that represents the (logical) interface or sub-interface of a device. This is not a transmission entity; rather, DeviceInterfaces are used to program Services and LogicalResources on a Device. For example, it is used to program a logical connection from a device to a network medium. Different types of DeviceInterfaces exist for the different types of network media (e.g., IP vs. ATM) that are used in a network to enable such media to be programmed. The combination of a LogicalDevice and a DeviceInterface is what a developer programs to define Services that run on the device.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="customerInterfaceNumber" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is the number of this particular device interface using a naming methodology defined by the Customer.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="hasCarrierDetect" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a Boolean attribute that, if TRUE, represents that the physical carrier detect signal has been received.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="hasDataLink" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a Boolean attribute that, if TRUE, represents that the data link framing is operational. This is usually triggered by correct operation of the line protocol.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="isInterfaceEnabled" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a Boolean attribute that, if TRUE, means that this device is logically enabled and can send and receive transmissions. If the value of this attribute is FALSE, then it is disabled and cannot send or receive transmissions.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="vendorInterfaceNumber" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is the number of this particular device interface using vendor specific naming. This attribute is required, because this is the how the vendor refers to this attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="deviceConfigMethod" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines how this interface is to be configured. Values include:

0 - not configured
1 - using the CONSOLE port
2 - using the AUXILIARY port
3 - using a virtual terminal interface
4 - download through a TFTP server
5 - download through an FTP server
6 - download through a NMS

If the value of this attribute is 3, then the vtyNumber attribute must be filled in with the particular vty interface that is being used.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="networkAddress" type="address:ArrayOfNetworkAddress" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association InterfaceNetworkAddressDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="logicalDevice" type="device:LogicalDevice" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association DeviceInterfaceMgmtDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="deviceInterfaceRole" type="role:ArrayOfDeviceInterfaceRole" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association DeviceInterfaceTakesOn</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="lANProtocol" type="lan:ArrayOfLANProtocol" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association InterfaceUsesLANProtocol</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="resourceFacingService" type="rfs:ArrayOfResourceFacingService" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  unique</p>
                        <p>This association end  is  an end of association ServiceDeviceInterfaceDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="deviceInterface" type="tns:ArrayOfDeviceInterface" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..*</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association SuppliesUnNumberedInterface</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="deviceInterface0" type="tns:DeviceInterface" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association SuppliesUnNumberedInterface</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="physicalPort" type="hw:ArrayOfPhysicalPort" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association DeviceInterfacePPortDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="terminationPoint" type="tp:ArrayOfTerminationPoint" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association DeviceInterfaceTPDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="bridgingProtocol" type="bridge:ArrayOfBridgingProtocol" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association InterfaceUsesBridgingProtocol</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="hybridRoutingProtocol" type="routing:ArrayOfHybridRoutingProtocol" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association InterfaceUsesHybridRoutingProtocol</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="linkStateRoutingProtocol" type="routing:ArrayOfLinkStateRoutingProtocol" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association InterfaceUsesLSRoutingProtocol</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="routedProtocol" type="routed:ArrayOfRoutedProtocol" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association InterfaceUsesRoutedProtocol</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="switchingProtocol" type="swtch:ArrayOfSwitchingProtocol" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association InterfaceUsesSwitchingProtocol</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="wANProtocol" type="wan:ArrayOfWANProtocol" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association InterfaceUsesWANProtocol</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="protocol" type="proto:Protocol" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ProtocolDeviceInterfaceDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfDeviceInterface">
      <xsd:sequence>
         <xsd:element name="item" type="tns:DeviceInterface" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="deviceSubInterface" type="tns:DeviceSubInterface"/>
   <xsd:complexType name="DeviceSubInterface">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete class that represents sub-interfaces. These are virtual interfaces that are bound to a single physical interface.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="numberOfSubInterface" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a non-negative integer, and is the number of this particular sub-interface. The combination of sub-interface number and interface number must be unique.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfDeviceSubInterface">
      <xsd:sequence>
         <xsd:element name="item" type="tns:DeviceSubInterface" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="ethernetInterface" type="tns:EthernetInterface"/>
   <xsd:complexType name="EthernetInterface">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete class that refines the concept of a DeviceInterface into a EthernetDeviceInterface.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="ethernetCurrentSpeed" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an integer attribute that defines the current speed of this Ethernet interface. Note that this may be different than the maximum speed of this interface (which is defined in the ethernetSpeed attribute) because the interface may be rate-limited through software.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="ethernetSpeed" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines the type of media that this device interface can support. Values include:

0 - 10M (Ethernet)
1 - 100M (FastEthernet, only)
2 - auto-sensing between 10M and 100M
3 - 1000M (Gigabit Ethernet only)</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="duplexSetting" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that specifies whether duplex operation should be used or not. Values include:

0: auto-negotiate duplex speed
1: full-duplex
2: half-duplex</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="maxEthernetDataSize" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an integer attribute that corresponds to the dot1dTpPortMaxInfo variable defined in the Bridge MIB.

It defines the maximum size of the INFO (non-MAC) field that will be transmitted or received on this interface.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfEthernetInterface">
      <xsd:sequence>
         <xsd:element name="item" type="tns:EthernetInterface" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="logicalInterface" type="tns:LogicalInterface"/>
   <xsd:complexType name="LogicalInterface" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract class that serves as the superclass for all virtual interfaces. LogicalInterfaces are also called virtual interfaces. This is because a LogicalInterface has no hardware associated with it, and it is not physically connected to a network. It serves as a convenient aggregation point for running different relationships that affect its subclasses, thereby avoiding having to instantiate multiple relationships that are essentially the same.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="mediaInterface" type="tns:ArrayOfMediaInterface" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ContainsLogicalInterfaces</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfLogicalInterface">
      <xsd:sequence>
         <xsd:element name="item" type="tns:LogicalInterface" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="loopbackInterface" type="tns:LoopbackInterface"/>
   <xsd:complexType name="LoopbackInterface">
      <xsd:annotation>
         <xsd:documentation>
            <p>A LoopbackInterface is a virtual interface (what DEN-ng calls a LogicalInterface). Traffic sent to the LoopbackInterface is forwarded to the Device itself for further processing.

A LoopbackInterface is commonly used to guarantee reachability in networks with multiple paths. it is also used to test IP software without worrying about broken or corrupted drivers or hardware.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfLoopbackInterface">
      <xsd:sequence>
         <xsd:element name="item" type="tns:LoopbackInterface" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="mediaInterface" type="tns:MediaInterface"/>
   <xsd:complexType name="MediaInterface" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract class that serves as the superclass for all physical interfaces (physical in the sense that they are real interfaces that can be instantiated - they are still logical entities) whose functionality is dependent on a particular transmission medium (e.g., Ethernet vs. ATM). It serves as a convenient aggregation point for running different relationships that affect its subclasses, thereby avoiding having to instantiate multiple relationships that are essentially the same.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="mtuSupported" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an integer attribute that defines the size of the maximum transmission unit (MTU) that can be supported by this interface.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="mtuCurrent" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an integer attribute that defines the size of hte maximum transmission unit (MTU) that is currently set for this particular interface.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="supportsMLPPP" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a Boolean attribute that, if TRUE, signifies this Media Interface of being able to support MLPPP as defined in RFC 1990.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="logicalInterface" type="tns:ArrayOfLogicalInterface" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ContainsLogicalInterfaces</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="mediaInterface" type="tns:ArrayOfMediaInterface" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association InterfacesInMLPPPConfig</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="mediaInterface1" type="tns:MediaInterface" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association InterfacesInMLPPPConfig</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfMediaInterface">
      <xsd:sequence>
         <xsd:element name="item" type="tns:MediaInterface" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="nullInterface" type="tns:NullInterface"/>
   <xsd:complexType name="NullInterface">
      <xsd:annotation>
         <xsd:documentation>
            <p>A NullInterface is a virtual interface. Traffic sent to the NullInterface is discarded automatically.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfNullInterface">
      <xsd:sequence>
         <xsd:element name="item" type="tns:NullInterface" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="serialInterface" type="tns:SerialInterface"/>
   <xsd:complexType name="SerialInterface">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete class that refines the concept of a DeviceInterface into a SerialDeviceInterface.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="bandwidth" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This defines the bandwidth of this interface.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="clockRate" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This defines the clock rate of a DCE device. If this is a DTE device, then this attribute should be NULL.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="isDCE" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a Boolean attribute that, if TRUE, defines this as a DCE device (i.e., one that supplies a clocking signal). If the value of this attribute is FALSE, then it is a DTE device (one that uses clocking).</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfSerialInterface">
      <xsd:sequence>
         <xsd:element name="item" type="tns:SerialInterface" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="tokenRingInterface" type="tns:TokenRingInterface"/>
   <xsd:complexType name="TokenRingInterface">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete class that refines the concept of a DeviceInterface into a TokenRingDeviceInterface.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="ringStatus" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an integer attribute that defines the current status which can be used to diagnose fluctuating problems that can occur on token rings, after a station has successfully been added to the ring. These values are taken from the IEEE 802.5 Token Ring MIB's dot5RingStatus attribute. Values include:

0: No Problems Detected
32: Ring Recovery
64: Single Station
256: Remove Received
512: Reserved
1024: Auto-Removal Error
2048: Lobe Wire Fault
4096: Transmit Beacon
8192: Soft Error
16384: Hard Error
32768: Signal Loss
131072: No Status</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="ringSpeed" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that specifies the ring speed of the TokenRing network that this device interface is connected to. This information is based on the IEEE 802.5 Token Ring MIB's dot5RingSpeed variable. Values include:

0 - not connected
1 - 1MBPS
2 - 4MBPS
3 - 16 MBPS
4 - Other</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="ringState" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an integer attribute that defines the state of the current Device with respect to entering or leaving the ring. Its values are taken from the IEEE 802.5 Token Ring MIB's dot5RingState variable. Values include:

0: Opened
1: Closed
2: Opening
3: Closing
4: Open Failure
5: Ring Failure</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="ringOpenStatus" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an integer attribute that indicates the success, or the reason for failure, of the device's most recent attempt to enter the ring. This is based on the IEEE's 802.5 Token Ring MIB's dot5RingOpenStatus variable. Values include:

0: No Open Attempted
1: Bad Parameter
2: Lobe Failed
3: Signal Loss
4: Insertion Timeout
5: Ring Failed
6: Beaconing
7: Duplicate MAC
8: Request Failed
9: Remove Received
10: Last Open Successful
MappingStrings {
"MIB.IETF|IEEE 802.5 Token Ring MIB.dot5RingOpenStatus"}</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfTokenRingInterface">
      <xsd:sequence>
         <xsd:element name="item" type="tns:TokenRingInterface" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* -->
   <xsd:element name="deviceInterfaceMgmtDetails" type="tns:DeviceInterfaceMgmtDetails"/>
   <xsd:complexType name="DeviceInterfaceMgmtDetails">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class is used to represent the semantics of the LogicalDeviceGovernsDeviceInterfaces aggregation.

In general, there are multiple ways to manage a Deviceinterface. The first distinction lies in what is being managed. DEN-ng defines two types of management commands categories: configuration and operational. Configuration commands are used to configure the DeviceInterface (and also the LogicalDevice for commands that affect more than one specific DeviceInterface). Operational commands are used to monitor and troubleshoot the software, network connectivity, and the Device itself.
This aggregation defines the set of (logical) DeviceInterfaces that are managed by a particular LogicalDevice.

Note the difference between this aggregation and the PPortHasInterfaces aggregation - this aggregation represents administrative management, whereas the former represents physical containment. This flexibility enables complex devices that have multiple LogicalDevices to be modeled, where a particular LogicalDevice can be assigned to manage a given DeviceInterface.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="configurationMethodsSupported" type="xsd:string" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This is an array of integers that defines the set of configuration methods that are supported by this Device. The array is in comma-separated value format. Values include:

0: Unknown
1: Console Port interface
2: Auxiliary Port interface
3: VTTY (virtual terminal) interface
4: TFTP server interface
5: FTP server interface
6: EMS interface
7: other</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="operationalMethodsSupported" type="xsd:string" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This is an array of integers that defines the set of operational methods that are supported by this Device. The array is in comma-separated value format. Values include:

0: Unknown
1: Console Port interface
2: Auxiliary Port interface
3: VTTY (virtual terminal) interface
4: EMS interface
5: NMS interface
6: other</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfDeviceInterfaceMgmtDetails">
      <xsd:sequence>
         <xsd:element name="item" type="tns:DeviceInterfaceMgmtDetails" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="serviceDeviceInterfaceDetails" type="tns:ServiceDeviceInterfaceDetails"/>
   <xsd:complexType name="ServiceDeviceInterfaceDetails">
      <xsd:annotation>
         <xsd:documentation>
            <p/>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence/>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfServiceDeviceInterfaceDetails">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ServiceDeviceInterfaceDetails" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
</xsd:schema>