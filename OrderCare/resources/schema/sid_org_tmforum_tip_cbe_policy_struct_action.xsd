<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201207021234 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) TeleManagement Forum 2012. All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 


Direct inquiries to the TM Forum office: 
 
240 Headquarters Plaza,
East Tower - 10th Floor,
Morristown, NJ  07960 USA
Tel No.  +1 973 944 5100
Fax No.  +1 973 944 5110
TM Forum Web Page: www.tmforum.org
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/action" xmlns:fmk="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/fmk" xmlns:stat="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/stat" xmlns:control="http://www.tmforum.org/xml/sid/org/tmforum/tip/enterprise/risk/ra/control" xmlns:entity="http://www.tmforum.org/xml/tip/internal/entity" xmlns:fmkspec="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/fmkspec" targetNamespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/action" attributeFormDefault="unqualified" elementFormDefault="qualified" version="13.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: SID_Model
                        at version: 13.0
      for all artifacts in package: org.tmforum.tip.cbe.policy.struct.action
      Model Description:
      Model Project for SID xsd generation
      Package Description:
      
      Package data summary information:
            entities: 4
 Association Classes: 2
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 0
      </pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/fmk" schemaLocation="sid_org_tmforum_tip_cbe_policy_fmk.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/stat" schemaLocation="sid_org_tmforum_tip_cbe_policy_struct_stat.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/enterprise/risk/ra/control" schemaLocation="sid_org_tmforum_tip_enterprise_risk_ra_control.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/internal/entity" schemaLocation="internal_entity.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/fmkspec" schemaLocation="sid_org_tmforum_tip_cbe_policy_fmkspec.xsd"/><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** -->
   <xsd:element name="policyAction" type="tns:PolicyAction"/>
   <xsd:complexType name="PolicyAction" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class that represents how to form the action clause of a PolicyRule. This consists of a single occurrence of a PolicyStatement, which is of the form:

{variable, operator, value}

Policy actions have the semantics of "SET variable to value". There are two types of actions:

- pass actions are invoked if the condition clause was TRUE
- fail actions are invoked if the condition clause was FALSE</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyActionSpec" type="fmkspec:PolicyActionSpec" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association SpecifiesPolicyAction</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyAction" type="tns:ArrayOfPolicyAction" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ContainedPolicyActionDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyAction1" type="tns:PolicyAction" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ContainedPolicyActionDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyRuleBase" type="fmk:ArrayOfPolicyRuleBase" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  ordered</p>
                        <p>This association end  is  an end of association PolicyActionRuleDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="revenueAssuranceConsequence" type="control:ArrayOfRevenueAssuranceConsequence" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association RevenueAssuranceConsequenceDefinedBy</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyAction">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyAction" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyActionAtomic" type="tns:PolicyActionAtomic"/>
   <xsd:complexType name="PolicyActionAtomic">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is the base class for all simple PolicyActions. A simple PolicyAction consists of a single Boolean clause, which is used to perform a single action. This consists of a single occurrence of a PolicyStatement, which is of the form:

{SET | CLEAR} PolicyVariable to PolicyValue

This is distinctly different from the PolicyActionVendor, which does not use a PolicyStatement.

PolicyActionAtomic objects can also be used to form more complex action structures. A PolicyActionComposite object can be used to contain a group of PolicyActionAtomic objects - this grouping enables multiple PolicyActionAtomic objects to be executed as a group. Alternatively, a PolicyActionAtomic object can contain one or more PolicyActionAtomic objects (and also PolicyActionComposite groups if desired) to provide the semantics of a compound PolicyAction. In either case, the aggregation is done using the containedPolicyActions aggregation.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="hasSubActions" type="xsd:boolean" minOccurs="0" maxOccurs="1" default="false">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a Boolean attribute that, if TRUE, signifies that this PolicyAction has one or more sub-actions. Sub-actions are used to enforce a hierarchical nesting of actions, so that parent actions may control the evaluation and other semantics of the sub-actions that they contain.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="hasExecuted" type="xsd:int" minOccurs="0" maxOccurs="1" default="0">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that is set by a policy application to define the state of execution of this policyAction. Values include:

0: not yet executed
1: executed with no errors
2: executed with errors but successfully rolled back
3: executed with errors and did not roll back
4: did not complete execution but successfully rolled back
5: did not complete execution and did not roll back</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="actionSequenceNumber" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute is a non-negative integer and represents the particular sequence in which this element is executed as part of the overall policy structure.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyStatement" type="stat:PolicyStatement" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PolicyStatementInPolicyAction</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyActionAtomic">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyActionAtomic" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyActionComposite" type="tns:PolicyActionComposite"/>
   <xsd:complexType name="PolicyActionComposite">
      <xsd:annotation>
         <xsd:documentation>
            <p>The PolicyActionComposite class is the base class for serving as a generic container in which to place PolicyActionAtomic, PolicyActionVendor, or PolicyActionComposite classes. The first two provide actions that this container groups, while the latter establishes a hierarchy in which to order the execution of PolicyActions.

Both simple as well as complex PolicyActions can be placed in this container.

Each PolicyActionAtomic and PolicyActionVendor object is linked to this object using the containedPolicyActions association.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="actionSequence" type="xsd:int" minOccurs="0" maxOccurs="1" default="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an non-negative integer that defines the order in which the PolicyActions associated with this PolicyActionComposite object is to be executed.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="hasSubPolicyActions" type="xsd:boolean" minOccurs="0" maxOccurs="1" default="false">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a Boolean attribute that, if TRUE, signifies that this PolicyAction has one or more sub-actions. Sub-actions are used to enforce a hierarchical nesting of actions, so that parent actions may control the evaluation and other semantics of sub-actions that they contain.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="actionsCNF" type="xsd:boolean" minOccurs="0" maxOccurs="1" default="true">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="actionExecutionStrategy" type="xsd:int" minOccurs="0" maxOccurs="1" default="2">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines the execution strategy to be used upon the sequenced actions aggregated by this PolicyActionComposite object. Defined execution strategies include:

0: Unknown
1: Do Until Success
2: Do All
3: Do Until Failure
4: Do All Without Failure or Do Nothing

"Do Until Success" means that actions should be executed according to their predefined order, until successful execution of a single action. At that point, the process should stop (even if there are additional actions that could be executed).

"Do All" means that all actions should be executed that are part of the set, according to their predefined order. This should continue, even if one or more of the actions fails.

"Do Until Failure" means that actions should be executed according to their predefined order until an action fails to execute. At that point, the entire sequence should be stopped.

Finally, "Do All Without Failure or Do Nothing" means that ALL actions specified should be performed. However, if a failure occurs, then NONE of the actions should be performed. This implies EITHER the ability to look-ahead and ensure that the actions will be able to be performed successfully, or the ability to perform a rollback of that action and all previous actions when an error is encountered.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyActionComposite">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyActionComposite" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyActionVendor" type="tns:PolicyActionVendor"/>
   <xsd:complexType name="PolicyActionVendor">
      <xsd:annotation>
         <xsd:documentation>
            <p>The PolicyActionVendor class is a concrete base class that provides a general extension mechanism for representing PolicyActions that have not been modeled with the attributes specified in this model. This class uses two of its properties (Constraint and ConstraintEncoding) for defining the content and format of a vendor-specific condition. Its third property (actionResponse) to provide a standard result, so that this object can be placed with other PolicyAction objects in a PolicyRule object. Standardized extensions are not expected to use this class.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="actionEncoding" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a string attribute. It is used to represent an OID that in turn identifies the encoding and semantics of the ActionData attribute value array in this instance. The value of this property is a single string, representing a single OID.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="actionResponse" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a Boolean attribute that is used to allow a 'standard' definition of a TRUE/FALSE response to be made by an external system attached to the model at this point. This will allow integration with a generalized policy processing engine.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="actionData" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute provides a general extension mechanism for representing policy actions that have not been modeled with the specific properties contained in this model. The format of this attribute is determined by the OID value stored in the ActionEncoding attribute.

A policy decision point can readily determine whether it supports the values stored in an instance of ActionData by checking the OID value from ActionEncoding against the set of OIDs it recognizes. The action for the policy decision point to take in case it does not recognize the format of this data could itself be modeled as a PolicyRule, governing the behavior of the policy decision point.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyActionVendor">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyActionVendor" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* -->
   <xsd:element name="containedPolicyActionDetails" type="tns:ContainedPolicyActionDetails"/>
   <xsd:complexType name="ContainedPolicyActionDetails">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a class that implements the semantics needed for the containedPolicyActions aggregation.This aggregation is used for two distinct purposes. First, it is used to gather together discrete PolicyActions to form a PolicyAction clause. In this usage, the set of individual PolicyActionAtomic objects are aggregated by a PolicyActionComposite object.

The second use is to form compound PolicyActions. In this case, the PolicyActionAtomic object aggregates PolicyActionAtomic and/or PolicyActionComposite objects. The former provides a simple nested PolicyAction, while the latter provides structure for grouping the sub-actions that are dependent on a higher-level action.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="containedActionOrder" type="xsd:int" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This is an unsigned integer attribute that defines the relative position of this action in relation to the overall sequence of actions that are associated with a given PolicyAction. Smaller integers indicate earlier positions in the sequence. The value "0" has the special semantics of "don't care".

This value is not unique. Thus, if two or more attributes have the same value, they may be performed in any order, but they must all be performed at the appropriate place in the overall sequence.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfContainedPolicyActionDetails">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ContainedPolicyActionDetails" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyActionRuleDetails" type="tns:PolicyActionRuleDetails"/>
   <xsd:complexType name="PolicyActionRuleDetails">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a class that implements the semantics needed for the PolicyActionInPolicyRule aggregation. This aggregation defines the set of PolicyActions that are contained in this PolicyRule.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="order" type="xsd:int" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This is an unsigned integer attribute that defines the relative position of this action in relation to the overall sequence of actions that are associated with a given PolicyRule. Smaller integers indicate earlier positions in the sequence. The value "0" has the special semantics of "don't care".

This value is not unique. Thus, if two or more attributes have the same value, they may be performed in any order, but they must all be performed at the appropriate place in the overall sequence.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyActionRuleDetails">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyActionRuleDetails" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
</xsd:schema>