<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201207021234 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) TeleManagement Forum 2012. All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 


Direct inquiries to the TM Forum office: 
 
240 Headquarters Plaza,
East Tower - 10th Floor,
Morristown, NJ  07960 USA
Tel No.  +1 973 944 5100
Fax No.  +1 973 944 5110
TM Forum Web Page: www.tmforum.org
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/spec/cpd" xmlns:spec="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/spec" xmlns:entity="http://www.tmforum.org/xml/tip/internal/entity" xmlns:compound="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/compound" targetNamespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/spec/cpd" attributeFormDefault="unqualified" elementFormDefault="qualified" version="13.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: SID_Model
                        at version: 13.0
      for all artifacts in package: org.tmforum.tip.resource.spec.cpd
      Model Description:
      Model Project for SID xsd generation
      Package Description:
      
      Package data summary information:
            entities: 3
 Association Classes: 0
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 0
      </pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/spec" schemaLocation="sid_org_tmforum_tip_resource_spec.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/internal/entity" schemaLocation="internal_entity.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/compound" schemaLocation="sid_org_tmforum_tip_resource_res_compound.xsd"/><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** -->
   <xsd:element name="compoundResourceSpec" type="tns:CompoundResourceSpec"/>
   <xsd:complexType name="CompoundResourceSpec">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is the abstract base class that is used to define the invariant characteristics and behavior (attributes, methods, constraints, and relationships) of a CompoundResource.

The key difference between a CompoundResourceSpec and either a PhysicalResourceSpec and a LogicalResourceSpec is that a PhysicalResourceSpec and LogicalResourceSpec define templates for specifying the invariant characteristics and behavior of PhysicalResources and LogicalResources, respectively. In contrast, a CompoundResourceSpec is used to describe templates that contain at least one PhysicalResourceSpec and at least one LogicalResourceSpec. Optionally, one or more CompoundResourceSpecs may also be specified.

Thus, a CompoundResourceSpec is in effect a "shorthand notation" for specifying complementary PhysicalResourceSpecs and LogicalResourceSpecs.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="compoundResourceSpecComposite" type="tns:ArrayOfCompoundResourceSpecComposite" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasCompoundResourceSpecs</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="resourceSpecification" type="spec:ArrayOfResourceSpecification" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasResourceSpecifications</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="compoundResourceRole" type="compound:ArrayOfCompoundResourceRole" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  unique</p>
                        <p>This association end  is  an end of association SpecifiesCompoundResourceRoles</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCompoundResourceSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:CompoundResourceSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="compoundResourceSpecAtomic" type="tns:CompoundResourceSpecAtomic"/>
   <xsd:complexType name="CompoundResourceSpecAtomic">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete class for describing specific attributes, behavior, relationships, constraints, and semantics for building CompoundResource objects. The purpose of this class is to be able to track specifications of CompoundResources separately from other types of ResourceSpecifications. Note that this class inherits the ModifiesResourceSpec aggregation, and therefore can be used with the corresponding CompoundResource class.

The key difference between a CompoundResourceSpec and either a PhysicalResourceSpec and a LogicalResourceSpec is that a PhysicalResourceSpec and LogicalResourceSpec define templates for specifying the invariant characteristics and behavior of PhysicalResources and LogicalResources, respectively. In contrast, a CompoundResourceSpec is used to describe templates that contain at least one PhysicalResourceSpec and at least one LogicalResourceSpec. Optionally, one or more CompoundResourceSpecs may also be specified.

The difference between a CompoundResourceSpecAtomic entity and a CompoundResourceSpecComposite entity is that a CompoundResourceSpecAtomic entity is designed to be a stand-alone entity. (Note that it still aggregates at least one PhysicalResourceSpec and at least one LogicalResourceSpec; however, the end result is that this CompoundResourceSpecAtomic entity can be used by itself.) In contrast, a CompoundResourceSpecComposite entity is made up of one or more CompoundResourceSpecs, one of which must be a CompoundResourceSpecAtomic entity.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCompoundResourceSpecAtomic">
      <xsd:sequence>
         <xsd:element name="item" type="tns:CompoundResourceSpecAtomic" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="compoundResourceSpecComposite" type="tns:CompoundResourceSpecComposite"/>
   <xsd:complexType name="CompoundResourceSpecComposite">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete class for describing specific attributes, behavior, relationships, constraints, and semantics for building composite CompoundResource objects. The purpose of this class is to be able to track specifications of CompoundResources separately from other types of ResourceSpecifications. Note that this class inherits the ModifiesResourceSpec aggregation, and therefore can be used with the corresponding CompoundResource class.

The key difference between a CompoundResourceSpec and either a PhysicalResourceSpec and a LogicalResourceSpec is that a PhysicalResourceSpec and LogicalResourceSpec define templates for specifying the invariant characteristics and behavior of PhysicalResources and LogicalResources, respectively. In contrast, a CompoundResourceSpec is used to describe templates that contain at least one PhysicalResourceSpec and at least one LogicalResourceSpec. Optionally, one or more CompoundResourceSpecs may also be specified.

The difference between a CompoundResourceSpecAtomic entity and a CompoundResourceSpecComposite entity is that a CompoundResourceSpecAtomic entity is designed to be a stand-alone entity. (Note that it still aggregates at least one PhysicalResourceSpec and at least one LogicalResourceSpec; however, the end result is that this CompoundResourceSpecAtomic entity can be used by itself.) In contrast, a CompoundResourceSpecComposite entity is made up of one or more CompoundResourceSpecs, one of which must be a CompoundResourceSpecAtomic entity.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="compoundResourceSpec" type="tns:ArrayOfCompoundResourceSpec" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasCompoundResourceSpecs</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCompoundResourceSpecComposite">
      <xsd:sequence>
         <xsd:element name="item" type="tns:CompoundResourceSpecComposite" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* --><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
</xsd:schema>