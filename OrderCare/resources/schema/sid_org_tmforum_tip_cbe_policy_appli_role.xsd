<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201207021234 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) TeleManagement Forum 2012. All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 


Direct inquiries to the TM Forum office: 
 
240 Headquarters Plaza,
East Tower - 10th Floor,
Morristown, NJ  07960 USA
Tel No.  +1 973 944 5100
Fax No.  +1 973 944 5110
TM Forum Web Page: www.tmforum.org
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/appli/role" xmlns:appli="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/appli" xmlns:entity="http://www.tmforum.org/xml/tip/internal/entity" targetNamespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/appli/role" attributeFormDefault="unqualified" elementFormDefault="qualified" version="13.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: SID_Model
                        at version: 13.0
      for all artifacts in package: org.tmforum.tip.cbe.policy.appli.role
      Model Description:
      Model Project for SID xsd generation
      Package Description:
      
      Package data summary information:
            entities: 7
 Association Classes: 0
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 0
      </pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/appli" schemaLocation="sid_org_tmforum_tip_cbe_policy_appli.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/internal/entity" schemaLocation="internal_entity.xsd"/><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** -->
   <xsd:element name="policyApplicationRole" type="tns:PolicyApplicationRole"/>
   <xsd:complexType name="PolicyApplicationRole" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class that defines the concept of various types of roles used to describe PolicyApplications and their use in the DEN-ng model. This facilitates the use and management of Policy by defining functionality in terms of roles that are played in the managed environment.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyApplication" type="appli:ArrayOfPolicyApplication" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PolicyAppHasRoles</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyApplicationRole">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyApplicationRole" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyBrokerRole" type="tns:PolicyBrokerRole"/>
   <xsd:complexType name="PolicyBrokerRole">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class that defines the concept of various types of roles used to describe PolicyBrokers and their use in the DEN-ng model.

A PolicyBrokerRole refines the generic concepts of a PolicyApplicationRole. Specifically, this base class is used to describe generic functionality inherent in a PolicyBroker. For example, this includes the ability to present and negotiate functionality that is traded between different PolicyServers in different PolicyDomains, as well as the ability to control the functions of a PolicyServer.

More detail will be provided in the next release of the DEN-ng model.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyBrokerRole">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyBrokerRole" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyConfigActionRole" type="tns:PolicyConfigActionRole"/>
   <xsd:complexType name="PolicyConfigActionRole">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class that defines the concept of various types of roles used to describe processes that control processes that can change the configuration of a Managed Object, and their use in the DEN-ng model.

A PolicyConfigActionRole refines the generic concepts of a PolicyConfigRole. Specifically, this base class is used to describe different processes required to create, edit, restore, or delete all or part of a configuration of a Managed Object.

More detail will be provided in the next release of the DEN-ng model.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyConfigActionRole">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyConfigActionRole" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyConfigDecisionRole" type="tns:PolicyConfigDecisionRole"/>
   <xsd:complexType name="PolicyConfigDecisionRole">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class that defines the concept of various types of roles used to describe processes that control configuration processes, and their use in the DEN-ng model.

A PolicyConfigDecisionRole refines the generic concepts of a PolicyConfigRole. Specifically, this base class is used to describe different processes required to request decisions involving the monitoring, changing and/or verifying of the configuration of a Managed Object. These processes will orchestrate the use of one or more instances of other PolicyConfigRoles as part of executing the configuration decision.

More detail will be provided in the next release of the DEN-ng model.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyConfigDecisionRole">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyConfigDecisionRole" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyConfigRole" type="tns:PolicyConfigRole"/>
   <xsd:complexType name="PolicyConfigRole">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class that defines the concept of various types of roles used to describe configuration monitoring and checking, and their use in the DEN-ng model.

A PolicyConfigRole refines the generic concepts of a PolicyApplicationRole. Specifically, this base class is used to describe different processes required to check, change, and verify changes in the configuration of a Managed Object. For example, this includes the ability to retrieve a configuration for examination, as well as to construct, approve and deploy changes to that configuraiton.

More detail will be provided in the next release of the DEN-ng model.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyConfigRole">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyConfigRole" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyConfigValidationRole" type="tns:PolicyConfigValidationRole"/>
   <xsd:complexType name="PolicyConfigValidationRole">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class that defines the concept of various types of roles used to describe processes that control configuration verification processes, and their use in the DEN-ng model.

A PolicyConfigValidationRole refines the generic concepts of a PolicyConfigRole. Specifically, this base class is used to describe different processes required to validate changes made to a configuration of a Managed Object.

More detail will be provided in the next release of the DEN-ng model.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyConfigValidationRole">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyConfigValidationRole" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyServerRole" type="tns:PolicyServerRole"/>
   <xsd:complexType name="PolicyServerRole">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class that defines the concept of various types of roles used to describe PolicyServers and their use in the DEN-ng model.

A PolicyServerRole refines the generic concepts of a PolicyApplicationRole. Specifically, this base class is used to describe generic functionality inherent in a PolicyServer. For example, this includes the ability to describe different types of functions (making decisions, changing configurations, and so forth) as well as invoking those functions. Other functions, such as conflict detection, may also be run at a local or global level.

More detail will be provided in the next release of the DEN-ng model.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyServerRole">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyServerRole" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* --><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
</xsd:schema>