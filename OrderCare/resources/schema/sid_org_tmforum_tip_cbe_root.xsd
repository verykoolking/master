<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201207021234 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) TeleManagement Forum 2012. All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 


Direct inquiries to the TM Forum office: 
 
240 Headquarters Plaza,
East Tower - 10th Floor,
Morristown, NJ  07960 USA
Tel No.  +1 973 944 5100
Fax No.  +1 973 944 5110
TM Forum Web Page: www.tmforum.org
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/root" xmlns:ch="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/root/ch" xmlns:vnrole="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/vnrole" xmlns:control="http://www.tmforum.org/xml/sid/org/tmforum/tip/enterprise/risk/ra/control" xmlns:entity="http://www.tmforum.org/xml/tip/internal/entity" xmlns:fmk="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/tip/fmk" xmlns:id="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/root/id" xmlns:base="http://www.tmforum.org/xml/tip/cbe/base" targetNamespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/root" attributeFormDefault="unqualified" elementFormDefault="qualified" version="13.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: SID_Model
                        at version: 13.0
      for all artifacts in package: org.tmforum.tip.cbe.root
      Model Description:
      Model Project for SID xsd generation
      Package Description:
      
      Package data summary information:
            entities: 13
 Association Classes: 0
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 0
      </pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/root/ch" schemaLocation="sid_org_tmforum_tip_cbe_root_ch.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/vnrole" schemaLocation="sid_org_tmforum_tip_resource_res_vnrole.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/enterprise/risk/ra/control" schemaLocation="sid_org_tmforum_tip_enterprise_risk_ra_control.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/internal/entity" schemaLocation="internal_entity.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/tip/fmk" schemaLocation="sid_org_tmforum_tip_cbe_tip_fmk.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/root/id" schemaLocation="sid_org_tmforum_tip_cbe_root_id.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/cbe/base" schemaLocation="common_cbe_base.xsd"/><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** -->
   <xsd:element name="capacity" type="tns:Capacity"/>
   <xsd:complexType name="Capacity" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class that is the parent for both the PhysicalCapacity as well as the LogicalCapacity classes. They are used to define the minimum and maximum requirements, limits, or other variable features of a ManagedEntity.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCapacity">
      <xsd:sequence>
         <xsd:element name="item" type="tns:Capacity" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="collection" type="tns:Collection"/>
   <xsd:complexType name="Collection" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class for objects that represent collections of ManagedEntity objects. This enables common attributes, methods, relationships and other semantics to be applied to different types of Collections of ManagedEntity objects. These can then be refined in the subclasses of Collection.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="orderMethod" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer, and is used to define the method by which elements in an OrderedSet or Sequence are collated. If the Collection type is Set or Bag, then this attribute MUST have the value 1 ("Not Applicable"). Values include:

1: Not Applicable
2: Ascending
3: Descending</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="type" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines the type of Collection that this object is. Values include:

1: Set
2: OrderedSet
3: Sequence
4: Bag

A Set does not contain duplicate elements, and does not impose an order on its elements. An OrderedSet is like a Set, except that it does impose an order on its contents. A Bag is like a Set, except that it may contain duplicates. A Sequence is like a Bag, except that the elements are ordered.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCollection">
      <xsd:sequence>
         <xsd:element name="item" type="tns:Collection" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="entity" type="tns:Entity"/>
   <xsd:complexType name="Entity" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class that is used to represent entities that cannot be directly managed (e.g., a hub).</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfEntity">
      <xsd:sequence>
         <xsd:element name="item" type="tns:Entity" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="entityRole" type="tns:EntityRole"/>
   <xsd:complexType name="EntityRole" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class that defines the concept of various types of roles for entities that are used to describe ManagedEntities in the DEN-ng model.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfEntityRole">
      <xsd:sequence>
         <xsd:element name="item" type="tns:EntityRole" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="entitySpecification" type="tns:EntitySpecification"/>
   <xsd:complexType name="EntitySpecification" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class that is used to define the invariant characteristics (attributes, methods, constraints, and relationships) of a managed entity.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="entitySpecCharUse" type="ch:ArrayOfEntitySpecCharUse" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  unique</p>
                        <p>This association end  is  an end of association EntitySpecFurtherDefinedBy</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="entityIdentificationSpecification" type="id:ArrayOfEntityIdentificationSpecification" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association EntitiesRecognizedBy</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfEntitySpecification">
      <xsd:sequence>
         <xsd:element name="item" type="tns:EntitySpecification" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="managedEntity" type="tns:ManagedEntity"/>
   <xsd:complexType name="ManagedEntity" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class that is used to represent entities in a managed environment that have the following semantics in common: (1) a ManagedBusinessEntity owns or is otherwise responsible for them, (2) management of the entity is critical for providing a service and/or maintaining the environment, and (3) the entity is "important" from a management point-of-view. As such, it is a point at which semantically important relationships can be created; this avoids duplicating these relationships on multiple subclasses as well as forcing ManagedObject to support these relationships.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="commonObjectInfo" type="fmk:CommonObjectInfo" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  unique</p>
                        <p>This association end  is  an end of association ManagedEntityIsExtendedBy</p>
                        <p>This association end  is  passed by value</p>
                        <p>This association end  is  optional</p>
                        <p>This association end  is  AVC enabled</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfManagedEntity">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ManagedEntity" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="managementDomain" type="tns:ManagementDomain"/>
   <xsd:complexType name="ManagementDomain" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>A ManagementDomain class represents a special grouping of ManagedEntities that has two important properties. First, it is used to partition managed objects into a meaningful logical grouping. One important use of such a grouping is to provide a means to define which EMS (as well as which NMS) manages, monitors, etc. which set of devices. It also provides a means to show how management functions are distributed and scaled.

Second, it defines a common administrative domain that is used to administer the managed objects that it contains. This implies that all of the managed objects contained in this ManagementDomain are administered similarly - either by the same user, group of users or policy.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="managementDomain" type="tns:ArrayOfManagementDomain" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasManagementDomains</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="managementDomain1" type="tns:ManagementDomain" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasManagementDomains</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfManagementDomain">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ManagementDomain" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="managementInfo" type="tns:ManagementInfo"/>
   <xsd:complexType name="ManagementInfo" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class that is used to represent entities that represent management information obtained in a managed environment . Specifically, in the process of managing an entity, information of various forms are created. This class is the base class for defining different types of management information.

The design of how management information is obtained uses this class to gather specific type of information, and the ManagementMethodEntity class to obtain the desired data using an appropriate method. This combination of class hierarchies enables different management methods (e.g., CLI vs. SNMP) to be used to gather different types of management data, and is unique to the DEN-ng information model.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="mgmtInfoValidFor" type="base:TimePeriod" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute defines the time period that this management information is valid for. A TimePeriod is a complex datatype, that has a starting time and an ending time.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="retrievalMethodsSupported" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an array of integers that define the different means of retrieving management methods that are supported by this object. Values include:

0: Unknown
1: None
2: CLI
3: SNMP
4: TL1
5: CMIP
6: RMON
7: Proprietary

None could mean that this ManagedEntity performs a set function and is not configurable, as well as mean that this ManagedEntity is not configurable except by the factory.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="retrievalMethodCurrent" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines the particular type of method that is currently being used to retrieve the management information. Values include:

0: Unknown
1: None
2: CLI
3: SNMP
4: TL1
5: CMIP
6: RMON
7: Proprietary

None could mean that this ManagedEntity performs a set function and is not configurable, as well as mean that this ManagedEntity is not configurable except by the factory.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfManagementInfo">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ManagementInfo" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="role" type="tns:Role"/>
   <xsd:complexType name="Role" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class that defines the concept of various types of roles used in the DEN-ng model.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="roleCombination" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>A roleCombination is an array of string attributes that are used to identify and potentially select one or more policies for a set of managed entities from among a much larger set of available policies. In contrast with the IETF definition, the DEN-ng definition of this attribute works with a second attribute, called roleSelectionMethod, that precisely defines how the selection process is determined.

Values of this attribute should be entered in comma separated value format; white space should be ignored.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="roleSelectionMethod" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines the precise means used to select one or more entities which map to one or more roles contained in the roleCombination attribute of this object. Values include:

0: retrieve all
1: retrieve intersection

For exampe, assume that there is an external query engine that is looking for the roles edge or ethernet. The result of this query will look at the roleCombination and roleSelectionMethod attributes of each managed object that it is querying.

If the value of this attribute is 0, then all managed objects that have their roleCombination set to either {edge}, {ethernet}, or {edge, ethernet} will be retrieved. In contrast, if the value of this attribute is 1, then only those managed objects whose roleCombination attribute is set to {edge, ethernet} will be retrieved.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="specificationRole" type="tns:SpecificationRole" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association SpecifiesRoles</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfRole">
      <xsd:sequence>
         <xsd:element name="item" type="tns:Role" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="rootEntity" type="tns:RootEntity"/>
   <xsd:complexType name="RootEntity" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is the top of the SID class hierarchy. The purpose of the RootEntity is to define a set of attributes that are common to all SID entities that derive from it. These properties enable us to name and describe all objects (manageable and unmanageable) in the environment.This is the top of the DEN-ng class hierarchy. These properties enable us to name, describe, and identify all objects (manageable and unmanageable) in the environment.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfRootEntity">
      <xsd:sequence>
         <xsd:element name="item" type="tns:RootEntity" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="rootEntityType" type="tns:RootEntityType"/>
   <xsd:complexType name="RootEntityType">
      <xsd:annotation>
         <xsd:documentation>
            <p>A SID entity, such as Customer, Product, Service, and so forth.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="name" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>A word, term, or phrase by which the RootEntityType is known and distinguished from other RootEntityTypes.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="rootEntityTypeCharUse" type="ch:ArrayOfRootEntityTypeCharUse" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  unique</p>
                        <p>This association end  is  an end of association RootEntityTypeFurtherDefinedBy</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="entityIdentificationSpecification" type="id:ArrayOfEntityIdentificationSpecification" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association RootEntityTypeIdentificationSpec</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="revenueAssuranceParameter" type="control:ArrayOfRevenueAssuranceParameter" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association RevenueAssuranceParameterFocusesUpon</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfRootEntityType">
      <xsd:sequence>
         <xsd:element name="item" type="tns:RootEntityType" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="specification" type="tns:Specification"/>
   <xsd:complexType name="Specification" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class that is used to define the invariant characteristics (attributes, methods, and relationships) of a managed entity.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfSpecification">
      <xsd:sequence>
         <xsd:element name="item" type="tns:Specification" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="specificationRole" type="tns:SpecificationRole"/>
   <xsd:complexType name="SpecificationRole" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is the abstract base class for all RoleSpecification subclasses. It exists to enable relationships to be defined between it and other classes in the DEN-ng core model. This helps prevent relationship explosion.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="resourceRole" type="vnrole:ArrayOfResourceRole" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  unique</p>
                        <p>This association end  is  an end of association SpecifiesResourceRoles</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="role" type="tns:ArrayOfRole" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association SpecifiesRoles</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfSpecificationRole">
      <xsd:sequence>
         <xsd:element name="item" type="tns:SpecificationRole" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* --><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
</xsd:schema>