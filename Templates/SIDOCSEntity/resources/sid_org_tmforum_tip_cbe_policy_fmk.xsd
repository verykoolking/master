<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201207021234 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) TeleManagement Forum 2012. All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 


Direct inquiries to the TM Forum office: 
 
240 Headquarters Plaza,
East Tower - 10th Floor,
Morristown, NJ  07960 USA
Tel No.  +1 973 944 5100
Fax No.  +1 973 944 5110
TM Forum Web Page: www.tmforum.org
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/fmk" xmlns:appli="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/appli" xmlns:evt="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/evt" xmlns:offer="http://www.tmforum.org/xml/sid/org/tmforum/tip/product/offer" xmlns:bi="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/bi" xmlns:control="http://www.tmforum.org/xml/sid/org/tmforum/tip/enterprise/risk/ra/control" xmlns:entity="http://www.tmforum.org/xml/tip/internal/entity" xmlns:fmkspec="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/fmkspec" xmlns:action="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/action" xmlns:price="http://www.tmforum.org/xml/sid/org/tmforum/tip/product/prod/price" xmlns:cond="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/cond" targetNamespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/fmk" attributeFormDefault="unqualified" elementFormDefault="qualified" version="13.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: SID_Model
                        at version: 13.0
      for all artifacts in package: org.tmforum.tip.cbe.policy.fmk
      Model Description:
      Model Project for SID xsd generation
      Package Description:
      
      Package data summary information:
            entities: 6
 Association Classes: 3
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 0
      </pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/appli" schemaLocation="sid_org_tmforum_tip_cbe_policy_appli.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/evt" schemaLocation="sid_org_tmforum_tip_cbe_policy_struct_evt.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/product/offer" schemaLocation="sid_org_tmforum_tip_product_offer.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/bi" schemaLocation="sid_org_tmforum_tip_cbe_bi.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/enterprise/risk/ra/control" schemaLocation="sid_org_tmforum_tip_enterprise_risk_ra_control.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/internal/entity" schemaLocation="internal_entity.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/fmkspec" schemaLocation="sid_org_tmforum_tip_cbe_policy_fmkspec.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/action" schemaLocation="sid_org_tmforum_tip_cbe_policy_struct_action.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/product/prod/price" schemaLocation="sid_org_tmforum_tip_product_prod_price.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/cond" schemaLocation="sid_org_tmforum_tip_cbe_policy_struct_cond.xsd"/><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** -->
   <xsd:element name="policy" type="tns:Policy"/>
   <xsd:complexType name="Policy" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class, and is the root of the Policy DEN-ng model. As such, it defines common attributes, methods and relationships that all policy subclasses use and take part in.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyName" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a generic naming attribute that can be used to identify different policy entities. This enables commonName to be used to enforce enterprise or service provider generic naming and this attribute to be used to fine tune the naming of policy entities. Thus, commonName is public in scope and policyName is private to policy.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="keywords" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a string attribute that defines a set of one or more keywords that a policy administrator may use to assist in characterizing or categorizing a policy object to facilitate search operations. The following keywords are pre-defined:

Unknown InstallPermissions
ConfigChange InstallMethod
Default Error
Usage InternalError
Security ExternalError
Authentication Notification
Authorization Publish
Accounting Subscribe
Auditing Publish-Subscribe
Service Exception
CustomerFacingService
ResourceFacingService</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyApplication" type="appli:ArrayOfPolicyApplication" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PolicyAppUsesPolicy</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyDomain" type="tns:ArrayOfPolicyDomain" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..*</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PolicyAppliesToDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyRepository" type="appli:ArrayOfPolicyRepository" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PolicyStoredIn</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicy">
      <xsd:sequence>
         <xsd:element name="item" type="tns:Policy" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyDomain" type="tns:PolicyDomain"/>
   <xsd:complexType name="PolicyDomain">
      <xsd:annotation>
         <xsd:documentation>
            <p>A PolicyDomain is a collection of entities and services that are administered in a coordinated fashion using a set of policies. The policies are used to control the set of services and entities according to a common methodology, such as a finite state machine.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyApplication" type="appli:ArrayOfPolicyApplication" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ScopedPolicyDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyDomain" type="tns:ArrayOfPolicyDomain" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasPolicySubDomains</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyDomain1" type="tns:PolicyDomain" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasPolicySubDomains</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policy" type="tns:Policy" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PolicyAppliesToDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyDomain">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyDomain" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyGroup" type="tns:PolicyGroup"/>
   <xsd:complexType name="PolicyGroup">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class is a generalized aggregation container. It enables PolicyRules and/or PolicyGroups to be aggregated in a single container. Note that loops, including the degenerate case of a PolicyGroup that contains itself, are not allowed when PolicyGroups contain other PolicyGroups.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyEvent" type="evt:PolicyEventBase" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PolicyGroupExecutionDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyGroup">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyGroup" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyRole" type="tns:PolicyRole"/>
   <xsd:complexType name="PolicyRole" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class that defines the concept of various types of roles for different policies that are used in the DEN-ng model.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyRole">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyRole" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyRuleBase" type="tns:PolicyRuleBase"/>
   <xsd:complexType name="PolicyRuleBase" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class for realizing the "event-condition-passaction-failaction" semantics that form a DEN-ng policy rule. The semantics of this rule are that the rule is evaluated when an event occurs. If the condition clause is satisfied, then the pass-action clause will be executed (otherwise, the fail-action clause will be executed).

PolicyRules may be nested within PolicyRules. This is often needed in networking (e.g., bandwidth allocation).</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="hasSubRules" type="xsd:boolean" minOccurs="0" maxOccurs="1" default="false">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a Boolean attribute that, if TRUE, signifies that this PolicyRule has one or more sub-rules. Sub-rules are used to enforce a hierarchical nesting of rules, so that parent rules may control the execution and other semantics of sub-rules that they contain.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="isCNF" type="xsd:boolean" minOccurs="0" maxOccurs="1" default="true">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a Boolean attribute that, if TRUE, defines the condition clause of this rule to be represented in Conjunctive Normal Form (e.g., an AND of ORs). If the value of this attribute is FALSE, then the condition clause will be represented in Disjunctive Normal Form (e.g., an OR of ANDs).

This attribute controls the setting of how multiple condition clauses (as represented by multiple PolicyConditionComposite objects) are treated in the PolicyRule. As such, it is different from the attribute PolicyConditionComposite.IsCNF, which controls how multiple PolicyConditionAtomic objects are treated in a (single) PolicyConditionComposite object.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyAction" type="action:ArrayOfPolicyAction" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..*</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PolicyActionRuleDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyCondition" type="cond:ArrayOfPolicyCondition" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..*</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PolicyConditionRuleDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyEventBase" type="evt:ArrayOfPolicyEventBase" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..*</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association EventTriggerDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyRuleBase">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyRuleBase" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policySet" type="tns:PolicySet"/>
   <xsd:complexType name="PolicySet" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract class for defining two types of collection classes. PolicyRule collects PolicyEvents, PolicyConditions, and PolicyActions, while PolicyGroup collects PolicyRules and PolicyGroups.

Two important and powerful features of this arrangement are that a PolicySet defines a common decision strategy and a common set of PolicyRoles to be used by the PolicyGroups and the PolicyRules that inherit from it.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="usage" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a free-form string attribute that recommends how this policy object should be used.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="isMandatoryEvaluation" type="xsd:boolean" minOccurs="0" maxOccurs="1" default="true">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a Boolean attribute that, if TRUE, signifies that evaluation (and possibly action execution) of this entity is mandatory and must be attempted. If the Mandatory property value of this entity is FALSE, then the evaluation of this entity is considered to be "best effort" and may be ignored.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policySet2" type="tns:ArrayOfPolicySet" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ContainedPolicySetsDetail</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policySet1" type="tns:PolicySet" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ContainedPolicySetsDetail</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policySetSpec" type="fmkspec:PolicySetSpec" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association SpecifiesPolicySet</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="revenueAssuranceObjective" type="control:ArrayOfRevenueAssuranceObjective" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association RevenueAssuranceObjectiveDefinedBy</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="productPrice" type="price:ArrayOfProductPrice" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ProductPriceGovernedBy</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="businessInteractionItemPrice" type="bi:ArrayOfBusinessInteractionItemPrice" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association BusinessInteractionItemPriceInfluencedBy</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="productPricePartyRole" type="price:ArrayOfProductPricePartyRole" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PolicySetGoverns</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="productOffering" type="offer:ArrayOfProductOffering" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ProductOfferingPriceGovernedBy</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicySet">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicySet" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* -->
   <xsd:element name="containedPolicySetsDetail" type="tns:ContainedPolicySetsDetail"/>
   <xsd:complexType name="ContainedPolicySetsDetail">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class represents the semantics of the ContainedPolicySets aggregation. It provides additional semantics that enable this grouping of PolicySets to be prioritized and enabled, so that they can interwork with other PolicyRules and PolicyGroups. Note that each object in this aggregation must have the exact same decision strategy.This aggregation is used to gather together discrete PolicySet objects to form a group of PolicySet objects. Such a group must share the same DecisionStrategy.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="enabled" type="xsd:int" minOccurs="0" maxOccurs="1" default="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This is an enumerated integer. If its value is 1 (which means enabled), then this signifies that this object is enabled for evaluation. If its value is 3 (which means that it is enabled for debugging), then this rule can be used in test or debug scenarios. If its value is 2, then this object is disabled and cannot be used or evaluated.

Note that this object still might end up being disabled, even if this attribute is TRUE. For example, an associated PolicyTimePeriodCondition might evaluate to FALSE, effectively disabling this object. That's why the phrasing said "enabled for evaluation" instead of "enabled for use".

Values include:

0: Unknown
1: Enabled for evaluation
2: Disabled for use
3: Enabled for debugging</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="priority" type="xsd:int" minOccurs="0" maxOccurs="1" default="0">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This attribute is a non-negative integer that is used to prioritize PolicyRules among each other, and/or PolicyGroups that are contained within a PolicyRule. Larger integer values indicate higher priority

Priorities apply to PolicySets (e.g., PolicyGroups and PolicyRules) and are to be used at the same level of scoping. That is, if a PolicyGroup contains n PolicyGroups or PolicyRules, the priority of the outermost (or parent) PolicyGroup can be compared with either stand-alone PolicyRules or PolicyGroups (at that same level of nesting).

The default setting of this attribute is zero.

Prioritization among policy rules provides a basic mechanism for resolving policy conflicts.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfContainedPolicySetsDetail">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ContainedPolicySetsDetail" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyAppliesToDetails" type="tns:PolicyAppliesToDetails"/>
   <xsd:complexType name="PolicyAppliesToDetails">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an association class that explicitly defines which ManagedEntities in a PolicyDomain this Policy information applies to.This association defines the set of Policies that reside in a particular PolicyDomain. This single association links Policy and its subclasses to PolicyDomain. PolicyApplications are related to a PolicyDomain throught the ScopesPolicyApplication aggregation. Thus, different subclasses of PolicyApplication, such as PolicyServer, PDP, PEP, and PXP, can be placed in the same PolicyDomain as different Policies.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="operatorAccess" type="xsd:string" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This attribute defines the access privileges that a user (human or otherwise) has when performing various operations on a ManagedEntity residing in a specific PolicyDomain.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="resourceAccess" type="xsd:string" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This attribute defines the access privileges that the resource has. This may restrict the performance of operations that a user (human or otherwise) has access to when performing various operations on a ManagedEntity residing in a specific PolicyDomain.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyAppliesToDetails">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyAppliesToDetails" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyGroupExecutionDetails" type="tns:PolicyGroupExecutionDetails"/>
   <xsd:complexType name="PolicyGroupExecutionDetails">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an association class that defines the semantics associated with a PolicyEventSet being applied to a PolicyGroup. Specifically, it controls through its ExecutionFilter attribute which components in the PolicyGroup this PolicyEventSet will be passed to, so it can be evaluated.This association defines the PolicySet that controls the execution of PolicyRules in the PolicyGroup. It is implemented as an association class to enable a filtered subset of elements in the PolicyGroup to be executed by receiving this EventSet.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="executionFilter" type="xsd:string" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>The ExecutionFilter attribute contains an OCL expression that defines which components in the PolicyGroup this PolicyEventSet will be passed to, so it can be evaluated. It is expected that this attribute is populated by an external application that knows what policy elements are contained in a particular PolicyGroup.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="executionStartTime" type="xsd:string" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This defines when the PolicyEventSet should be executed.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="executionEndTime" type="xsd:string" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This defines an end time by which the PolicyEventSet should be executed. If it isn't executed by this time, then the action specified in the ExecutionFailure event of this object should be executed.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="executionConstraints" type="xsd:string" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This attribute is a string that contains the specific OCL expression to constrain how a given set of PolicyEvents are distributed to a particular PolicyGroup. Defining this as an attribute enables external applications to populate this constraint.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyGroupExecutionDetails">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyGroupExecutionDetails" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
</xsd:schema>