<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201206291233 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) 2010-2012 Members of the TIP Open Source Community

Licensed to Members of the TIP Open Source Community under one or more
contributor license agreements.  See the NOTICE file distributed with
this work for additional information regarding copyright ownership.
Members of the TIP Open Source Community licences this file to You under the Apache License,
Version 2.0 (the 'License'); you may not use this file except in compliance with
the License.  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an 'AS IS' BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/tip/internal/primitives" targetNamespace="http://www.tmforum.org/xml/tip/internal/primitives" elementFormDefault="qualified" attributeFormDefault="unqualified" version="1.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions for Tigerstripe model:
                model project name : TIP_Generator_Internal_Model
                           version : 1.2
     		     model Description : Internal Framework model used by Tigerstripe generators</pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:complexType name="ArrayOfString">
      <xsd:sequence>
         <xsd:element name="item" type="xsd:string" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============boolean array=============-->
   <xsd:complexType name="ArrayOfBoolean">
      <xsd:sequence>
         <xsd:element name="item" type="xsd:boolean" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============byte array=============-->
   <xsd:complexType name="ArrayOfByte">
      <xsd:sequence>
         <xsd:element name="item" type="xsd:byte" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============short array=============-->
   <xsd:complexType name="ArrayOfShort">
      <xsd:sequence>
         <xsd:element name="item" type="xsd:short" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============char value=============-->
   <xsd:simpleType name="CharValue">
      <xsd:restriction base="xsd:string">
         <xsd:length value="1" fixed="true"/>
      </xsd:restriction>
   </xsd:simpleType><!--============char array=============-->
   <xsd:complexType name="ArrayOfChar">
      <xsd:sequence>
         <xsd:element name="item" type="tns:CharValue" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============unsignedInt array=============-->
   <xsd:complexType name="ArrayOfUnsignedInt">
      <xsd:annotation>
         <xsd:documentation/>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="item" type="xsd:unsignedInt" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============int array=============-->
   <xsd:complexType name="ArrayOfInt">
      <xsd:annotation>
         <xsd:documentation/>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="item" type="xsd:int" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============long array=============-->
   <xsd:complexType name="ArrayOfLong">
      <xsd:sequence>
         <xsd:element name="item" type="xsd:long" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============float array=============-->
   <xsd:complexType name="ArrayOfFloat">
      <xsd:sequence>
         <xsd:element name="item" type="xsd:float" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============double array=============-->
   <xsd:complexType name="ArrayOfDouble">
      <xsd:sequence>
         <xsd:element name="item" type="xsd:double" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============date array=============-->
   <xsd:complexType name="ArrayOfDate">
      <xsd:sequence>
         <xsd:element name="item" type="xsd:date" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============time array=============-->
   <xsd:complexType name="ArrayOfTime">
      <xsd:sequence>
         <xsd:element name="item" type="xsd:time" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============datetime array=============-->
   <xsd:complexType name="ArrayOfDateTime">
      <xsd:sequence>
         <xsd:element name="item" type="xsd:dateTime" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============Object array=============-->
   <xsd:complexType name="ArrayOfAnyType">
      <xsd:sequence>
         <xsd:element name="item" type="xsd:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============Serializable array=============-->
   <xsd:complexType name="ArrayOfSerializable">
      <xsd:sequence>
         <xsd:element name="item" type="xsd:anyType" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!--============URI array=============-->
   <xsd:complexType name="ArrayOfAnyURI">
      <xsd:sequence>
         <xsd:element name="item" type="xsd:anyURI" nillable="true" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
</xsd:schema>