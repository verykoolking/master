<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201207021234 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) TeleManagement Forum 2012. All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 


Direct inquiries to the TM Forum office: 
 
240 Headquarters Plaza,
East Tower - 10th Floor,
Morristown, NJ  07960 USA
Tel No.  +1 973 944 5100
Fax No.  +1 973 944 5110
TM Forum Web Page: www.tmforum.org
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/mgt/config" xmlns:entity="http://www.tmforum.org/xml/tip/internal/entity" targetNamespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/mgt/config" attributeFormDefault="unqualified" elementFormDefault="qualified" version="13.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: SID_Model
                        at version: 13.0
      for all artifacts in package: org.tmforum.tip.resource.res.log.mgt.config
      Model Description:
      Model Project for SID xsd generation
      Package Description:
      
      Package data summary information:
            entities: 7
 Association Classes: 1
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 0
      </pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/internal/entity" schemaLocation="internal_entity.xsd"/><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** -->
   <xsd:element name="baseConfiguration" type="tns:BaseConfiguration"/>
   <xsd:complexType name="BaseConfiguration">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class defines a basic configuration that can be used to bootstrap the device. This will put the device into a state to enable it to be remotely managed.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfBaseConfiguration">
      <xsd:sequence>
         <xsd:element name="item" type="tns:BaseConfiguration" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="command" type="tns:Command"/>
   <xsd:complexType name="Command" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class for representing configuration commands that can be managed.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="configurationInfo" type="tns:ArrayOfConfigurationInfo" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association CommandConfigDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="commandComposite" type="tns:CommandComposite" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasConfigCommands</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCommand">
      <xsd:sequence>
         <xsd:element name="item" type="tns:Command" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="commandAtomic" type="tns:CommandAtomic"/>
   <xsd:complexType name="CommandAtomic">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class for representing commands that can be managed as their own atomic entities. That is, these commands are self-describing and operate in a stand-alone manner, and do not contain any sub-commands.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCommandAtomic">
      <xsd:sequence>
         <xsd:element name="item" type="tns:CommandAtomic" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="commandComposite" type="tns:CommandComposite"/>
   <xsd:complexType name="CommandComposite">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class for representing command sets. Each command set can be represented and managed as its own entity, but also contains one or more sub-ordinate commands or command sets. In other words, this entity is not a stand-alone command; rather, it represents an aggregation of commands. Each command within this aggregation can be individually managed.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="command2" type="tns:ArrayOfCommand" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..*</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasConfigCommands</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCommandComposite">
      <xsd:sequence>
         <xsd:element name="item" type="tns:CommandComposite" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="configurationInfo" type="tns:ConfigurationInfo"/>
   <xsd:complexType name="ConfigurationInfo" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>ConfigurationInfo is the base class for defining how a ManagedEntity is configured. Configurations are associated with a particular LogicalDevice using the DescribedByMgmtInfo aggregation. Configurations can define how a Resource or a Service is to be set up, and control the behavior of that Resource or Service. In general, both Resources and Services need to be configured in order to operate. (Note that this can be done at the factory or dynamically as the entity is operating.) Subclasses of the Configuration class define the detailed characteristics and behavior of how a configuration is built and deployed.

Configurations are implemented by associating the parent of this class, ManagementInfo, with the ManagementMethodEntity class through a combination of the DescribedByMgmtInfo and the MgmtInfoObtainedBy aggregation.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="command" type="tns:ArrayOfCommand" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association CommandConfigDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfConfigurationInfo">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ConfigurationInfo" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="currentConfiguration" type="tns:CurrentConfiguration"/>
   <xsd:complexType name="CurrentConfiguration">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class defines the current configuration of the device.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCurrentConfiguration">
      <xsd:sequence>
         <xsd:element name="item" type="tns:CurrentConfiguration" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="globalConfiguration" type="tns:GlobalConfiguration"/>
   <xsd:complexType name="GlobalConfiguration">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class defines all of the various global configuration options that are required for typical network devices.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="devicePassword" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is the password for the device. Manufacturers usually have different passwords to access different functionality. If this device has multiple passwords to access its functionality, then this password will grant access to only the most basic functionality of the device. It is analogous to the enable command of Cisco devices.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="deviceSecretPassword" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This password provides access to more advanced functionality of the device. It is analogous to the enable secret command of Cisco devices.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="vtyPassword" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is the password for virtual terminal access.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="snmpPassword" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a password that enables SNMP functionality.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfGlobalConfiguration">
      <xsd:sequence>
         <xsd:element name="item" type="tns:GlobalConfiguration" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* -->
   <xsd:element name="commandConfigDetails" type="tns:CommandConfigDetails"/>
   <xsd:complexType name="CommandConfigDetails">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an aggregation class, and is used to specify the semantics of how different Command classes are used to build up a configuration or a change to a configuration.This aggregation defines the set of commands that are used to either make up a configuration or to change a configuration. The semantics of this change is conveyed using the CommandConfigDetails aggregation class.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="ccAppliedTime" type="xsd:long" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This is a timestamp object that defines when the Commands have been applied to the Configuration (regardless of whether they succeeded or failed).</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="ccOperationType" type="xsd:int" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This is an enumerated integer that specifies how each of the commands in this aggregation are to be used in the associated configuration file. Values include:

0: Forms Configuration
1: Appends to Configuration
2: Prepends Configuration
3: Matches within Configuration</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="ccApplyState" type="xsd:int" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This is an enumerated integer that defines the state of application of the commands in this aggregation to their configuration. Values include:

0: Not applied
1: Applied, No Errors
2: Rolled Back
3: Applied, Some Errors Not Able to be Rolled Back
4: Currently Being Applied
5: Will be Applied in the Future</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCommandConfigDetails">
      <xsd:sequence>
         <xsd:element name="item" type="tns:CommandConfigDetails" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
</xsd:schema>