<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201207021234 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) TeleManagement Forum 2012. All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 


Direct inquiries to the TM Forum office: 
 
240 Headquarters Plaza,
East Tower - 10th Floor,
Morristown, NJ  07960 USA
Tel No.  +1 973 944 5100
Fax No.  +1 973 944 5110
TM Forum Web Page: www.tmforum.org
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/phy/holder/composite" xmlns:entity="http://www.tmforum.org/xml/tip/internal/entity" xmlns:hw="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/phy/hw" targetNamespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/phy/holder/composite" attributeFormDefault="unqualified" elementFormDefault="qualified" version="13.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: SID_Model
                        at version: 13.0
      for all artifacts in package: org.tmforum.tip.resource.res.phy.holder.composite
      Model Description:
      Model Project for SID xsd generation
      Package Description:
      
      Package data summary information:
            entities: 6
 Association Classes: 1
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 0
      </pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/internal/entity" schemaLocation="internal_entity.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/phy/hw" schemaLocation="sid_org_tmforum_tip_resource_res_phy_hw.xsd"/><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** -->
   <xsd:element name="bay" type="tns:Bay"/>
   <xsd:complexType name="Bay">
      <xsd:annotation>
         <xsd:documentation>
            <p>A Bay is a type of EquipmentHolder that is designed to hold various types of Equipment. It has a logical identifier, usually a component of port AIDs in TL1 based switches.

Note that the logical identifier of a Bay is typically associated with the Device (i.e., the NetworkElement). This means that the Bay IS explicitly a part of the logical model of a network.

A Bay is usually built as a pre-wired hardware assembly that contains a set of shelves and accompanying ancillary Equipment.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfBay">
      <xsd:sequence>
         <xsd:element name="item" type="tns:Bay" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="chassis" type="tns:Chassis"/>
   <xsd:complexType name="Chassis">
      <xsd:annotation>
         <xsd:documentation>
            <p>A Chassis is a type of SecureHolder that encloses other ManagedPhysicalEntities and provides a definable functionality in its own right, such as a desktop or a network device (e.g., a router or a switch).</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="heatGeneration" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an integer that defines the amount of heat generated by the Chassis in BTU/hour. This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="installationOrder" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a free-form string that defines the order of installation of components into the Chassis. This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="powerCordNumber" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an integer that defines the number of power cords which must be connected to the Chassis in order for all of its contained ManagedEntities to operate correctly. This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="numberOfChassisSlots" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This defines the number of Slots that are in the Chassis. This does NOT account for any SlotAdapters used - these are described by the CardInSlot association. This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="chassisType" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines the type of Chassis that this object is. Values include:

0: Unknown
1: Desktop
2: Low Profile Desktop
3: Pizza Box
4: Mini Tower
5: Tower
6: Portable
7: LapTop
8: Notebook
9: Sub-Notebook
10: Hand Held
11: Docking Station
12: Main System Chassis
13: Expansion Chassis
14: Bus Expansion Chassis
15: Peripheral Chassis
16: Storage Chassis
17: Rack Mount Chassis

This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="rack" type="tns:Rack" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ChassisPosition</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="chassis" type="tns:ArrayOfChassis" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association Docked</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="chassis1" type="tns:Chassis" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association Docked</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="physicalPort" type="hw:ArrayOfPhysicalPort" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PortsOnChassis</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfChassis">
      <xsd:sequence>
         <xsd:element name="item" type="tns:Chassis" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="holderComposite" type="tns:HolderComposite"/>
   <xsd:complexType name="HolderComposite" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class represents EquipmentHolders that are made up of other EquipmentHolders (i.e., instances of this class as well as the HolderAtomic base class). This provides the semantics of collecting a set of components, each of which is individually manageable, and being able to manage the set of objects as a whole. This containment is modeled using the HasHolders aggregation.

Each HolderComposite element can be a FRU.

A characteristic of this class is that its subclasses are physical objects that have complex cabling and mounting options. This class is meant to differentiate complex holders, like a Chassis, from simple holders, like a Slot.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="cableManagementStrategy" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a free-form string that contains information on how the various cables contained in the Chassis, Rack, or other type of HolderComposite object are connected and bundled. This property contains information to aid in the assembly and service of the cables contained in a SecureHolder object. This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="serviceApproach" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated, integer-valued array that defines how this entity is serviced (e.g., from the top or front), whether it has sliding trays or removable sides, and/or whether the Frame is moveable (e.g., it has rollers). Values include:

0: Unknown
1: Custom
2: Service From Top
3: Service From Front
4: Service From Back
5: Service From Side
6: Sliding Trays
7: Removable Sides
8: Moveable

This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="mountingOptions" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated 16-bit unsigned integer that defines how Equipment in this entity is mounted. Values include:

0: Unknown
1: Stand-alone
2: Rack-mounted, free access
3: Rack-mounted, restricted access
4: Enclosed in another chassis

This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfHolderComposite">
      <xsd:sequence>
         <xsd:element name="item" type="tns:HolderComposite" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="rack" type="tns:Rack"/>
   <xsd:complexType name="Rack">
      <xsd:annotation>
         <xsd:documentation>
            <p>A Rack is a type of SecureHolder that represents an enclosure in which EquipmentHolders, such as Chassis, are placed. Typically a Rack is nothing more than the enclosure, and all the functioning componentry is packaged in the Chassis.

Note that the logical identifier of a Rack is NOT typically associated with the Device (i.e., the NetworkElement). Compare this to either a Bay or a Shelf, whose logical identifier IS associated with the Device. This means that the Rack is explicitly NOT a part of the logical model of a network.

The Rack typically serves as the "master enclosure" for Chassis, Shelves and Bays. In addition, Racks can have multiple instances of multiple Devices mounted in them.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="country" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is the designation of the country for which the Rack is designed. Country code strings are as defined by ISO/IEC 3166. This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="heightInUs" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is the height of the Rack in 'U's. A 'U' is a standard unit of measure for the height of a Rack or rack-mountable components. It is equal to 1.75 inches or 4.445 cm. This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="typeOfRack" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines the type of Rack. Values include:

0: Unknown
1: Standard 19 Inch
2: Telco
3: Equipment Shelf
4: Non-Standard

This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="chassis" type="tns:ArrayOfChassis" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ChassisPosition</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfRack">
      <xsd:sequence>
         <xsd:element name="item" type="tns:Rack" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="secureHolder" type="tns:SecureHolder"/>
   <xsd:complexType name="SecureHolder" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class is a type of HolderComposite that serves as the parent for the Rack and Chassis classes. This class generalizes common properties that apply to Racks and Chassis.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="audibleAlarm" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a boolean attribute that, if TRUE, indicates that this SecureHolder is equipped with an audible alarm. This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="audibleAlarmDescription" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a free-form string that provides supplementary information for the AudibleAlarm attribute. It should only be filled in when the value of the AudibleAlarm attribute is TRUE. This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="lockPresent" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a boolean attribute that, if TRUE, indicates that this SecureHolder is protected by some type of lock. This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="visibleAlarm" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a boolean attribute that, if TRUE, indicates that the SecureHolder is equipped with one or more visible alarms (e.g., LEDs or gauges). This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="securityBreach" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated 16-bit unsigned integer attribute indicating whether a breach of the Rack was attempted. Values include:

0: Unknown
1: Other
2: No Breach
3: Unsuccessful Breach (but attempted)
4: Successful Breach

This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="visibleAlarmDescription" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a free-form string attribute that provides supplementary information for the VisibleAlarm attribute. It should only be filled in when the value of VisibleAlarm is TRUE.

This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="securityBreachDescription" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a free-form string attribute that provides supplementary information for the SecurityBreach attribute. It should only be filled in when the value of SecurityBreach is 1 ("Other").

This is an optional attribute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfSecureHolder">
      <xsd:sequence>
         <xsd:element name="item" type="tns:SecureHolder" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="shelf" type="tns:Shelf"/>
   <xsd:complexType name="Shelf">
      <xsd:annotation>
         <xsd:documentation>
            <p>A Shelf is a type of EquipmentHolder that is designed to hold various types of Equipment. It has a logical identifier that is often relative to the Bay that contains the Shelf (i.e., the unique identifier for a Shelf is often a concatenation of the network element identifier, the Bay identifier, and the Shelf identifier).

Note that the logical identifier of a Shelf is typically associated with the Device (i.e., the NetworkElement). Compare this to a Rack, whose logical identifier is NOT associated with the Device. This means that the Shelf IS explicitly a part of the logical model of a network.

Often, a Shelf is used to contain not just pluggable components (e.g., Cards, Power Supplies, etc.) but also cabling (e.g., both fiber and wire), with optional connections to external fuse, alarm, and other types of panels.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfShelf">
      <xsd:sequence>
         <xsd:element name="item" type="tns:Shelf" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* -->
   <xsd:element name="chassisPosition" type="tns:ChassisPosition"/>
   <xsd:complexType name="ChassisPosition">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class represents the semantics of the ChassisInRack aggregation. This class defines two attribute - Position and Location - to define where the Chassis is located in the Rack.This aggregation defines the set of Chassis that are contained within this Rack. It is implemented as an aggregation class.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="positionInChassis" type="xsd:int" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This is the "slot number" of the Rack that the Chassis is placed in. This is an optional attribute.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="locationInChassis" type="xsd:string" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>Some Racks have movable "shelves" that Chassis can fit into. In order to identify the position that the Chassis occupies, a pair of measurements - number of Us from the top of the Rack and number of Us from the left side of the Rack - are provided as a comma-delimited string. This is an optional attribute.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfChassisPosition">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ChassisPosition" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
</xsd:schema>