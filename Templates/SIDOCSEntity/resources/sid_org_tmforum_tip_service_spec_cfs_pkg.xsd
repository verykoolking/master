<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201207021234 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) TeleManagement Forum 2012. All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 


Direct inquiries to the TM Forum office: 
 
240 Headquarters Plaza,
East Tower - 10th Floor,
Morristown, NJ  07960 USA
Tel No.  +1 973 944 5100
Fax No.  +1 973 944 5110
TM Forum Web Page: www.tmforum.org
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/sid/org/tmforum/tip/service/spec/cfs/pkg" xmlns:entity="http://www.tmforum.org/xml/tip/internal/entity" xmlns:bundle="http://www.tmforum.org/xml/sid/org/tmforum/tip/service/spec/rfs/bundle" targetNamespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/service/spec/cfs/pkg" attributeFormDefault="unqualified" elementFormDefault="qualified" version="13.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: SID_Model
                        at version: 13.0
      for all artifacts in package: org.tmforum.tip.service.spec.cfs.pkg
      Model Description:
      Model Project for SID xsd generation
      Package Description:
      
      Package data summary information:
            entities: 8
 Association Classes: 0
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 0
      </pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/internal/entity" schemaLocation="internal_entity.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/service/spec/rfs/bundle" schemaLocation="sid_org_tmforum_tip_service_spec_rfs_bundle.xsd"/><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** -->
   <xsd:element name="bestEffortPackageSpec" type="tns:BestEffortPackageSpec"/>
   <xsd:complexType name="BestEffortPackageSpec">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class defines the BestEffortService class, which provides traffic conditioning, access, and other sub-services to a set of applications that are not assigned Platinum, Gold, Silver, or Bronze Service. In other words, traffic assigned to BestEffort will not have any QoS associated with it.

Please see the DEN-ng Service model for more details.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfBestEffortPackageSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:BestEffortPackageSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="bronzePackageSpec" type="tns:BronzePackageSpec"/>
   <xsd:complexType name="BronzePackageSpec">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class defines the Bronze Service class, which provides traffic conditioning, access, and other sub-services to a set of applications that are assigned Bronze Service.

Please see the DEN-ng Service model for more details.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfBronzePackageSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:BronzePackageSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="goldPackageSpec" type="tns:GoldPackageSpec"/>
   <xsd:complexType name="GoldPackageSpec">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class defines the Gold Service class, which provides traffic conditioning, access, and other sub-services to a set of applications that are assigned Gold Service. In this bundle, users of the GoldPackage get "better" service than users of the SilverPackage or BronzePackage.

Please see the DEN-ng Service model for more details.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfGoldPackageSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:GoldPackageSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="platinumPackageSpec" type="tns:PlatinumPackageSpec"/>
   <xsd:complexType name="PlatinumPackageSpec">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class defines the Platinum Service class, which provides traffic conditioning, access, and other sub-services to a set of applications that are assigned Platinum Service.

Please see the DEN-ng Service model for more details.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPlatinumPackageSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PlatinumPackageSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="servicePackageSpec" type="tns:ServicePackageSpec"/>
   <xsd:complexType name="ServicePackageSpec" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>A ServicePackageSpec defines the concept of bundling a set of different CustomerFacingServiceSpecs to meet the functionality specified by one or more ProductSpecifications. This enables the invariant characteristics and behavior of these CustomerFacingServices to be specified, so that multiple Products can be built from their associated ProductSpecification.

Treating this set of CustomerFacingServiceSpecs as a single object is very important for building complex Services, such as a VPN. This enables a single ProductItem (derived ultimately from a ProductSpecification) to be offered to the Customer, even though in reality the ProductItem consists of a set of different CustomerFacingServices that must work together to provide the functionality that the Customer needs.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="packageType" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines the specific type of ServicePackageSpecification that this instance is. The value "0" represents the highest, or "best", service; increasing numerical values represent the packaging of services that do not offer as much functionality as the package defined using the value of 0. Values include:

0: (e.g., Platinum)
1: (e.g., Gold)
2: (e.g., Silver)
3: (e.g., Bronze)
4: (e.g., BestEffort)

There is no limit to the number of values that may be defined. However, most Service Providers currently limit this to less than 8.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="servicePackageSpecComposite" type="tns:ServicePackageSpecComposite" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasServicePackageSpecs</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="serviceBundleSpec" type="bundle:ArrayOfServiceBundleSpec" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ServicePackageBundleDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfServicePackageSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ServicePackageSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="servicePackageSpecAtomic" type="tns:ServicePackageSpecAtomic"/>
   <xsd:complexType name="ServicePackageSpecAtomic">
      <xsd:annotation>
         <xsd:documentation>
            <p>A ServicePackageSpecAtomic object models different ServicePackageSpecs as a set of different instances of individual, independent CustomerFacingServiceSpecs. This is fundamentally different than the ServicePackageSpecComposite object, which is used to model one ServicePackageSpec as the combination of other existing ServicePackageSpecs (as well as providing its own extensions).

For example, GoldPackageSpec is an individual packaging of services, and is therefore an instance of the ServicePackageSpecAtomic class. If there was a service offering that combined the services defined by the GoldPackageSpec with those defined by another ServicePackageSpecAtomic class, such as the PlatinumPackageSpec, then that combination could be aggregated together, forming an instance of the ServicePackageSpecComposite class.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfServicePackageSpecAtomic">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ServicePackageSpecAtomic" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="servicePackageSpecComposite" type="tns:ServicePackageSpecComposite"/>
   <xsd:complexType name="ServicePackageSpecComposite">
      <xsd:annotation>
         <xsd:documentation>
            <p>This models different packages as the combination of other existing ServicePackages (as well as providing its own extensions). This is fundamentally different than ServicePackageAtomic, which models different ServicePackages as a set of different instances.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="servicePackageSpec" type="tns:ArrayOfServicePackageSpec" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasServicePackageSpecs</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfServicePackageSpecComposite">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ServicePackageSpecComposite" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="silverPackageSpec" type="tns:SilverPackageSpec"/>
   <xsd:complexType name="SilverPackageSpec">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class defines the Silver Service class, which provides traffic conditioning, access, and other sub-services to a set of applications that are assigned Silver Service.

Please see the DEN-ng Service model for more details.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfSilverPackageSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:SilverPackageSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* --><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
</xsd:schema>