<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201207021234 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) TeleManagement Forum 2012. All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 


Direct inquiries to the TM Forum office: 
 
240 Headquarters Plaza,
East Tower - 10th Floor,
Morristown, NJ  07960 USA
Tel No.  +1 973 944 5100
Fax No.  +1 973 944 5110
TM Forum Web Page: www.tmforum.org
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/phy/equip" xmlns:nrf="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/tip/nrf" xmlns:nrb="http://www.tmforum.org/xml/tip/resource/res/nrb" xmlns:nra="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/tip/nra" xmlns:entity="http://www.tmforum.org/xml/tip/internal/entity" xmlns:hw="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/phy/hw" xmlns:prot="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/prot" targetNamespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/phy/equip" attributeFormDefault="unqualified" elementFormDefault="qualified" version="13.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: SID_Model
                        at version: 13.0
      for all artifacts in package: org.tmforum.tip.resource.res.phy.equip
      Model Description:
      Model Project for SID xsd generation
      Package Description:
      
      Package data summary information:
            entities: 6
 Association Classes: 1
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 0
      </pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/tip/nrf" schemaLocation="sid_org_tmforum_tip_resource_res_log_tip_nrf.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/resource/res/nrb" schemaLocation="common_resource_res_nrb.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/tip/nra" schemaLocation="sid_org_tmforum_tip_resource_res_tip_nra.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/internal/entity" schemaLocation="internal_entity.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/phy/hw" schemaLocation="sid_org_tmforum_tip_resource_res_phy_hw.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/prot" schemaLocation="sid_org_tmforum_tip_resource_res_log_prot.xsd"/><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** -->
   <xsd:element name="card" type="tns:Card"/>
   <xsd:complexType name="Card" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is based on the DEN Card class. It is defined as follows:

This class represents a type of physical container that can be plugged into a Slot. It may represent a primary function (e.g., a networking card) or an auxiliary function (e.g., a memory card) that supports another card. All objects of this type are capable of carrying electrical and/or optical signals. They also provide a mounting point for other types of ManagedePhysicalElements, such as Chips or Cards.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="cardCompatibilityResults" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an attribute that is used to store the result of the negotiation process between a Card and its EquipmentHolder to see if they are compatible. This is the result of the isCompatible() method, with the Card being the source and the EquipmentHolder being the target, translated into a textual description.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="isConfigurablePhysically" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a boolean attribute that, if TRUE, indicates that this Card has one or more options that can be physically configured. Each of these options has a distinct physical manifestation (e.g., additional memory, or faster CPU) that usually (but not always) results in occupying more room in the Card.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="isMotherBoard" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a Boolean attribute that, if TRUE, defines this Card as either a motherboard or another type of hosting board. When FALSE, it isn't.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="isUniquePhysical" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a boolean attribute that, if TRUE, defines this Card to be physically different from other Cards of the same type and therefore requires a special slot. The unique aspects of this Card are described in the UniqueRequirementsPhysical attribute. An example might be a different form factor than other Cards of its type, or the ability to set jumpers on the Card to control its functionality (e.g., clocking).</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="slotLayout" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a free-form string that describes the positioning, spacing, typical usage, restrictions, and any other pertinent information that defines how the Card is to be positioned into the Slot.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="slotsRequired" type="xsd:int" minOccurs="0" maxOccurs="1" default="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an integer that defines the number of slots required to hold this Card. Since this is usually 1, that value is assigned as its default value.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="uniqueRequirementsPhysical" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a free-form string that contains the physically unique requirements of this Card. For example, it must go in a certain slot number because it has special dimensions. This attribute should only be filled in if the value of the IsUniquePhysical attribute is TRUE; otherwise, it should be NULL.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="hardwareVersion" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a string attribute that contains the hardware version number of this Card.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="daughterCardRequirements" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines the relationship between this Card and all DaughterCards. Values include:

1: No DaughterCard can be attached
2: Requires 1 or more DaughterCards to function correctly
3: Can optionally use 1 or more DaughterCards</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="daughterCardOperatingStatus" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines the current operating status of this Card's daughter Cards. Note that this defines the operating status of daughter Cards as viewed by the hosting Card. Status values of individual daughter Cards are defined by attributes in the daughter card itself.

This attribute only defines the physical operating characteristics of the daughter card. It does not say whether the daughter Card is functioning correctly, as that is a logical attribute.

Values include:

0: Not Applicable (doesn't have any DaughterCards)
1: All Daughter Cards are operating correctly
2: Some Daughter Cards are operating incorrectly
3: No Daughter Cards are operating correctly</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="maxDataWidth" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an integer that defines the maximum bus width of this Card. Values include:

0: Unknown
1: Special
8: 8 bit data bus
16: 16 bit data bus
24: 24 bit data bus
32: 32 bit data bus
64: 64 bit data bus
128: 128 bit data bus

The value "1" can be used for any non-standard data bus width.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="daughterCardInstallStatus" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines the current installation status of this Card's daughter Cards. Note that this defines the status of daughter Cards as viewed by the hosting Card. Status values of individual daughter Cards are defined by attributes in the daughter card itself. Values include:

0: Not Applicable (doesn't have any DaughterCards)
1: All Daughter Cards are installed
2: Some Daughter Cards are installed
3: No Daughter Cards are installed</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="card" type="tns:ArrayOfCard" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association CardOnCardDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="card1" type="tns:Card" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association CardOnCardDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="physicalPort" type="hw:ArrayOfPhysicalPort" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PortsOnCard</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCard">
      <xsd:sequence>
         <xsd:element name="item" type="tns:Card" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="equipment" type="tns:Equipment"/>
   <xsd:complexType name="Equipment" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class is based on the m.3100 specification, and is described as follows:

The Equipment object class is a class of managed objects that represents physical components of a managed device, including replaceable components. An instance of this object class must be present in only a single geographic location. An Equipment object may be nested within another Equipment object, thereby creating a containment relationship. The Equipment type shall be identified by sub-classing this object class. Either the name of the sub-class or an attribute may be used for identifying the equipment type.

Changed name of m.3100 attribute AlarmReportingIndicator to AlarmStatus, and enhanced semantics.

The m.3100 SystemTitle attribute is NOT implemented in this class, we're using CommonName instead.

We don't support the m.3100 supportedByObjectList attribute. This attribute is intended to list a set of physical and logical objects that directly affect this object. We think that the model should show this via associations, not via an embedded attribute.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
            <p>This entity  is  extendable</p>
            <p>This entity   generates Object Creation notifications</p>
            <p>This entity   generates Object Deletion notifications</p>
            <p>This entity   generates Object Discovery notifications</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="protectionSchemeState" type="prot:ProtectionSchemeState" minOccurs="0" maxOccurs="1" default="UNKNOWN">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute identifies the individual lock of this equipment. In case the equipment is not protected, the value "UNKNOWN" shall also be used.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                        <p>This attribute  is  AVC enabled</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="protectionRole" type="nrf:ProtectionRole" minOccurs="0" maxOccurs="1" default="NOT_APPLICABLE">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute defines the protection role that this equipment plays. In case the equipment is not protected, the value "NOT_APPLICABLE" shall be used.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                        <p>This attribute  is  AVC enabled</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="manufacturer" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute identifies the equipment manufacturer name. It is defined as a non-empty free format string with no semantics.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  invariant</p>
                        <p>This attribute  is  optional</p>
                        <p>This attribute  is  AVC disabled</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="isReportingAlarms" type="xsd:boolean" minOccurs="0" maxOccurs="1" default="true">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute provides an indication of whether alarm reporting for this Equipment is enabled (true) or disabled (false).</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                        <p>This attribute  is  AVC enabled</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="installedVersion" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute identifies the vendor's resource version of the installed equipment.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                        <p>This attribute  is  AVC enabled</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="installedSerialNumber" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute contains the vendor's serial number of the installed equipment. Unique, if no default is provided. At least one serial number has to be provided.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  invariant</p>
                        <p>This attribute  is  optional</p>
                        <p>This attribute  is  AVC disabled</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="installedPartNumber" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute identifies the vendor's resource Part Number (PN) of the installed equipment. If PN is not available empty string shall be used. If the part and serial number are both non-null then the part+serial number together shall be unique.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  invariant</p>
                        <p>This attribute  is  optional</p>
                        <p>This attribute  is  AVC disabled</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="installedEquipmentObjectType" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute identifies the type of the installed resource. For example, "Fan" or "STM16" for the Equipment class and "Line Shelf" for the Equipment Holder class.) The installed equipment type is invariant for the lifetime of the hardware. This is an empty string if there is no expected equipment.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                        <p>This attribute  is  AVC enabled</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="expectedEquipmentObjectType" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute identifies the type of the expected resource. For example, "Fan" or "STM16" for the Equipment class and "Line Shelf" for the Equipment Holder class.) This is an empty string if there is no expected equipment.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                        <p>This attribute  is  AVC enabled</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="asapRef" type="entity:EntityIdentifier" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                        <p>This attribute  is  AVC enabled</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="resourceFulfillmentState" type="nrb:ResourceFulfillmentState" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute supports basic administration of plug-ins.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                        <p>This attribute  is  AVC enabled</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="ituArcStateAndStatusList" type="nra:ItuArcStateAndStatusList" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>See R_TMF518_NRB_I_0001 and R_TMF518_NRB_I_0004.
See supporting document SD1-8_encodingX731M3100.pdf</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                        <p>This attribute  is  AVC enabled</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="supportingEquipment" type="tns:ArrayOfEquipment" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  unique</p>
                        <p>This association end  is  an end of association EquipmentSupportedBy</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="supportedEquipment" type="tns:ArrayOfEquipment" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  unique</p>
                        <p>This association end  is  an end of association EquipmentSupports</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="physicalTerminationPoint" type="nrf:ArrayOfPhysicalTerminationPoint" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  unique</p>
                        <p>This association end  is  an end of association supported_supporting</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfEquipment">
      <xsd:sequence>
         <xsd:element name="item" type="tns:Equipment" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="memoryCard" type="tns:MemoryCard"/>
   <xsd:complexType name="MemoryCard" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a type of Card that is dedicated to providing additional memory for use by other components of a Resource. Cards that are used to expand memory, or provide different types of memory, are examples of this type of Card. DEN-ng differentiates between this and other types of Cards, such as NetworkCards and MemoryCards.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfMemoryCard">
      <xsd:sequence>
         <xsd:element name="item" type="tns:MemoryCard" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="networkCard" type="tns:NetworkCard"/>
   <xsd:complexType name="NetworkCard" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a type of Card that is dedicated to providing networking functions, such as routing and forwarding. Line cards and port adapter cards are examples of this type of card. DEN-ng differentiates between this and other types of Cards, such as NetworkCards and MemoryCards.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfNetworkCard">
      <xsd:sequence>
         <xsd:element name="item" type="tns:NetworkCard" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="systemCard" type="tns:SystemCard"/>
   <xsd:complexType name="SystemCard" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a type of Card that is dedicated to providing system functions. Main processor boards and controller boards are examples of this type of Card. DEN-ng differentiates between this and other types of Cards, such as NetworkCards and MemoryCards.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfSystemCard">
      <xsd:sequence>
         <xsd:element name="item" type="tns:SystemCard" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="unknownCard" type="tns:UnknownCard"/>
   <xsd:complexType name="UnknownCard">
      <xsd:annotation>
         <xsd:documentation>
            <p>This object is used as a generic placeholder to represent Cards that are known to exist but are not yet identifiable via Software means.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfUnknownCard">
      <xsd:sequence>
         <xsd:element name="item" type="tns:UnknownCard" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* -->
   <xsd:element name="cardOnCardDetails" type="tns:CardOnCardDetails"/>
   <xsd:complexType name="CardOnCardDetails">
      <xsd:annotation>
         <xsd:documentation>
            <p>This association class represents the semantics of the CardOnCard aggregation. It defines an attribute that describes how the Card is mounted on or plugged into the 'other' Card.This aggregation defines Cards that can accept (but not require) an additional Card to augment the base functionality of the hosting Card.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="connectorName" type="hw:PhysicalConnector" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This attribute is an object reference to the PhysicalConnector of the hosting Card that this DaughterCard plugs into. This is a REQUIRED attribute.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="slotNumber" type="xsd:int" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This attribute is a number defining the SlotNumber of the hosting Card that this DaughterCard plugs into. If there is no such SlotNumber, then this value should be set to 0. This is a REQUIRED attribute.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="isPluggable" type="xsd:boolean" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This attribute is a Boolean that, if TRUE, means that this DaughterCard can "plug into" its hosting Card without any external cabling. FALSE means that this DaughterCard requires an external cable to attach it to its hosting Card. This is a REQUIRED attribute.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCardOnCardDetails">
      <xsd:sequence>
         <xsd:element name="item" type="tns:CardOnCardDetails" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
</xsd:schema>