<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201207021234 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) TeleManagement Forum 2012. All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 


Direct inquiries to the TM Forum office: 
 
240 Headquarters Plaza,
East Tower - 10th Floor,
Morristown, NJ  07960 USA
Tel No.  +1 973 944 5100
Fax No.  +1 973 944 5110
TM Forum Web Page: www.tmforum.org
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/fmkspec" xmlns:fmk="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/fmk" xmlns:stat="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/stat" xmlns:entity="http://www.tmforum.org/xml/tip/internal/entity" xmlns:action="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/action" xmlns:ent1="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/fmk/ent" xmlns:ent="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/evt/ent" xmlns:cond="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/cond" targetNamespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/fmkspec" attributeFormDefault="unqualified" elementFormDefault="qualified" version="13.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: SID_Model
                        at version: 13.0
      for all artifacts in package: org.tmforum.tip.cbe.policy.fmkspec
      Model Description:
      Model Project for SID xsd generation
      Package Description:
      The Policy Specification ABE contains entities that define the invariant characteristics and behavior of policy entities. This enables multiple instances to be derived from a single specification entity. In this derivation, each instance will use the invariant characteristics and behavior defined in its associated template.

This domain includes specifications for a PolicyRule, its components, and how multiple PolicyRules can be grouped together.
      Package data summary information:
            entities: 9
 Association Classes: 0
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 0
      </pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/fmk" schemaLocation="sid_org_tmforum_tip_cbe_policy_fmk.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/stat" schemaLocation="sid_org_tmforum_tip_cbe_policy_struct_stat.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/internal/entity" schemaLocation="internal_entity.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/action" schemaLocation="sid_org_tmforum_tip_cbe_policy_struct_action.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/fmk/ent" schemaLocation="sid_org_tmforum_tip_cbe_policy_fmk_ent.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/evt/ent" schemaLocation="sid_org_tmforum_tip_cbe_policy_struct_evt_ent.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/cond" schemaLocation="sid_org_tmforum_tip_cbe_policy_struct_cond.xsd"/><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** -->
   <xsd:element name="policyActionSpec" type="tns:PolicyActionSpec"/>
   <xsd:complexType name="PolicyActionSpec">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class that is used to define the invariant characteristics (attributes, methods, constraints and relationships) of a PolicyAction entity.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyAction" type="action:ArrayOfPolicyAction" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association SpecifiesPolicyAction</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyActionSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyActionSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyConditionSpec" type="tns:PolicyConditionSpec"/>
   <xsd:complexType name="PolicyConditionSpec">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class that is used to define the invariant characteristics (attributes, methods, constraints and relationships) of a PolicyCondition entity.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyCondition" type="cond:ArrayOfPolicyCondition" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association SpecifiesPolicyCondition</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyConditionSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyConditionSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyEventSpec" type="tns:PolicyEventSpec"/>
   <xsd:complexType name="PolicyEventSpec" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class that is used to define the invariant characteristics and behavior (attributes, methods, constraints, and relationships) of a PolicyEvent.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyEventSpecType" type="tns:PolicyEventSpecType" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association CategorizesPolicyEventSpecs</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyEventSpecComposite" type="tns:PolicyEventSpecComposite" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasPolicyEventSpecs</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyEvent" type="ent:ArrayOfPolicyEvent" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association SpecifiesPolicyEvent</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyEventSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyEventSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyEventSpecAtomic" type="tns:PolicyEventSpecAtomic"/>
   <xsd:complexType name="PolicyEventSpecAtomic">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class that is used to define the invariant characteristics and behavior (attributes, methods, constraints, and relationships) of a PolicyEventAtomic entity.

PolicyEventSpecAtomic entities are stand-alone specifications that define the invariant characteristics and behavior of single (i.e., atomic) PolicyEvents.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyEventSpecAtomic">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyEventSpecAtomic" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyEventSpecComposite" type="tns:PolicyEventSpecComposite"/>
   <xsd:complexType name="PolicyEventSpecComposite">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class that is used to define the invariant characteristics and behavior (attributes, methods, constraints, and relationships) of a PolicyEventComposite entity.

PolicyEventSpecComposite entities are specifications that define the invariant characteristics and behavior of a group of related PolicyEvents. These PolicyEvents can be PolicyEventAtomic and/or PolicyEventComposite entities. The instance that is represented by the PolicyEventSpecComposite entity is a named managed object.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyEventSpec" type="tns:ArrayOfPolicyEventSpec" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasPolicyEventSpecs</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyEventSpecComposite">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyEventSpecComposite" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyEventSpecType" type="tns:PolicyEventSpecType"/>
   <xsd:complexType name="PolicyEventSpecType">
      <xsd:annotation>
         <xsd:documentation>
            <p>The PolicyEventSpecType class defines a generic category of PolicyEventSpecs. Each PolicyEventSpecType serves to group a set of particular PolicyEventSpecs that share the same behavior and other semantics. One result of this is to be able to more efficiently define a set of related PolicyEventSpecs that can be grouped together to form a higher-level, or composite, PolicyEventSpec.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyEventSpec" type="tns:ArrayOfPolicyEventSpec" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association CategorizesPolicyEventSpecs</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyEventSpecType">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyEventSpecType" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyRuleSpec" type="tns:PolicyRuleSpec"/>
   <xsd:complexType name="PolicyRuleSpec">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class that is used to define the invariant characteristics (attributes, methods, constraints and relationships) of a PolicyRule entity.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyActionSelectCriteria" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an attribute that contains an OCL expression to prescribe any limitations on the types of PolicyActions that can be used with any PolicyRules that are derived from this particular PolicyRuleSpec. This enables a PolicyRuleSpec to be built that defines what types of PolicyActions can be used to build PolicyRules. This in turn ensures that a given set of PolicyRules carry standard functionality.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyConditionSelectCriteria" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an attribute that contains an OCL expression to prescribe any limitations on the types of PolicyConditions that can be used with any PolicyRules that are derived from this particular PolicyRuleSpec. This enables a PolicyRuleSpec to be built that defines what types of PolicyConditions can be used to build PolicyRules. This in turn ensures that a given set of PolicyRules carry standard functionality.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyEventSelectCriteria" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an attribute that contains an OCL expression to prescribe any limitations on the types of PolicyEvents that can be used with any PolicyRules that are derived from this particular PolicyRuleSpec. This enables a PolicyRuleSpec to be built that defines what types of PolicyEvents can be used to trigger the evaluation of PolicyRules. This in turn ensures that a given set of PolicyRules carry standard functionality.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="sequencedActions" type="xsd:int" minOccurs="0" maxOccurs="1" default="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer defines how the ordering of the PolicyActions associated with this PolicyRule is to be interpreted.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="executionStrategy" type="xsd:int" minOccurs="0" maxOccurs="1" default="2">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines the strategy to be used when executing the sequenced actions aggregated by this PolicyRule. Defined execution strategies include:

0: Unknown
1: Do Until Success
2: Do All
3: Do Until Failure
4: Do All Without Failure or Do Nothing

"Do Until Success" means that actions should be executed according to their predefined order, until successful execution of a single action. At that point, the process should stop (even if there are additional actions that could be executed).

"Do All" means that all actions should be executed that are part of the set, according to their predefined order. This should continue, even if one or more of the actions fails.

"Do Until Failure" means that all actions should be executed according to their predefined order until an action fails to execute. At that point, the entire sequence should be stopped.

Finally, "Do All Without Failure or Do Nothing" means that all actions specified should be performed. However, if a failure occurs, then NONE of the actions should be performed. This implies EITHER the ability to look-ahead and ensure that the actions will be able to be performed successfully, or the ability to perform a rollback of that action and all previous actions when an error is encountered.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyRule" type="ent1:ArrayOfPolicyRule" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association SpecifiesPolicyRule</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyRuleSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyRuleSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policySetSpec" type="tns:PolicySetSpec"/>
   <xsd:complexType name="PolicySetSpec" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an abstract base class that is used to define the invariant characteristics (attributes, methods, constraints and relationships) of a PolicySet entity. It is further refined by the PolicyRuleSpec.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="decisionStrategy" type="xsd:int" minOccurs="0" maxOccurs="1" default="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that specifies the particular decision strategy to be used in this PolicySet. Values include:

0: Unknown
1: MatchFirst
2: MatchAll

MatchFirst enforces the actions of the first rule that evaluates to TRUE; policy evaluation then STOPS, meaning that all subsequent rules are no longer evaluated.

MatchAll enforces the actions of all rules that evaluate to TRUE. This is equivalent to performing two passes through the rule set. The first pass gathers all PolicyRules that evaluate to true and places them in a group. The second pass then executes only those rules that evaluated to true. Execution of these rules is controlled through the Priority property (on the aggregation PolicySetComponent), which defines the order in which the PolicyRules execute.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policySet" type="fmk:ArrayOfPolicySet" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association SpecifiesPolicySet</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicySetSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicySetSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyStatementSpec" type="tns:PolicyStatementSpec"/>
   <xsd:complexType name="PolicyStatementSpec">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is a concrete base class that is used to define the invariant characteristics (attributes, methods, constraints and relationships) of a PolicyStatement entity.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyStatement" type="stat:ArrayOfPolicyStatement" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association SpecifiesPolicyStatement</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyStatementSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyStatementSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* --><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
</xsd:schema>