<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201207021234 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) TeleManagement Forum 2012. All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 


Direct inquiries to the TM Forum office: 
 
240 Headquarters Plaza,
East Tower - 10th Floor,
Morristown, NJ  07960 USA
Tel No.  +1 973 944 5100
Fax No.  +1 973 944 5110
TM Forum Web Page: www.tmforum.org
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/appli/server" xmlns:appli="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/appli" xmlns:device="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/device" xmlns:root="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/root" xmlns:entity="http://www.tmforum.org/xml/tip/internal/entity" xmlns:base="http://www.tmforum.org/xml/tip/cbe/base" targetNamespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/appli/server" attributeFormDefault="unqualified" elementFormDefault="qualified" version="13.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: SID_Model
                        at version: 13.0
      for all artifacts in package: org.tmforum.tip.cbe.policy.appli.server
      Model Description:
      Model Project for SID xsd generation
      Package Description:
      
      Package data summary information:
            entities: 4
 Association Classes: 4
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 0
      </pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/appli" schemaLocation="sid_org_tmforum_tip_cbe_policy_appli.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/resource/res/log/device" schemaLocation="sid_org_tmforum_tip_resource_res_log_device.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/root" schemaLocation="sid_org_tmforum_tip_cbe_root.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/internal/entity" schemaLocation="internal_entity.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/cbe/base" schemaLocation="common_cbe_base.xsd"/><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** -->
   <xsd:element name="policyDecisionPoint" type="tns:PolicyDecisionPoint"/>
   <xsd:complexType name="PolicyDecisionPoint">
      <xsd:annotation>
         <xsd:documentation>
            <p>A PolicyDecisionPoint is a type of PolicyApplication. It makes policy decisions for itself or for other entities that request such decisions, such as PolicyEnforcementPoints (PEPs) and PolicyExecutionPoints (PXPs). One or more PolicyDecisionPoints are contained in a PolicyServer.

PDPs use policies to configure or answer queries from policy-capable network elements or from an operator of the PBNM system. An example of a query is an RSVP admission request - a decision must be made to either accept or reject the request by the receiving network element. Since the network element doesn't have any idea about the overall state of the network, it makes a request of the PDP, asking the PDP if the RSVP request should be allowed. Thus, the PDP serves as the interface between the network and higher level processes.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="logicalDevice" type="device:ArrayOfLogicalDevice" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  unique</p>
                        <p>This association end  is  an end of association ConfigureDeviceWithPDP</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyEnforcementPoint" type="tns:ArrayOfPolicyEnforcementPoint" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..*</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PEPDirectionDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyExecutionPoint" type="tns:ArrayOfPolicyExecutionPoint" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..*</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PXPDirectionDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyDecisionPoint">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyDecisionPoint" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyEnforcementPoint" type="tns:PolicyEnforcementPoint"/>
   <xsd:complexType name="PolicyEnforcementPoint">
      <xsd:annotation>
         <xsd:documentation>
            <p>A PolicyEnforcementPoint is a type of PolicyApplication, and is used to verify that a prescribed set of PolicyActions have been successfully executed on a set of PolicyTargets.

A PolicyEnforcementPoint serves as an interface between the devices that policy is executed on and the policy decision-makers (such as the PolicyDecisionPoint) of the policy. PolicyEnforcementPoints request work to be performed from PolicyDecisionPoints, and then enforce decisions made by PolicyExecutionPoints on their PolicyTargets. One or more PolicyEnforcementPoints are contained in a PolicyServer.

The combination of a PolicyExecutionPoint and a PolicyEnforcementPoint enable the act of executing a decision (made by a PolicyExecutionPoint) to be separated from the act of ensuring that the executing actions were performed correctly, and had the desired results (both of these latter two functions are performed by the PolicyEnforcementPoint).</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyDecisionPoint" type="tns:PolicyDecisionPoint" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PEPDirectionDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyExecutionPoint" type="tns:ArrayOfPolicyExecutionPoint" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..*</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PXPEnforcementDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyEnforcementPoint">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyEnforcementPoint" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyExecutionPoint" type="tns:PolicyExecutionPoint"/>
   <xsd:complexType name="PolicyExecutionPoint">
      <xsd:annotation>
         <xsd:documentation>
            <p>A PolicyExecutionPoint is an entity that is used to execute a prescribed set of PolicyActions on a set of PolicyTargets.

The combination of a PolicyExecutionPoint and a PolicyEnforcementPoint enable the act of executing a decision (made by a PolicyDecisionPoint) to be separated from the act of ensuring that the executing actions were performed correctly, and had the desired results.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyDecisionPoint" type="tns:PolicyDecisionPoint" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PXPDirectionDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyEnforcementPoint" type="tns:ArrayOfPolicyEnforcementPoint" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..*</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PXPEnforcementDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="managedEntity" type="root:ArrayOfManagedEntity" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association PolicyActionPerformedDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyExecutionPoint">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyExecutionPoint" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyServer" type="tns:PolicyServer"/>
   <xsd:complexType name="PolicyServer">
      <xsd:annotation>
         <xsd:documentation>
            <p>A PolicyServer is a fundamental building block of a policy-based management system. It represents both a set of core functionality for implementing policy as well as a unit of distribution in a distributed implementation.

With respect to functionality, a PolicyServer is an entity that is either manufactured or is constructed by integrating the functionality of different PDPs, PXPs, PEPs, and other applications. These other applications provide the logic to manage and control the set of PDPs, PXPs, and PEPs that constitute a PolicyServer. For example, conflict detection and resolution need to be applied.

Therefore, a PolicyServer is in reality an intelligent container that contains its own management logic that is supplemented by the functionality of the PEP, PXP, and PDP applications. It usually corresponds to a single PolicyDomain. While this is not strictly necessary, doing otherwise greatly complicates the resulting management logic.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyBroker" type="appli:PolicyBroker" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association BrokerCoordinationDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="policyApplication" type="appli:ArrayOfPolicyApplication" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ContainsPolicyApps</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyServer">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyServer" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* -->
   <xsd:element name="pEPDirectionDetails" type="tns:PEPDirectionDetails"/>
   <xsd:complexType name="PEPDirectionDetails">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class implements the semantics of the DirectsEnforcementOf association. This association defines the set of PolicyEnforcementPoints that are managed by this PolicyDecisionPoint.This association defines the set of PolicyEnforcementPoints that a given PolicyDecisionPoint can direct.

The semantics of this association are implemented using the PEPDirectionsDetails association class.

The cardinality of this association is 1 on the PolicyDecisionPoint side and 1..n on the PolicyEnforcementPoint side. This means that a PolicyDecisionPoint can provide decisions for one or more PolicyEnforcementPoint (note that without a PolicyEnforcementPoint a PolicyDecisionPoint is useless). However, if multiple PolicyDecisionPoints are allowed to tell a given PolicyEnforcementPoint what to do, then there is no guarantee that the PolicyDecisionPoints won't conflict with each other. Thus, there can only be one PolicyDecisionPoint for a given PolicyEnforcementPoint.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="pepRequestTimePeriod" type="base:TimePeriod" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This attribute defines the start and end times (in the form of time stamps) in which this PolicyDecisionPoint is allowed to manage this set of PolicyEnforcementPoints.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="pepCommMethod" type="xsd:int" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This is an enumerated integer that defines the communication method used between this PolicyDecisionPoint and this PolicyEnforcementPoint. Values include:

0: Not yet established
1: Telnet
2: COPS
3: Proprietary Protocol</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPEPDirectionDetails">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PEPDirectionDetails" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="pXPDirectionDetails" type="tns:PXPDirectionDetails"/>
   <xsd:complexType name="PXPDirectionDetails">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class implements the semantics of the DirectsExecutionOf association. This association defines the set of PolicyExecutionPoints that are managed by this PolicyDecisionPoint.This association defines the set of PolicyExecutionPoints that a given PolicyDecisionPoint can direct.

The semantics of this association are implemented using the PXPDirectionDetails association class.

The cardinality of this association is 1 on the PolicyDecisionPoint side and 1..n on the PolicyExecutionPoint side. This means that a PolicyDecisionPoint can provide decisions for one or more PolicyExecutionPoints (note that without a PolicyExecutionPoint, a PolicyDecisionPoint is useless). However, if multiple PolicyDecisionPoints are allowed to tell a given PolicyExecutionPoint what to do, then there is no guarantee that the PolicyDecisionPoints won't conflict with each other. Thus, there can only be one PolicyDecisionPoint for a given PolicyExecutionPoint.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="pxpRequestTimePeriod" type="base:TimePeriod" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This attribute defines the start and end times (in the form of time stamps) in which this PolicyDecisionPoint is allowed to manage this set of PolicyExecutionPoints.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="pxpCommMethod" type="xsd:int" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This is an enumerated integer that defines the communication method used between this PolicyDecisionPoint and this PolicyExecutionPoint. Values include:

0: Not yet established
1: Telnet
2: COPS
3: Proprietary Protocol</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPXPDirectionDetails">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PXPDirectionDetails" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="pXPEnforcementDetails" type="tns:PXPEnforcementDetails"/>
   <xsd:complexType name="PXPEnforcementDetails">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class implements the semantics of the EnforcesExecutionOf association. This association defines the set of PolicyEnforcementPoints whose actions are enforced by this PolicyEnforcementPoint.This association defines the set of PolicyExecutionPoints whose actions are enforced by a particular PolicyEnforcementPoint.

In contrast to the DirectsExecution association, the cardinality of this association is 1..n on both sides. Each side is 1..n because all PolicyExecutionPoints must have at least one associated PolicyEnforcementPoint, but may have more (if, for example, different PolicyEnforcementPoints are used for different functions that are controlled in a PolicyExecutionPoint). This ensure that the PolicyActions sent by a PolicyExecutionPoint can be checked (by the PolicyEnforcementPoint). Some PolicyEnforcementPoints, however, are capable of enforcing multiple PolicyExecutionPoints, and a PolicyEnforcementPoint is only relevant if it enforces the actions of a PolicyExecutionPoint.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="pxpEnforcementRequestTimePeriod" type="base:TimePeriod" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This attribute defines the start and end times (in the form of time stamps) in which this PolicyEnforcementPoint must enforce the actions taken by this PolicyExecutionPoint.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="pxpEnforcementCommMethod" type="xsd:int" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This is an enumerated integer that defines the communication method used between this PolicyExecutionPoint and this PolicyEnforcementPoint. Values include:

0: Not yet established
1: Telnet
2: COPS
3: Proprietary Protocol</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPXPEnforcementDetails">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PXPEnforcementDetails" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyActionPerformedDetails" type="tns:PolicyActionPerformedDetails"/>
   <xsd:complexType name="PolicyActionPerformedDetails">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class implements the semantics of the PolicyActionPerformedOn association. This association defines the set of PolicyActions that are performed on a ManagedEntity.

The DEN-ng system view defines much more detailed semantics to implement this association, such as policies that control what types of actions can be performed on which entities during what time periods.
This association defines the set of PolicyActions that are performed on a ManagedEntity as a part of the policy management process. The semantics of this association are implemented by the PolicyActionPerformedDetails association class.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="pxpAllowedActionTimePeriod" type="base:TimePeriod" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This attribute defines the start and end times (in the form of time stamps) in which this PolicyExecutionPoint can perform actions on this ManagedEntity.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="pxpActionCommMethod" type="xsd:int" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This is an enumerated integer that defines the communication method used between this ManagedEntity and this PolicyExecutionPoint. Values include:

0: Not yet established
1: Telnet
2: COPS
3: Proprietary Protocol</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyActionPerformedDetails">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyActionPerformedDetails" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
</xsd:schema>