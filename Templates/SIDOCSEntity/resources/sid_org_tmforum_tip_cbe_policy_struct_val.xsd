<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201207021234 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) TeleManagement Forum 2012. All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 


Direct inquiries to the TM Forum office: 
 
240 Headquarters Plaza,
East Tower - 10th Floor,
Morristown, NJ  07960 USA
Tel No.  +1 973 944 5100
Fax No.  +1 973 944 5110
TM Forum Web Page: www.tmforum.org
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/val" xmlns:var="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/var" xmlns:entity="http://www.tmforum.org/xml/tip/internal/entity" targetNamespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/val" attributeFormDefault="unqualified" elementFormDefault="qualified" version="13.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: SID_Model
                        at version: 13.0
      for all artifacts in package: org.tmforum.tip.cbe.policy.struct.val
      Model Description:
      Model Project for SID xsd generation
      Package Description:
      
      Package data summary information:
            entities: 9
 Association Classes: 1
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 0
      </pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/cbe/policy/struct/var" schemaLocation="sid_org_tmforum_tip_cbe_policy_struct_var.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/internal/entity" schemaLocation="internal_entity.xsd"/><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** -->
   <xsd:element name="bitStringValue" type="tns:BitStringValue"/>
   <xsd:complexType name="BitStringValue">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class is used to represent a single or a set of bit string values. A bit string is defined as a string whose individual characters have the value "0" or "1". No other values are allowed.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="valueBitStringList" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute is an array of strings, defined in an unordered list , each representing a single bit string or a set of bit strings. Each string entry is either:

- a single bit string, such as 11110101
- a range of bit strings specified using a bit string and a bit
mask. The bit string and mask fields must have the same
number of bits specified. The mask bit string specifies the
significant bits in the bit string value. An example is:
100110,101110</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfBitStringValue">
      <xsd:sequence>
         <xsd:element name="item" type="tns:BitStringValue" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="booleanValue" type="tns:BooleanValue"/>
   <xsd:complexType name="BooleanValue">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class is used to represent a Boolean (TRUE/FALSE) value.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="valueBooleanList" type="xsd:boolean" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a Boolean attribute, whose value is used to represent a Boolean policy value.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfBooleanValue">
      <xsd:sequence>
         <xsd:element name="item" type="tns:BooleanValue" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="iPAddressValue" type="tns:IPAddressValue"/>
   <xsd:complexType name="IPAddressValue">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class is used to provide an unordered list of IPv4 addresses, IPv6 addresses, ranges of IPv4 addresses, ranges of IPv6 addresses, and hostnames to be matched against in a policy condition. The format of each string is specified according to the ABNF definition of an IPv4 address.

If a hostname is matched against another valid IP address, the match is done by resolving the hostname into
a valid IPv4 or IPv6 address. Matching hostnames against each other, like matching IP addresses (of the same type) against each other, is done using a string comparison. Matching an IPv4 address against an IPv6 address fails.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="addressValueList" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an array of string values. Each string value contains a particular value to filter on. Note that all values must have the format specified in the Format attribute of this class.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="valueAddressFormat" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer attribute that contains one of 5 different representations for an address or address range, as specified below:

- 0: a single address in dot notation, such as 12.1.1.2
- 1: an address range specified by an address with a prefix,
such as 12.1.1.0/15
- 2: an address range specified by a starting address in dot
notation and an ending address in dot notation, separated
by "-". The range includes all addresses between the
range's starting and ending addresses, including these two
addresses, such as 12.1.1.3-12.1.22.5
- 3: an address range specified by an address and
mask. The address and mask are represented in dot
notation, separated by a comma ",", such as
2.3.128.0,255.255.248.0.
- 4: a single Hostname, as specified in RFC1035</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="typeOfAddress" type="xsd:int" minOccurs="0" maxOccurs="1" default="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that is used to specify the type of IP address that this instance represents. Values include:

1: IPv4
2: IPv6
3: hostname</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfIPAddressValue">
      <xsd:sequence>
         <xsd:element name="item" type="tns:IPAddressValue" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="integerValue" type="tns:IntegerValue"/>
   <xsd:complexType name="IntegerValue">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class provides a list of integer or integer range values. Each integer can be of an arbitrary size.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="valueIntegerList" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute is an array of strings, defined as an unordered list, where each integer in the list is represented by a string. This is done to accommodate the reserved words "INFINITY" and "-INFINITY". The format of this attribute takes one of the following two forms:

- a single integer value
- a range of integers. The range is specified by a starting
integer and an ending integer, separated by '..'. The
starting integer must be less than or equal to the ending
integer. The range includes all integers between the
starting and ending integers, including these two integers.

To represent a range of integers that is not bounded, the reserved words "-INFINITY" and/or "INFINITY" can be used in place of the starting and ending integers.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfIntegerValue">
      <xsd:sequence>
         <xsd:element name="item" type="tns:IntegerValue" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="mACAddressValue" type="tns:MACAddressValue"/>
   <xsd:complexType name="MACAddressValue">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class is used to define a list of MAC addresses and MAC address range values as an unordered list of strings, each specifying a MAC address or a range of MAC addresses according to the canonical 802 MAC address format. Each string entry is either:

- a single MAC address, such as 0000:00A5:0000
- a range of MAC addresses specified by an address
and mask, such as 0000:00A5:0000,FFFF:FFFF:0000,
which defines a range of MAC addresses in which the
first four octets are equal to 0000:00A5.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="macValueList" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an array of strings, each of which contains a MAC Address. Each string must be of the same format, which is specified in the macFormat attribute of this object.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="macFormat" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines how the MAC Address is represented. Values are:

0: a single address (e.g., 0000:00A5:0000)
1: an address with mask (e.g., 0000:00A5:0000, FFFF:FFFF:0000)</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfMACAddressValue">
      <xsd:sequence>
         <xsd:element name="item" type="tns:MACAddressValue" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="policyValue" type="tns:PolicyValue"/>
   <xsd:complexType name="PolicyValue" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>The PolicyValue class is an abstract base class for modeling different types of values that occur in a PolicyStatement. The PolicyValue specifies an attribute that should either be set or cleared (if used in a PolicyAction) or matched or compared in some way to a value of the PolicyVariable in a PolicyCondition.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="policyVariable" type="var:ArrayOfPolicyVariable" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..*</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ValueConstraintDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfPolicyValue">
      <xsd:sequence>
         <xsd:element name="item" type="tns:PolicyValue" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="stringValue" type="tns:StringValue"/>
   <xsd:complexType name="StringValue">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class is used to represent a single string value, or a set of string values. Each value can have wildcards.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="valueStringList" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This attribute is an array of strings, defined in an unordered list, each representing a single string. Any string can have one or more wildcards, denoted with the asterisk character (*). For example, the value "abc*def*" matches the string "abcxxxdefyz". If the asterisk character is required as part of the string value itself, it must be escaped with quotes (").</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfStringValue">
      <xsd:sequence>
         <xsd:element name="item" type="tns:StringValue" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="valueCustom" type="tns:ValueCustom"/>
   <xsd:complexType name="ValueCustom" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>ValueCustom is an abstract base class that provides two basic attributes to define custom value objects that can be used in an application-specific fashion. These two attributes are called valueModelAttribute and valueModelClass. The valueModelAttribute is a string attribute that defines the name of the attribute within the class specified in the valueModelClass attribute that is to be evaluated or set as a PolicyValue. The valueModelClass is a string attribute that defines the class name whose attribute is to be evaluated or set as a PolicyValue. This combination enables new custom subclasses of ValueCustom to be defined that specify the class and attribute that they are modeling. These new subclasses can be found by users of the current DEN-ng schema by searching for these two properties. That also enables DEN-ng users to immediately understand the purpose of new extensions.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="valueModelAttribute" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a string attribute that defines the name of the attribute within the class specified in the valueModelClass attribute that is to be evaluated or set as a PolicyValue.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="valueModelClass" type="xsd:string" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is a string attribute that defines the class name whose attribute is to be evaluated or set as a PolicyValue.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfValueCustom">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ValueCustom" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="valueStandard" type="tns:ValueStandard"/>
   <xsd:complexType name="ValueStandard" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>ValueStandard is the abstract base class for defining a set of standardized PolicyValues. This set of PolicyValues will be added to over time, and represents a set of common values that are useful in a variety of PBNM applications. The subclasses of ValueStandard are a set of classes that define the semantics of commonly occurring variables that occur in PBNM applications.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfValueStandard">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ValueStandard" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* -->
   <xsd:element name="valueConstraintDetails" type="tns:ValueConstraintDetails"/>
   <xsd:complexType name="ValueConstraintDetails">
      <xsd:annotation>
         <xsd:documentation>
            <p>This is an association class that contains the OCL expression that will be used to define the particular semantics of how this Value is constrained by this Variable. This includes constraints such as upper and lower bounds of the value that a PolicyValue object can take.This association defines any value constraints that exist between a value of a variable and the variable itself. For example, modeling an enumerated source port variable, the specific values that can be assigned to the PortSourceVariable are limited to the range of values that represent legal assignments for this source port.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="valueConstraint" type="xsd:string" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This attribute is a string that contains the specific OCL expression to define how a given PolicyValue is constrained by a particular PolicyVariable. Defining this as an attribute enables external applications to populate this constraint.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfValueConstraintDetails">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ValueConstraintDetails" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
</xsd:schema>