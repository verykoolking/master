<?xml version="1.0" encoding="UTF-8"?><!--
 *  Generated with Tigerstripe Workbench 0.7.0.201207021234 and 
 *  Plugin Nortel Networks, Hewlett-Packard Company, Optare Solutions/TIP_Soap_Generator(1.2) (1.2)
 *
 *  DO NOT EDIT THIS CODE WHICH WAS AUTOMATICALLY GENERATED
--><!--
Copyright (C) TeleManagement Forum 2012. All Rights Reserved.

This document and translations of it may be copied and furnished to others, and derivative works that comment on or otherwise explain it or assist in its implementation may be prepared, copied, published, and distributed, in whole or in part, without restriction of any kind, provided that the above copyright notice and this section are included on all such copies and derivative works. However, this document itself may not be modified in any way, including by removing the copyright notice or references to TM FORUM, except as needed for the purpose of developing any document or deliverable produced by a TM FORUM Collaboration Project Team (in which case the rules applicable to copyrights, as set forth in the TM FORUM IPR Policy, must be followed) or as required to translate it into languages other than English.

The limited permissions granted above are perpetual and will not be revoked by TM FORUM or its successors or assigns. 

This document and the information contained herein is provided on an "AS IS" basis and TM FORUM DISCLAIMS ALL WARRANTIES, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO ANY WARRANTY THAT THE USE OF THE INFORMATION HEREIN WILL NOT INFRINGE ANY OWNERSHIP RIGHTS OR ANY IMPLIED WARRANTIES OF MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. 


Direct inquiries to the TM Forum office: 
 
240 Headquarters Plaza,
East Tower - 10th Floor,
Morristown, NJ  07960 USA
Tel No.  +1 973 944 5100
Fax No.  +1 973 944 5110
TM Forum Web Page: www.tmforum.org
-->
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:tns="http://www.tmforum.org/xml/sid/org/tmforum/tip/service/spec/rfs/bundle" xmlns:pkg="http://www.tmforum.org/xml/sid/org/tmforum/tip/service/spec/cfs/pkg" xmlns:entity="http://www.tmforum.org/xml/tip/internal/entity" xmlns:base="http://www.tmforum.org/xml/tip/cbe/base" targetNamespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/service/spec/rfs/bundle" attributeFormDefault="unqualified" elementFormDefault="qualified" version="13.0">
   <xsd:annotation>
      <xsd:documentation>
         <pre>TMF XML Schema Definitions from Tigerstripe model
                      project name: SID_Model
                        at version: 13.0
      for all artifacts in package: org.tmforum.tip.service.spec.rfs.bundle
      Model Description:
      Model Project for SID xsd generation
      Package Description:
      
      Package data summary information:
            entities: 7
 Association Classes: 1
           datatypes: 0
        enumerations: 0
              events: 0
          exceptions: 0
      </pre>
      </xsd:documentation>
   </xsd:annotation>
   <xsd:import namespace="http://www.tmforum.org/xml/sid/org/tmforum/tip/service/spec/cfs/pkg" schemaLocation="sid_org_tmforum_tip_service_spec_cfs_pkg.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/internal/entity" schemaLocation="internal_entity.xsd"/>
   <xsd:import namespace="http://www.tmforum.org/xml/tip/cbe/base" schemaLocation="common_cbe_base.xsd"/><!-- ******************************* --><!-- Package Enumeration definitions --><!-- ******************************* --><!-- **************************** --><!-- Package Datatype definitions --><!-- **************************** --><!-- ************************** --><!-- package Entity definitions --><!-- ************************** -->
   <xsd:element name="coS1BundleSpec" type="tns:CoS1BundleSpec"/>
   <xsd:complexType name="CoS1BundleSpec">
      <xsd:annotation>
         <xsd:documentation>
            <p/>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCoS1BundleSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:CoS1BundleSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="coS2BundleSpec" type="tns:CoS2BundleSpec"/>
   <xsd:complexType name="CoS2BundleSpec">
      <xsd:annotation>
         <xsd:documentation>
            <p/>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCoS2BundleSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:CoS2BundleSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="coS3BundleSpec" type="tns:CoS3BundleSpec"/>
   <xsd:complexType name="CoS3BundleSpec">
      <xsd:annotation>
         <xsd:documentation>
            <p/>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCoS3BundleSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:CoS3BundleSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="coS4BundleSpec" type="tns:CoS4BundleSpec"/>
   <xsd:complexType name="CoS4BundleSpec">
      <xsd:annotation>
         <xsd:documentation>
            <p/>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfCoS4BundleSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:CoS4BundleSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="serviceBundleSpec" type="tns:ServiceBundleSpec"/>
   <xsd:complexType name="ServiceBundleSpec" abstract="true">
      <xsd:annotation>
         <xsd:documentation>
            <p>A ServiceBundleSpec is the base class for defining the different classes of bundled ResourceFacingServiceSpecs.

Conceptually, a ServiceBundleSpec is thought of as a collection to enable the needs of different sets of ResourceFacingServiceSpecs to be grouped together. The "bundle" conveys the concept of grouped ServiceSpecs that are related. Since these are ResoureFacingSpecifications, they define reusable templates for implementing the ResourceFacingServices that are required by a particular CustomerFacingService (as represented by a ServicePackage).



Therefore, a ServiceBundleSpec templatizes the invariant characteristics and behavior of this service bundling.</p>
            <p>This entity  is  abstract</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="bundleType" type="xsd:int" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p>This is an enumerated integer that defines the specific type of ServiceBundleSpecification that this instance is. The values 0-15 are reserved for Class of Service (CoS) specifications. Other numeric ranges will be defined in the next version of the DEN-ng specification.</p>
                        <p>This element is generated from an attribute.</p>
                        <p>This attribute  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="serviceBundleSpecComposite" type="tns:ServiceBundleSpecComposite" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity 0..1</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasServiceBundleSpecs</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
               <xsd:element name="servicePackageSpec" type="pkg:ArrayOfServicePackageSpec" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation shared</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association ServicePackageBundleDetails</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfServiceBundleSpec">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ServiceBundleSpec" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="serviceBundleSpecAtomic" type="tns:ServiceBundleSpecAtomic"/>
   <xsd:complexType name="ServiceBundleSpecAtomic">
      <xsd:annotation>
         <xsd:documentation>
            <p>A ServiceBundleSpecAtomic object models different ServiceBundleSpecs as a set of different instances of individual, independent ResourceFacingServiceSpecs. This is fundamentally different than the ServiceBundleSpecComposite object, which is used to model one ServiceBundleSpec as the combination of other existing ServicePackageSpecs (as well as providing its own extensions).

For example, assume that the GoldPackage service offering (which is a subclass of ServicePackage, not ServicePackageSpec), requires two different CoSService instances. This may be because the GoldPackage service offering has two different groups of applications that require two different types of traffic conditioning mechanisms. This is represented by a ServiceBundleSpecAtomic object. Now, assume that the PlatinumPackage service offering includes the GoldPackage service offering and a new service offering requiring a new set of traffic conditioining mechanisms. This requires a second ServiceBundleSpecAtomic object, as we want to reuse the first ServiceBundleSpecAtomic object. These could be aggregated together to form an instance of a ServiceBundleSpecComposite object.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence/>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfServiceBundleSpecAtomic">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ServiceBundleSpecAtomic" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:element name="serviceBundleSpecComposite" type="tns:ServiceBundleSpecComposite"/>
   <xsd:complexType name="ServiceBundleSpecComposite">
      <xsd:annotation>
         <xsd:documentation>
            <p>A ServiceBundleSpecComposite is a concrete object that defines an integrated set of ServiceBundleSpecs that collectively meets the needs of a ResourceFacingServiceSpecComposite entity. This is fundamentally different than the ServiceBundleSpecAtomic object, which is used to model one ServiceBundleSpec as the combination of other existing ServicePackageSpecs (as well as providing its own extensions).

For example, assume that the GoldPackage service offering (which is a subclass of ServicePackage, not ServicePackageSpec), requires two different CoSService instances. This may be because the GoldPackage service offering has two different groups of applications that require two different types of traffic conditioning mechanisms. This is represented by a ServiceBundleSpecAtomic object. Now, assume that the PlatinumPackage service offering includes the GoldPackage service offering and a new service offering requiring a new set of traffic conditioining mechanisms. This requires a second ServiceBundleSpecAtomic object, as we want to reuse the first ServiceBundleSpecAtomic object. These could be aggregated together to form an instance of a ServiceBundleSpecComposite object.</p>
            <p>This entity  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:complexContent>
         <xsd:extension base="entity:EntityBase">
            <xsd:sequence>
               <xsd:element name="serviceBundleSpec" type="tns:ArrayOfServiceBundleSpec" minOccurs="0" maxOccurs="1">
                  <xsd:annotation>
                     <xsd:documentation>
                        <p/>
                        <p>This element is generated from an association end.</p>
                        <p>This association end  has  multiplicity *</p>
                        <p>This association end  has  aggregation none</p>
                        <p>This association end  is  navigable</p>
                        <p>This association end  is  an end of association HasServiceBundleSpecs</p>
                        <p>This association end  is  optional</p>
                     </xsd:documentation>
                  </xsd:annotation>
               </xsd:element>
            </xsd:sequence>
         </xsd:extension>
      </xsd:complexContent>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfServiceBundleSpecComposite">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ServiceBundleSpecComposite" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************************* --><!-- Package Association Class definitions --><!-- ************************************* -->
   <xsd:element name="servicePackageBundleDetails" type="tns:ServicePackageBundleDetails"/>
   <xsd:complexType name="ServicePackageBundleDetails">
      <xsd:annotation>
         <xsd:documentation>
            <p>This class is used to implement the semantics of the ServicePackageSpecUsesServiceBundleSpecs aggregation. Note that the decision of which ServiceBundleSpecs to use to implement a particular ServicePackageSpec is a function of many factors, and is best modeled as a type of policy.

This will be expanded on in more detail in the next version of the DEN-ng specification.</p>
            <p>This association class  is  optional</p>
         </xsd:documentation>
      </xsd:annotation>
      <xsd:sequence>
         <xsd:element name="bundleSpecValidFor" type="base:TimePeriod" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This attribute defines a time period in which the use of this particular ServiceBundleSpec is allowed for implementing the associated ServicePackageSpec. The TimePeriod attribute is a complex data type consisting of a TimeStamp to mark the beginning of the TimePeriod and a TimeStamp to mark the end of the TimePeriod.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
         <xsd:element name="preferredBundleSpec" type="xsd:string" minOccurs="0" maxOccurs="1">
            <xsd:annotation>
               <xsd:documentation>
                  <p>This attribute contains the name of the ServiceBundleSpec that is preferred to be used to implement this particular ServicePackageSpec.</p>
                  <p>This element is generated from an attribute.</p>
                  <p>This attribute  is  optional</p>
               </xsd:documentation>
            </xsd:annotation>
         </xsd:element>
      </xsd:sequence>
   </xsd:complexType>
   <xsd:complexType name="ArrayOfServicePackageBundleDetails">
      <xsd:sequence>
         <xsd:element name="item" type="tns:ServicePackageBundleDetails" minOccurs="0" maxOccurs="unbounded"/>
      </xsd:sequence>
   </xsd:complexType><!-- ************************** --><!-- package Event definitions --><!-- ************************** --><!-- ************************** --><!-- package Exception definitions --><!-- ************************** -->
</xsd:schema>