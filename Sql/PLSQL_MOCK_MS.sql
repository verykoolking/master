CREATE OR REPLACE
PACKAGE NGAA_BOLTON_CONFIGURATION
AS
  PROCEDURE SET_BOLTON_SETTINGS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_BOLTON_TYPE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_BOLTON_TYPE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_BOLTON_TYPE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_BOLTON(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_BOLTON(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_BOLTON(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_MIXED_BOLTON(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_MIXED_BOLTON(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_MIXED_BOLTON(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_BOLTON_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_BOLTON_CONFIGURATION
AS
PROCEDURE SET_BOLTON_SETTINGS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END SET_BOLTON_SETTINGS;
PROCEDURE CREATE_BOLTON_TYPE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_BOLTON_TYPE;
PROCEDURE CHANGE_BOLTON_TYPE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_BOLTON_TYPE;
PROCEDURE DELETE_BOLTON_TYPE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_BOLTON_TYPE;
PROCEDURE CREATE_BOLTON(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_BOLTON;
PROCEDURE CHANGE_BOLTON(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_BOLTON;
PROCEDURE DELETE_BOLTON(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_BOLTON;
PROCEDURE CREATE_MIXED_BOLTON(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_MIXED_BOLTON;
PROCEDURE CHANGE_MIXED_BOLTON(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_MIXED_BOLTON;
PROCEDURE DELETE_MIXED_BOLTON(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_MIXED_BOLTON;
END NGAA_BOLTON_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_WALLET_CONFIGURATION
AS
  PROCEDURE SET_WALLET(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_CHARGING_MODE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_CHARGING_MODE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_CHARGING_MODE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE SET_WALLET_COMMON_CONF(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_WALLET_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_WALLET_CONFIGURATION
AS
PROCEDURE SET_WALLET(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END SET_WALLET;
PROCEDURE CREATE_CHARGING_MODE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_CHARGING_MODE;
PROCEDURE CHANGE_CHARGING_MODE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_CHARGING_MODE;
PROCEDURE DELETE_CHARGING_MODE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_CHARGING_MODE;
PROCEDURE SET_WALLET_COMMON_CONF(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END SET_WALLET_COMMON_CONF;
END NGAA_WALLET_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_TOP_UP_CONFIGURATION
AS
  PROCEDURE CREATE_TOP_UP_ORIGIN(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_TOP_UP_ORIGIN(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_TOP_UP_ORIGIN(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_AUTOMATIC_TOP_UP_MODE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_AUTOMATIC_TOP_UP_MODE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_AUTOMATIC_TOP_UP_MODE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_COMMON_TOP_UP_CONFIG(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_COMMON_TOP_UP_CONFIG(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_COMMON_TOP_UP_CONFIG(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_TOP_UP_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_TOP_UP_CONFIGURATION
AS
PROCEDURE CREATE_TOP_UP_ORIGIN(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_TOP_UP_ORIGIN;
PROCEDURE CHANGE_TOP_UP_ORIGIN(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_TOP_UP_ORIGIN;
PROCEDURE DELETE_TOP_UP_ORIGIN(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_TOP_UP_ORIGIN;
PROCEDURE CREATE_AUTOMATIC_TOP_UP_MODE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_AUTOMATIC_TOP_UP_MODE;
PROCEDURE CHANGE_AUTOMATIC_TOP_UP_MODE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_AUTOMATIC_TOP_UP_MODE;
PROCEDURE DELETE_AUTOMATIC_TOP_UP_MODE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_AUTOMATIC_TOP_UP_MODE;
PROCEDURE CREATE_COMMON_TOP_UP_CONFIG(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_COMMON_TOP_UP_CONFIG;
PROCEDURE CHANGE_COMMON_TOP_UP_CONFIG(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_COMMON_TOP_UP_CONFIG;
PROCEDURE DELETE_COMMON_TOP_UP_CONFIG(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_COMMON_TOP_UP_CONFIG;
END NGAA_TOP_UP_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_LIST_CONFIGURATION
AS
  PROCEDURE CREATE_LIST(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_LIST(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_LIST(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE SET_LIST_SETTINGS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_LIST_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_LIST_CONFIGURATION
AS
PROCEDURE CREATE_LIST(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_LIST;
PROCEDURE CHANGE_LIST(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_LIST;
PROCEDURE DELETE_LIST(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_LIST;
PROCEDURE SET_LIST_SETTINGS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END SET_LIST_SETTINGS;
END NGAA_LIST_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_TRIBE_CONFIGURATION
AS
  PROCEDURE CREATE_TRIBE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_TRIBE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_TRIBE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_TRIBE_SETTINGS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_TRIBE_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_TRIBE_CONFIGURATION
AS
PROCEDURE CREATE_TRIBE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_TRIBE;
PROCEDURE CHANGE_TRIBE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_TRIBE;
PROCEDURE DELETE_TRIBE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_TRIBE;
PROCEDURE CHANGE_TRIBE_SETTINGS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_TRIBE_SETTINGS;
END NGAA_TRIBE_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_CALENDAR_CONFIGURATION
AS
END NGAA_CALENDAR_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_CALENDAR_CONFIGURATION
AS
END NGAA_CALENDAR_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_UC_CONF
AS
  PROCEDURE CREATE_USAGE_CONTROL(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_USAGE_CONTROL(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_USAGE_CONTROL(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_UC_BOLT_ASSO_SPEC(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_UC_BOLT_ASSO_SPEC(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_UC_BOLT_ASSO_SPEC(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_UC_APPLI_COND_SPEC(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_UC_APPLI_COND_SPEC(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_UC_APPLI_COND_SPEC(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_UC_CONF;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_UC_CONF
AS
PROCEDURE CREATE_USAGE_CONTROL(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_USAGE_CONTROL;
PROCEDURE CHANGE_USAGE_CONTROL(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_USAGE_CONTROL;
PROCEDURE DELETE_USAGE_CONTROL(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_USAGE_CONTROL;
PROCEDURE CREATE_UC_BOLT_ASSO_SPEC(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_UC_BOLT_ASSO_SPEC;
PROCEDURE CHANGE_UC_BOLT_ASSO_SPEC(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_UC_BOLT_ASSO_SPEC;
PROCEDURE DELETE_UC_BOLT_ASSO_SPEC(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_UC_BOLT_ASSO_SPEC;
PROCEDURE CREATE_UC_APPLI_COND_SPEC(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_UC_APPLI_COND_SPEC;
PROCEDURE CHANGE_UC_APPLI_COND_SPEC(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_UC_APPLI_COND_SPEC;
PROCEDURE DELETE_UC_APPLI_COND_SPEC(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_UC_APPLI_COND_SPEC;
END NGAA_UC_CONF;
/
CREATE OR REPLACE
PACKAGE NGAA_USER_NOTIFICATION_CONF
AS
  PROCEDURE CREATE_MESSAGE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_MESSAGE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_MESSAGE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE SET_UN_MSG_ASS_OPER(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE SET_UN_MSG_WARNING_REN_CA(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE SET_UN_MSG_WARNING_EXP_CA(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_MESSAGE_SUBS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE UPDATE_MESSAGE_SUBS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_MESSAGE_SUBS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_USER_NOTIFICATION_CONF;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_USER_NOTIFICATION_CONF
AS
PROCEDURE CREATE_MESSAGE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_MESSAGE;
PROCEDURE CHANGE_MESSAGE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_MESSAGE;
PROCEDURE DELETE_MESSAGE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_MESSAGE;
PROCEDURE SET_UN_MSG_ASS_OPER(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END SET_UN_MSG_ASS_OPER;
PROCEDURE SET_UN_MSG_WARNING_REN_CA(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END SET_UN_MSG_WARNING_REN_CA;
PROCEDURE SET_UN_MSG_WARNING_EXP_CA(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END SET_UN_MSG_WARNING_EXP_CA;
PROCEDURE CREATE_MESSAGE_SUBS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_MESSAGE_SUBS;
PROCEDURE UPDATE_MESSAGE_SUBS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END UPDATE_MESSAGE_SUBS;
PROCEDURE DELETE_MESSAGE_SUBS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_MESSAGE_SUBS;
END NGAA_USER_NOTIFICATION_CONF;
/
CREATE OR REPLACE
PACKAGE NGAA_LIFE_CYCLE_CONFIGURATION
AS
  PROCEDURE CHANGE_LC_TIMER(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_LC_TP_RULES(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_LC_ADJ_RULES(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_LC_GT_RULES(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_LC_GP_RULES(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_LC_NOTIFY_STATUS_RULE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_LC_NOTIFY_STATUS_RULE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_LC_SUBSTATUS_TRANS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_LC_SUBSTATUS_TRANS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_LC_SUBSTATUS_TRANS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_LC_SUBSTATUS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_LC_SUBSTATUS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_LC_SUBSTATUS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_LIFE_CYCLE_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_LIFE_CYCLE_CONFIGURATION
AS
PROCEDURE CHANGE_LC_TIMER(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_LC_TIMER;
PROCEDURE CHANGE_LC_TP_RULES(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_LC_TP_RULES;
PROCEDURE CHANGE_LC_ADJ_RULES(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_LC_ADJ_RULES;
PROCEDURE CHANGE_LC_GT_RULES(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_LC_GT_RULES;
PROCEDURE CHANGE_LC_GP_RULES(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_LC_GP_RULES;
PROCEDURE CREATE_LC_NOTIFY_STATUS_RULE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_LC_NOTIFY_STATUS_RULE;
PROCEDURE DELETE_LC_NOTIFY_STATUS_RULE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_LC_NOTIFY_STATUS_RULE;
PROCEDURE CREATE_LC_SUBSTATUS_TRANS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_LC_SUBSTATUS_TRANS;
PROCEDURE CHANGE_LC_SUBSTATUS_TRANS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_LC_SUBSTATUS_TRANS;
PROCEDURE DELETE_LC_SUBSTATUS_TRANS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_LC_SUBSTATUS_TRANS;
PROCEDURE CREATE_LC_SUBSTATUS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_LC_SUBSTATUS;
PROCEDURE CHANGE_LC_SUBSTATUS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_LC_SUBSTATUS;
PROCEDURE DELETE_LC_SUBSTATUS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_LC_SUBSTATUS;
END NGAA_LIFE_CYCLE_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_NUMBERING_CONFIGURATION
AS
  PROCEDURE CREATE_DESTINATION_TYPE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_DESTINATION_TYPE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_DESTINATION_TYPE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE SET_DEST_TYPE_GROUP(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_PROVINCE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_PROVINCE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_PROVINCE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_NUMBERING_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_NUMBERING_CONFIGURATION
AS
PROCEDURE CREATE_DESTINATION_TYPE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_DESTINATION_TYPE;
PROCEDURE CHANGE_DESTINATION_TYPE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_DESTINATION_TYPE;
PROCEDURE DELETE_DESTINATION_TYPE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_DESTINATION_TYPE;
PROCEDURE SET_DEST_TYPE_GROUP(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END SET_DEST_TYPE_GROUP;
PROCEDURE CREATE_PROVINCE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_PROVINCE;
PROCEDURE CHANGE_PROVINCE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_PROVINCE;
PROCEDURE DELETE_PROVINCE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_PROVINCE;
END NGAA_NUMBERING_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_CYCLIC_ACTIONS_CONF
AS
  PROCEDURE CREATE_CYCLIC_TOPUP(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_CYCLIC_TOPUP(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_CYCLIC_TOPUP(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_CYCLIC_BOLTON(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_CYCLIC_BOLTON(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_CYCLIC_BOLTON(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_CYCLIC_CHARGE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_CYCLIC_CHARGE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_CYCLIC_CHARGE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_CA_TARIFF_CODE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_CA_TARIFF_CODE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_CA_BILLINGDAY_CODE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_CA_BILLINGDAY_CODE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_CA_BILLINGDAY_CODE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_CA_STATUS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_CA_STATUS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_CA_STATUS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_CA_LIFE_CYCLE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_CA_LIFE_CYCLE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_CA_LIFE_CYCLE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE SET_CA_SETTING(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_CYCLIC_ACTIONS_CONF;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_CYCLIC_ACTIONS_CONF
AS
PROCEDURE CREATE_CYCLIC_TOPUP(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_CYCLIC_TOPUP;
PROCEDURE CHANGE_CYCLIC_TOPUP(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_CYCLIC_TOPUP;
PROCEDURE DELETE_CYCLIC_TOPUP(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_CYCLIC_TOPUP;
PROCEDURE CREATE_CYCLIC_BOLTON(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_CYCLIC_BOLTON;
PROCEDURE CHANGE_CYCLIC_BOLTON(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_CYCLIC_BOLTON;
PROCEDURE DELETE_CYCLIC_BOLTON(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_CYCLIC_BOLTON;
PROCEDURE CREATE_CYCLIC_CHARGE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_CYCLIC_CHARGE;
PROCEDURE CHANGE_CYCLIC_CHARGE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_CYCLIC_CHARGE;
PROCEDURE DELETE_CYCLIC_CHARGE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_CYCLIC_CHARGE;
PROCEDURE CREATE_CA_TARIFF_CODE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_CA_TARIFF_CODE;
PROCEDURE CHANGE_CA_TARIFF_CODE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_CA_TARIFF_CODE;
PROCEDURE CREATE_CA_BILLINGDAY_CODE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_CA_BILLINGDAY_CODE;
PROCEDURE CHANGE_CA_BILLINGDAY_CODE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_CA_BILLINGDAY_CODE;
PROCEDURE DELETE_CA_BILLINGDAY_CODE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_CA_BILLINGDAY_CODE;
PROCEDURE CREATE_CA_STATUS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_CA_STATUS ;
PROCEDURE CHANGE_CA_STATUS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_CA_STATUS;
PROCEDURE DELETE_CA_STATUS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_CA_STATUS;
PROCEDURE CREATE_CA_LIFE_CYCLE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_CA_LIFE_CYCLE;
PROCEDURE CHANGE_CA_LIFE_CYCLE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_CA_LIFE_CYCLE;
PROCEDURE DELETE_CA_LIFE_CYCLE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_CA_LIFE_CYCLE;
PROCEDURE SET_CA_SETTING(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END SET_CA_SETTING;
END NGAA_CYCLIC_ACTIONS_CONF;
/
CREATE OR REPLACE
PACKAGE NGAA_TARIFFPLAN_CONFIGURATION
AS
  PROCEDURE CREATE_TARIFF_PLAN(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE UPDATE_TARIFF_PLAN(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_TARIFF_PLAN(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_TARIFFPLAN_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_TARIFFPLAN_CONFIGURATION
AS
PROCEDURE CREATE_TARIFF_PLAN(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_TARIFF_PLAN;
PROCEDURE UPDATE_TARIFF_PLAN(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END UPDATE_TARIFF_PLAN;
PROCEDURE DELETE_TARIFF_PLAN(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_TARIFF_PLAN;
END NGAA_TARIFFPLAN_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_TARIFFPLAN_CONFIGURATION
AS
  PROCEDURE CREATE_BULK_LOAD_FILE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE UPDATE_BULK_LOAD_FILE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_BULK_LOAD_FILE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_TARIFFPLAN_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_TARIFFPLAN_CONFIGURATION
AS
PROCEDURE CREATE_BULK_LOAD_FILE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_BULK_LOAD_FILE;
PROCEDURE UPDATE_BULK_LOAD_FILE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END UPDATE_BULK_LOAD_FILE;
PROCEDURE DELETE_BULK_LOAD_FILE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_BULK_LOAD_FILE;
END NGAA_TARIFFPLAN_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_TARIFFPLAN_CONFIGURATION
AS
  PROCEDURE CREATE_TPG_BALANCE_TRANSFER(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_TPG_BALANCE_TRANSFER(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_TPG_BALANCE_TRANSFER(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_TARIFFPLAN_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_TARIFFPLAN_CONFIGURATION
AS
PROCEDURE CREATE_TPG_BALANCE_TRANSFER(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_TPG_BALANCE_TRANSFER;
PROCEDURE CHANGE_TPG_BALANCE_TRANSFER(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_TPG_BALANCE_TRANSFER;
PROCEDURE DELETE_TPG_BALANCE_TRANSFER(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_TPG_BALANCE_TRANSFER;
END NGAA_TARIFFPLAN_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_TARIFFPLAN_CONFIGURATION
AS
  PROCEDURE CREATE_TARIFF_PLAN_MODALITIES(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE UPDATE_TARIFF_PLAN_MODALITIES(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_TARIFF_PLAN_MODALITIES(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_TARIFF_PLAN_CHANGE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE UPDATE_TARIFF_PLAN_CHANGE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_TARIFF_PLAN_CHANCE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_TARIFFPLAN_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_TARIFFPLAN_CONFIGURATION
AS
PROCEDURE CREATE_TARIFF_PLAN_MODALITIES(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_TARIFF_PLAN_MODALITIES;
PROCEDURE UPDATE_TARIFF_PLAN_MODALITIES(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END UPDATE_TARIFF_PLAN_MODALITIES;
PROCEDURE DELETE_TARIFF_PLAN_MODALITIES(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_TARIFF_PLAN_MODALITIES;
PROCEDURE CREATE_TARIFF_PLAN_CHANGE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_TARIFF_PLAN_CHANGE;
PROCEDURE UPDATE_TARIFF_PLAN_CHANGE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END UPDATE_TARIFF_PLAN_CHANGE;
PROCEDURE DELETE_TARIFF_PLAN_CHANCE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_TARIFF_PLAN_CHANCE;
END NGAA_TARIFFPLAN_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_TARIFFPLAN_CONFIGURATION
AS
  PROCEDURE CREATE_SERVICE_TARIFF_PLAN(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE UPDATE_SERVICE_TARIFF_PLAN(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_SERVICE_TARIFF_PLAN(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_TARIFFPLAN_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_TARIFFPLAN_CONFIGURATION
AS
PROCEDURE CREATE_SERVICE_TARIFF_PLAN(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_SERVICE_TARIFF_PLAN;
PROCEDURE UPDATE_SERVICE_TARIFF_PLAN(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END UPDATE_SERVICE_TARIFF_PLAN;
PROCEDURE DELETE_SERVICE_TARIFF_PLAN(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_SERVICE_TARIFF_PLAN;
END NGAA_TARIFFPLAN_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_TARIFFPLAN_CONFIGURATION
AS
  PROCEDURE SET_BALANCE_TRANSFER_SETTING(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_TARIFFPLAN_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_TARIFFPLAN_CONFIGURATION
AS
PROCEDURE SET_BALANCE_TRANSFER_SETTING(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END SET_BALANCE_TRANSFER_SETTING;
END NGAA_TARIFFPLAN_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_RATE_CONFIGURATION
AS
END NGAA_RATE_CONFIGURATION ;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_RATE_CONFIGURATION
AS
END NGAA_RATE_CONFIGURATION ;
/
CREATE OR REPLACE
PACKAGE NGAA_RATE_CONFIGURATION
AS
END NGAA_RATE_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_RATE_CONFIGURATION
AS
END NGAA_RATE_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_OPERATION_CONFIGURATION
AS
  PROCEDURE SET_OPERATION(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_CONSTRAINTS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_CONSTRAINTS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_CONSTRAINTS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_EXTERNALNOTIF_NODE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_EXTERNALNOTIF_NODE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_EXTERNALNOTIF_NODE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_NOTIFICATIONS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_NOTIFICATIONS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_NOTIFICATIONS(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_COMMUNICATIONERROR(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_COMMUNICATIONERROR(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_COMMUNICATIONERROR(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_OPERATIONTAX(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_OPERATIONTAX(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_OPERATIONTAX(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_OPERATION_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_OPERATION_CONFIGURATION
AS
PROCEDURE SET_OPERATION(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END SET_OPERATION;
PROCEDURE CREATE_CONSTRAINTS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_CONSTRAINTS;
PROCEDURE CHANGE_CONSTRAINTS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_CONSTRAINTS;
PROCEDURE DELETE_CONSTRAINTS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_CONSTRAINTS;
PROCEDURE CREATE_EXTERNALNOTIF_NODE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_EXTERNALNOTIF_NODE;
PROCEDURE CHANGE_EXTERNALNOTIF_NODE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_EXTERNALNOTIF_NODE;
PROCEDURE DELETE_EXTERNALNOTIF_NODE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_EXTERNALNOTIF_NODE;
PROCEDURE CREATE_NOTIFICATIONS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_NOTIFICATIONS;
PROCEDURE CHANGE_NOTIFICATIONS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_NOTIFICATIONS;
PROCEDURE DELETE_NOTIFICATIONS(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_NOTIFICATIONS;
PROCEDURE CREATE_COMMUNICATIONERROR(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_COMMUNICATIONERROR;
PROCEDURE CHANGE_COMMUNICATIONERROR(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_COMMUNICATIONERROR;
PROCEDURE DELETE_COMMUNICATIONERROR(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_COMMUNICATIONERROR;
PROCEDURE CREATE_OPERATIONTAX(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_OPERATIONTAX;
PROCEDURE CHANGE_OPERATIONTAX(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_OPERATIONTAX;
PROCEDURE DELETE_OPERATIONTAX(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_OPERATIONTAX;
END NGAA_OPERATION_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE NGAA_PROMOTION_CONFIGURATION
AS
  PROCEDURE CREATE_PROMOTIONAL_SEGMENT(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_PROMOTIONAL_SEGMENT(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_PROMOTIONAL_SEGMENT(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_PROMOTION(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_PROMOTION(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_PROMOTION(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_EBCPURCHASE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_EBCPURCHASE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_EBCPURCHASE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_PROMOTIONAL_PROFILE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_PROMOTIONAL_PROFILE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_PROMOTIONAL_PROFILE(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE SET_PROMOTION_PRIORIZATION(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CREATE_AWARDED_PROMO_GROUPING(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE CHANGE_AWARDED_PROMO_GROUPING(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
  PROCEDURE DELETE_AWARDED_PROMO_GROUPING(
      XML_CLOB IN CLOB,
      RESULT_CODE OUT NUMBER,
      RESULT_TEXT OUT VARCHAR2);
END NGAA_PROMOTION_CONFIGURATION;
/
CREATE OR REPLACE
PACKAGE BODY NGAA_PROMOTION_CONFIGURATION
AS
PROCEDURE CREATE_PROMOTIONAL_SEGMENT(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_PROMOTIONAL_SEGMENT;
PROCEDURE CHANGE_PROMOTIONAL_SEGMENT(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_PROMOTIONAL_SEGMENT;
PROCEDURE DELETE_PROMOTIONAL_SEGMENT(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_PROMOTIONAL_SEGMENT;
PROCEDURE CREATE_PROMOTION(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_PROMOTION;
PROCEDURE CHANGE_PROMOTION(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_PROMOTION;
PROCEDURE DELETE_PROMOTION(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_PROMOTION;
PROCEDURE CREATE_EBCPURCHASE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_EBCPURCHASE;
PROCEDURE CHANGE_EBCPURCHASE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_EBCPURCHASE;
PROCEDURE DELETE_EBCPURCHASE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_EBCPURCHASE;
PROCEDURE CREATE_PROMOTIONAL_PROFILE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_PROMOTIONAL_PROFILE;
PROCEDURE CHANGE_PROMOTIONAL_PROFILE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_PROMOTIONAL_PROFILE;
PROCEDURE DELETE_PROMOTIONAL_PROFILE(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_PROMOTIONAL_PROFILE;
PROCEDURE SET_PROMOTION_PRIORIZATION(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END SET_PROMOTION_PRIORIZATION;
PROCEDURE CREATE_AWARDED_PROMO_GROUPING(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CREATE_AWARDED_PROMO_GROUPING;
PROCEDURE CHANGE_AWARDED_PROMO_GROUPING(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END CHANGE_AWARDED_PROMO_GROUPING;
PROCEDURE DELETE_AWARDED_PROMO_GROUPING(
    XML_CLOB IN CLOB,
    RESULT_CODE OUT NUMBER,
    RESULT_TEXT OUT VARCHAR2)
AS
BEGIN
  RESULT_CODE := 0;
  RESULT_TEXT := '<XML><SERVICE ID=''OPGE''><ZONE>001</ZONE></SERVICE></XML>';
END DELETE_AWARDED_PROMO_GROUPING;
END NGAA_PROMOTION_CONFIGURATION;
/
